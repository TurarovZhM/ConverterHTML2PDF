var data = [
    {
        "body": "\n\nFPM ...  Finite Pointset Method \n\n\n\n\n\nList of members:\n\n\nFPMDOCU  ...  reference based documentation of the FPM code and FPM functionality \nIndices  ...  FPM indices for simulation entities \nInputFiles  ... InputFiles\nProgramExecution  ... ProgramExecution\nReleases  ...  information on the MESHFREE releases \nSolvers  ... Solvers\n__Constants__  ...  typical %...%-constants that can be used in the input files \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_main/FPM_main.f90 \n\n\n\n", 
        "url": "../FPM.html", 
        "id": 1, 
        "title": "FPM"
    }, 
    {
        "body": "\n\nFPMDOCU ...  reference based documentation of the FPM code and FPM functionality \n\n\n\n\n\nList of members:\n\n\nProject  ...  purpose of FPMDOCU \nSyntax  ...  syntax of the FPMDOCU statements \nNavigationFeatures  ...  features which might help for navigating the FPMDOCU pages \nDeprecated  ... Deprecated\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/FPMLOG/FPMDOCU.f90 \n\n\n\n", 
        "url": "../FPM.FPMDOCU.html", 
        "id": 2, 
        "title": "FPMDOCU"
    }, 
    {
        "body": "\n\nProject ...  purpose of FPMDOCU \n\n\n  The FPMDOCU project aims to put comments into the FPM source code, that can be collected and parsed such that html-based \n  reference of functionalities is automatically established. \n  Objectives: \n  1.) If written in a smart way, they can amount to be a reference manual for FPM-users. \n  2.) If placed in the subroutines and functions they will quickly guide the FPM developer to the locations \n      in the FPM-code where a particular functionality is implemented \n  3.) By preprocessing commands, the FPMDOCU can be turned into traceback subroutines. In case of clash of the progam \n      during startup (i.e, errors in USER_common_variables.dat or common_variables.dat) they exactly point to the \n      appropriate html-page and can, thus, give immediate help to the user. \n   \n  Currently, no explicit search function for the FPMDOCU-html-pages is implemented. For the time until this is done, \n  one can use the FPMDOCU_AllInOne facilities. \n  The FPMDOCU project aims to put comments into the FPM source code, that can be collected and parsed such that html-based \n  reference of functionalities is automatically established. \n  Objectives: \n  1.) If written in a smart way, they can amount to be a reference manual for FPM-users. \n  2.) If placed in the subroutines and functions they will quickly guide the FPM developer to the locations \n      in the FPM-code where a particular functionality is implemented \n  3.) By preprocessing commands, the FPMDOCU can be turned into traceback subroutines. In case of clash of the progam \n      during startup (i.e, errors in USER_common_variables.dat or common_variables.dat) they exactly point to the \n      appropriate html-page and can, thus, give immediate help to the user. \n   \n  Currently, no explicit search function for the FPMDOCU-html-pages is implemented. For the time until this is done, \n  one can use the FPMDOCU_AllInOne facilities. \n  The FPMDOCU project aims to put comments into the FPM source code, that can be collected and parsed such that html-based \n  reference of functionalities is automatically established. \n  Objectives: \n  1.) If written in a smart way, they can amount to be a reference manual for FPM-users. \n  2.) If placed in the subroutines and functions they will quickly guide the FPM developer to the locations \n      in the FPM-code where a particular functionality is implemented \n  3.) By preprocessing commands, the FPMDOCU can be turned into traceback subroutines. In case of clash of the progam \n      during startup (i.e, errors in USER_common_variables.dat or common_variables.dat) they exactly point to the \n      appropriate html-page and can, thus, give immediate help to the user. \n   \n  Currently, no explicit search function for the FPMDOCU-html-pages is implemented. For the time until this is done, \n  one can use the FPMDOCU_AllInOne facilities. \n  The FPMDOCU project aims to put comments into the FPM source code, that can be collected and parsed such that html-based \n  reference of functionalities is automatically established. \n  Objectives: \n  1.) If written in a smart way, they can amount to be a reference manual for FPM-users. \n  2.) If placed in the subroutines and functions they will quickly guide the FPM developer to the locations \n      in the FPM-code where a particular functionality is implemented \n  3.) By preprocessing commands, the FPMDOCU can be turned into traceback subroutines. In case of clash of the progam \n      during startup (i.e, errors in USER_common_variables.dat or common_variables.dat) they exactly point to the \n      appropriate html-page and can, thus, give immediate help to the user. \n   \n  Currently, no explicit search function for the FPMDOCU-html-pages is implemented. For the time until this is done, \n  one can use the FPMDOCU_AllInOne facilities. \n  The FPMDOCU project aims to put comments into the FPM source code, that can be collected and parsed such that html-based \n  reference of functionalities is automatically 
established. \n  Objectives: \n  1.) If written in a smart way, they can amount to be a reference manual for FPM-users. \n  2.) If placed in the subroutines and functions they will quickly guide the FPM developer to the locations \n      in the FPM-code where a particular functionality is implemented \n  3.) By preprocessing commands, the FPMDOCU can be turned into traceback subroutines. In case of clash of the progam \n      during startup (i.e, errors in USER_common_variables.dat or common_variables.dat) they exactly point to the \n      appropriate html-page and can, thus, give immediate help to the user. \n   \n  Currently, no explicit search function for the FPMDOCU-html-pages is implemented. For the time until this is done, \n  one can use the FPMDOCU_AllInOne facilities. \n  The FPMDOCU project aims to put comments into the FPM source code, that can be collected and parsed such that html-based \n  reference of functionalities is automatically established. \n  Objectives: \n  1.) If written in a smart way, they can amount to be a reference manual for FPM-users. \n  2.) If placed in the subroutines and functions they will quickly guide the FPM developer to the locations \n      in the FPM-code where a particular functionality is implemented \n  3.) By preprocessing commands, the FPMDOCU can be turned into traceback subroutines. In case of clash of the progam \n      during startup (i.e, errors in USER_common_variables.dat or common_variables.dat) they exactly point to the \n      appropriate html-page and can, thus, give immediate help to the user. \n   \n  Currently, no explicit search function for the FPMDOCU-html-pages is implemented. For the time until this is done, \n  one can use the FPMDOCU_AllInOne facilities. \n  The FPMDOCU project aims to put comments into the FPM source code, that can be collected and parsed such that html-based \n  reference of functionalities is automatically established. \n  Objectives: \n  1.) If written in a smart way, they can amount to be a reference manual for FPM-users. \n  2.) If placed in the subroutines and functions they will quickly guide the FPM developer to the locations \n      in the FPM-code where a particular functionality is implemented \n  3.) By preprocessing commands, the FPMDOCU can be turned into traceback subroutines. In case of clash of the progam \n      during startup (i.e, errors in USER_common_variables.dat or common_variables.dat) they exactly point to the \n      appropriate html-page and can, thus, give immediate help to the user. \n   \n  Currently, no explicit search function for the FPMDOCU-html-pages is implemented. For the time until this is done, \n  one can use the FPMDOCU_AllInOne facilities. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/FPMLOG/FPMDOCU.f90 \n\n\n\n", 
        "url": "../FPM.FPMDOCU.Project.html", 
        "id": 3, 
        "title": "Project"
    }, 
    {
        "body": "\n\nDeprecated\n\n\n\n\n\nList of members:\n\n\nSAVE_intervall  ...  consecutively save after a number of time cycles or a given real time interval \n\n\n\n\n\n", 
        "url": "../FPM.FPMDOCU.Deprecated.html", 
        "id": 4, 
        "title": "Deprecated"
    }, 
    {
        "body": "\n\nIndices ...  FPM indices for simulation entities \n\n\n  Indices for FPM-variables have the form %ind_NameOfVariable%. They represent physical, geometrical or organisatorial quantities.  \n  They are to be used in equations by [...Y%ind_NameOfVariable%...] or  \n  in links of the independent variables for curves by curv{$NameOfCurve}depvar{%ind_NameOfVariable%}  \n\n\n\n\nList of members:\n\n\nGeneral  ... General\nGeneral  ...  FPM indices for general simulation entities \nTRANSPORT  ...  FPM indices for TRANSPORT, i.e. solving hyperbolic problems \nLIQUID  ...  indices for the implicit (incompressible/weakly compressible) solver \nSHALLOWWATER  ...  Indices for the shallow water solver \nGASDYN  ...  Indices for the explicit (gasdynamics) solver \nPOPBAL  ...  Indices for the population balance solver \nDROPLETPHASE  ...  Indices for the droplet and particle phase solver \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.html", 
        "id": 5, 
        "title": "Indices"
    }, 
    {
        "body": "\n\nGeneral\n\n\n\n\n\nList of members:\n\n\n%ind_EdgeValue%  ... %ind_EdgeValue%\n\n\n\n\n\n", 
        "url": "../FPM.Indices.General.html", 
        "id": 6, 
        "title": "General"
    }, 
    {
        "body": "\n\nTRANSPORT ...  FPM indices for TRANSPORT, i.e. solving hyperbolic problems \n\n\n  Current PhD thesis of Tobias Seifarth  \n\n\n\n\nList of members:\n\n\n%ind_v(1)%  ...  x-component of velocity vector \n%ind_v(2)%  ...  y-component of velocity vector \n%ind_v(3)%  ...  z-component of velocity vector \n%ind_T%  ...  Temperature \n%ind_p%  ...  pressure \n%ind_p_dyn%  ...  correction pressure \n%ind_r%  ...  density \n%ind_h%  ...  smoothing length \n%ind_IN%  ...  actual index of the particle \n%ind_pnt_nearBND%  ...  ???? \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.TRANSPORT.html", 
        "id": 7, 
        "title": "TRANSPORT"
    }, 
    {
        "body": "\n\nGASDYN ...  Indices for the explicit (gasdynamics) solver \n\n\n\n\n\nList of members:\n\n\n%ind_CG(1)%  ...   \n%ind_CG(2)%  ...   \n%ind_CG(3)%  ...   \n%ind_CG(4)%  ...   \n%ind_CG_dot(1)%  ...   \n%ind_CG_dot(2)%  ...   \n%ind_CG_dot(3)%  ...   \n%ind_CG_dot(4)%  ...   \n%ind_CV%  ...   \n%ind_ETA%  ...   \n%ind_ETA_p%  ...   \n%ind_ETA_sm%  ...   \n%ind_ETA_u%  ...   \n%ind_LAM%  ...   \n%ind_MUE%  ...   \n%ind_Mdot_virt%  ...   \n%ind_PHI%  ...   \n%ind_PI(1)%  ...   \n%ind_PI(2)%  ...   \n%ind_PI(3)%  ...   \n%ind_PSI%  ...   \n%ind_RG%  ...   \n%ind_RG_dot%  ...   \n%ind_SIG%  ...   \n%ind_T%  ...   \n%ind_TurbulentWallLayer%  ...   \n%ind_XI%  ...   \n%ind_XI0%  ...   \n%ind_c%  ...   \n%ind_corpnt%  ...   \n%ind_div%  ...   \n%ind_divV_uw%  ...   \n%ind_div_bar%  ...   \n%ind_ent%  ...   \n%ind_eps%  ...   \n%ind_gradP_uw(1)%  ...   \n%ind_gradP_uw(2)%  ...   \n%ind_gradP_uw(3)%  ...   \n%ind_k%  ...   \n%ind_p%  ...  pressure given due to the gas law \n%ind_p_uw%  ...   \n%ind_r%  ...  density of the gas \n%ind_rE%  ...  total energy of the gas \n%ind_rE_dot%  ...   \n%ind_rE_dot1%  ...   \n%ind_r_check%  ...   \n%ind_r_dot%  ...   \n%ind_r_dot1%  ...   \n%ind_r_sm%  ...   \n%ind_rv(1)%  ...  momentum of the gas, x-component \n%ind_rv(2)%  ...  momentum of the gas, y-component \n%ind_rv(3)%  ...  momentum of the gas, z-component \n%ind_rv_dot(1)%  ...   \n%ind_rv_dot(2)%  ...   \n%ind_rv_dot(3)%  ...   \n%ind_rv_dot1(1)%  ...   \n%ind_rv_dot1(2)%  ...   \n%ind_rv_dot1(3)%  ...   \n%ind_tauW%  ...   \n%ind_v(1)%  ...   \n%ind_v(2)%  ...   \n%ind_v(3)%  ...   \n%ind_v_uw(1)%  ...   \n%ind_v_uw(2)%  ...   \n%ind_v_uw(3)%  ...   \n%ind_x_dot(1)%  ...   \n%ind_x_dot(2)%  ...   \n%ind_x_dot(3)%  ...   \n%ind_x_dot1(1)%  ...   \n%ind_x_dot1(2)%  ...   \n%ind_x_dot1(3)%  ...   \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.GASDYN.html", 
        "id": 8, 
        "title": "GASDYN"
    }, 
    {
        "body": "\n\n%ind_CV% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.GASDYN.%ind_CV%.html", 
        "id": 9, 
        "title": "%ind_CV%"
    }, 
    {
        "body": "\n\n%ind_RG% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.GASDYN.%ind_RG%.html", 
        "id": 10, 
        "title": "%ind_RG%"
    }, 
    {
        "body": "\n\nSyntax ...  syntax of the FPMDOCU statements \n\n\n  A line of FPMDOCU in the FPM code always starts with \"!$FPMDOCU\", not necessarily in the beginning of a line. \n  It can possibly be also at the end of a line, after some \n  legal code fragment but not in between two code fragments in the same line. \n  There are a few different syntactic items. \n  1. Hierarchy definition, providing a hierachy connection given by a short name of the hierarchy element \n  2. Alias definition: expanding the short hierarchy name into a compact, understandable sentence or phrase \n  3. Text definition: Full explanation of the hierarchy element \n  4. Text block definition \n  5. reference definitions \n  6. box/frame definitions \n  7. LaTeX equations \n  A line of FPMDOCU in the FPM code always starts with \"!$FPMDOCU\", not necessarily in the beginning of a line. \n  It can possibly be also at the end of a line, after some \n  legal code fragment but not in between two code fragments in the same line. \n  There are a few different syntactic items. \n  1. Hierarchy definition, providing a hierachy connection given by a short name of the hierarchy element \n  2. Alias definition: expanding the short hierarchy name into a compact, understandable sentence or phrase \n  3. Text definition: Full explanation of the hierarchy element \n  4. Text block definition \n  5. reference definitions \n  6. box/frame definitions \n  7. LaTeX equations \n  A line of FPMDOCU in the FPM code always starts with \"!$FPMDOCU\", not necessarily in the beginning of a line. \n  It can possibly be also at the end of a line, after some \n  legal code fragment but not in between two code fragments in the same line. \n  There are a few different syntactic items. \n  1. Hierarchy definition, providing a hierachy connection given by a short name of the hierarchy element \n  2. Alias definition: expanding the short hierarchy name into a compact, understandable sentence or phrase \n  3. Text definition: Full explanation of the hierarchy element \n  4. Text block definition \n  5. reference definitions \n  6. box/frame definitions \n  7. LaTeX equations \n  A line of FPMDOCU in the FPM code always starts with \"!$FPMDOCU\", not necessarily in the beginning of a line. \n  It can possibly be also at the end of a line, after some \n  legal code fragment but not in between two code fragments in the same line. \n  There are a few different syntactic items. \n  1. Hierarchy definition, providing a hierachy connection given by a short name of the hierarchy element \n  2. Alias definition: expanding the short hierarchy name into a compact, understandable sentence or phrase \n  3. Text definition: Full explanation of the hierarchy element \n  4. Text block definition \n  5. reference definitions \n  6. box/frame definitions \n  7. LaTeX equations \n  A line of FPMDOCU in the FPM code always starts with \"!$FPMDOCU\", not necessarily in the beginning of a line. \n  It can possibly be also at the end of a line, after some \n  legal code fragment but not in between two code fragments in the same line. \n  There are a few different syntactic items. \n  1. Hierarchy definition, providing a hierachy connection given by a short name of the hierarchy element \n  2. Alias definition: expanding the short hierarchy name into a compact, understandable sentence or phrase \n  3. Text definition: Full explanation of the hierarchy element \n  4. Text block definition \n  5. reference definitions \n  6. box/frame definitions \n  7. LaTeX equations \n  A line of FPMDOCU in the FPM code always starts with \"!$FPMDOCU\", not necessarily in the beginning of a line. \n  It can possibly be also at the end of a line, after some \n  legal code fragment but not in between two code fragments in the same line. \n  There are a few different syntactic items. \n  1. Hierarchy definition, providing a hierachy connection given by a short name of the hierarchy element \n  2. Alias definition: expanding the short hierarchy name into a compact, understandable sentence or phrase \n  3. Text 
definition: Full explanation of the hierarchy element \n  4. Text block definition \n  5. reference definitions \n  6. box/frame definitions \n  7. LaTeX equations \n  A line of FPMDOCU in the FPM code always starts with \"!$FPMDOCU\", not necessarily in the beginning of a line. \n  It can possibly be also at the end of a line, after some \n  legal code fragment but not in between two code fragments in the same line. \n  There are a few different syntactic items. \n  1. Hierarchy definition, providing a hierachy connection given by a short name of the hierarchy element \n  2. Alias definition: expanding the short hierarchy name into a compact, understandable sentence or phrase \n  3. Text definition: Full explanation of the hierarchy element \n  4. Text block definition \n  5. reference definitions \n  6. box/frame definitions \n  7. LaTeX equations \n\n\n\n\nList of members:\n\n\nBlindOutSubstring  ...  blinds out a marked substring such that it is not rendered in the html-document  \nTextDecoration  ...  give colors of emphasis on the text \na-block  ...  a=alias; short description of the hierarchy element in one line \nb-block  ...  b=block; full explanation of the hierarchy item in text-block from \nframe-block  ...  write the lines in a box \nh-block  ...  h=hierarchy; short name of hierarchy element in the context of the whole hierarchy tree \nimage-block  ...  include a picture in the text \nlatex-equation  ...  translates LaTeX into pictures \nlatex-equation-inline  ...  translates LaTeX into pictures \nlink-command  ...  find list of pages/items, which reference to the present page/item \nref-block  ...  invoke a reference link in the html-output \nsort-command  ...  sort the list of children in lexicographical order in the html-output \nt-block  ...  t=text; full explanation of the hierarchy item \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/FPMLOG/FPMDOCU.f90 \n\n\n\n", 
        "url": "../FPM.FPMDOCU.Syntax___fpmdocu___.html", 
        "id": 11, 
        "title": "Syntax___fpmdocu___"
    }, 
    {
        "body": "\n\nBlindOutSubstring ...  blinds out a marked substring such that it is not rendered in the html-document  \n\n\n  Use the icon \"___\" in order to mark beginning and end of the string to be blinded out. \n   \n  Example: for instance, the boundary conditions for velocity and pressure use many key-words in common. \n  BC_v(...) = ( %BND_wall%, ... ) \n  BC_p(...) = ( %BND_wall%, ... ) \n  In order to distinguish between the two in the FPMDOCU, on could set up \n   \n '!$FPMDOCU #h FPM.InputFiles.USER_common_variables.BoundaryConditions.BC_v.%BND_wall%___BC_v___ h#' \n '!$FPMDOCU #h FPM.InputFiles.USER_common_variables.BoundaryConditions.BC_p.%BND_wall%___BC_p___ h#' \n   \n  The true short names are still \"%BND_wall%___BC_v___\" and \"%BND_wall%___BC_p___\", such that FPMDOCU can distingiuish between them, \n  however they will both be displayed as  \"%BND_wall%\" \n  Use the icon \"___\" in order to mark beginning and end of the string to be blinded out. \n   \n  Example: for instance, the boundary conditions for velocity and pressure use many key-words in common. \n  BC_v(...) = ( %BND_wall%, ... ) \n  BC_p(...) = ( %BND_wall%, ... ) \n  In order to distinguish between the two in the FPMDOCU, on could set up \n   \n '!$FPMDOCU #h FPM.InputFiles.USER_common_variables.BoundaryConditions.BC_v.%BND_wall%___BC_v___ h#' \n '!$FPMDOCU #h FPM.InputFiles.USER_common_variables.BoundaryConditions.BC_p.%BND_wall%___BC_p___ h#' \n   \n  The true short names are still \"%BND_wall%___BC_v___\" and \"%BND_wall%___BC_p___\", such that FPMDOCU can distingiuish between them, \n  however they will both be displayed as  \"%BND_wall%\" \n  Use the icon \"___\" in order to mark beginning and end of the string to be blinded out. \n   \n  Example: for instance, the boundary conditions for velocity and pressure use many key-words in common. \n  BC_v(...) = ( %BND_wall%, ... ) \n  BC_p(...) = ( %BND_wall%, ... ) \n  In order to distinguish between the two in the FPMDOCU, on could set up \n   \n '!$FPMDOCU #h FPM.InputFiles.USER_common_variables.BoundaryConditions.BC_v.%BND_wall%___BC_v___ h#' \n '!$FPMDOCU #h FPM.InputFiles.USER_common_variables.BoundaryConditions.BC_p.%BND_wall%___BC_p___ h#' \n   \n  The true short names are still \"%BND_wall%___BC_v___\" and \"%BND_wall%___BC_p___\", such that FPMDOCU can distingiuish between them, \n  however they will both be displayed as  \"%BND_wall%\" \n  Use the icon \"___\" in order to mark beginning and end of the string to be blinded out. \n   \n  Example: for instance, the boundary conditions for velocity and pressure use many key-words in common. \n  BC_v(...) = ( %BND_wall%, ... ) \n  BC_p(...) = ( %BND_wall%, ... ) \n  In order to distinguish between the two in the FPMDOCU, on could set up \n   \n '!$FPMDOCU #h FPM.InputFiles.USER_common_variables.BoundaryConditions.BC_v.%BND_wall%___BC_v___ h#' \n '!$FPMDOCU #h FPM.InputFiles.USER_common_variables.BoundaryConditions.BC_p.%BND_wall%___BC_p___ h#' \n   \n  The true short names are still \"%BND_wall%___BC_v___\" and \"%BND_wall%___BC_p___\", such that FPMDOCU can distingiuish between them, \n  however they will both be displayed as  \"%BND_wall%\" \n  Use the icon \"___\" in order to mark beginning and end of the string to be blinded out. \n   \n  Example: for instance, the boundary conditions for velocity and pressure use many key-words in common. \n  BC_v(...) = ( %BND_wall%, ... ) \n  BC_p(...) = ( %BND_wall%, ... ) \n  In order to distinguish between the two in the FPMDOCU, on could set up \n   \n '!$FPMDOCU #h FPM.InputFiles.USER_common_variables.BoundaryConditions.BC_v.%BND_wall%___BC_v___ h#' \n '!$FPMDOCU #h FPM.InputFiles.USER_common_variables.BoundaryConditions.BC_p.%BND_wall%___BC_p___ h#' \n   \n  The true short names are still \"%BND_wall%___BC_v___\" and \"%BND_wall%___BC_p___\", such that FPMDOCU can distingiuish between them, \n  however they will both be displayed as  \"%BND_wall%\" \n  Use the icon \"___\" in order to mark beginning and end of the string to be blinded out. \n   \n  Example: for instance, the 
boundary conditions for velocity and pressure use many key-words in common. \n  BC_v(...) = ( %BND_wall%, ... ) \n  BC_p(...) = ( %BND_wall%, ... ) \n  In order to distinguish between the two in the FPMDOCU, on could set up \n   \n '!$FPMDOCU #h FPM.InputFiles.USER_common_variables.BoundaryConditions.BC_v.%BND_wall%___BC_v___ h#' \n '!$FPMDOCU #h FPM.InputFiles.USER_common_variables.BoundaryConditions.BC_p.%BND_wall%___BC_p___ h#' \n   \n  The true short names are still \"%BND_wall%___BC_v___\" and \"%BND_wall%___BC_p___\", such that FPMDOCU can distingiuish between them, \n  however they will both be displayed as  \"%BND_wall%\" \n  Use the icon \"___\" in order to mark beginning and end of the string to be blinded out. \n   \n  Example: for instance, the boundary conditions for velocity and pressure use many key-words in common. \n  BC_v(...) = ( %BND_wall%, ... ) \n  BC_p(...) = ( %BND_wall%, ... ) \n  In order to distinguish between the two in the FPMDOCU, on could set up \n   \n '!$FPMDOCU #h FPM.InputFiles.USER_common_variables.BoundaryConditions.BC_v.%BND_wall%___BC_v___ h#' \n '!$FPMDOCU #h FPM.InputFiles.USER_common_variables.BoundaryConditions.BC_p.%BND_wall%___BC_p___ h#' \n   \n  The true short names are still \"%BND_wall%___BC_v___\" and \"%BND_wall%___BC_p___\", such that FPMDOCU can distingiuish between them, \n  however they will both be displayed as  \"%BND_wall%\" \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/FPMLOG/FPMDOCU.f90 \n\n\n\n", 
        "url": "../FPM.FPMDOCU.Syntax___fpmdocu___.BlindOutSubstring.html", 
        "id": 12, 
        "title": "BlindOutSubstring"
    }, 
    {
        "body": "\n\na-block ...  a=alias; short description of the hierarchy element in one line \n\n\n  As already shown in the h-block definition, the hierarchy item can obtain an alias tag, \n  i.e. a one line short description of the FPMDOCU-item. \n   \n  The definition of the present hierarchy item with attached alias definition is \n   \n !$FPMDOCU #h FPM.FPMDOCU.Syntax.a_block h#   \n !$FPMDOCU #a a=alias; short description of the hierarchy element in one line a#  \n !$FPMDOCU #b \n !$FPMDOCU ... here now comes the text that you currently read ...  \n !$FPMDOCU b# \n   \n  As already shown in the h-block definition, the hierarchy item can obtain an alias tag, \n  i.e. a one line short description of the FPMDOCU-item. \n   \n  The definition of the present hierarchy item with attached alias definition is \n   \n !$FPMDOCU #h FPM.FPMDOCU.Syntax.a_block h#   \n !$FPMDOCU #a a=alias; short description of the hierarchy element in one line a#  \n !$FPMDOCU #b \n !$FPMDOCU ... here now comes the text that you currently read ...  \n !$FPMDOCU b# \n   \n  As already shown in the h-block definition, the hierarchy item can obtain an alias tag, \n  i.e. a one line short description of the FPMDOCU-item. \n   \n  The definition of the present hierarchy item with attached alias definition is \n   \n !$FPMDOCU #h FPM.FPMDOCU.Syntax.a_block h#   \n !$FPMDOCU #a a=alias; short description of the hierarchy element in one line a#  \n !$FPMDOCU #b \n !$FPMDOCU ... here now comes the text that you currently read ...  \n !$FPMDOCU b# \n   \n  As already shown in the h-block definition, the hierarchy item can obtain an alias tag, \n  i.e. a one line short description of the FPMDOCU-item. \n   \n  The definition of the present hierarchy item with attached alias definition is \n   \n !$FPMDOCU #h FPM.FPMDOCU.Syntax.a_block h#   \n !$FPMDOCU #a a=alias; short description of the hierarchy element in one line a#  \n !$FPMDOCU #b \n !$FPMDOCU ... here now comes the text that you currently read ...  \n !$FPMDOCU b# \n   \n  As already shown in the h-block definition, the hierarchy item can obtain an alias tag, \n  i.e. a one line short description of the FPMDOCU-item. \n   \n  The definition of the present hierarchy item with attached alias definition is \n   \n !$FPMDOCU #h FPM.FPMDOCU.Syntax.a_block h#   \n !$FPMDOCU #a a=alias; short description of the hierarchy element in one line a#  \n !$FPMDOCU #b \n !$FPMDOCU ... here now comes the text that you currently read ...  \n !$FPMDOCU b# \n   \n  As already shown in the h-block definition, the hierarchy item can obtain an alias tag, \n  i.e. a one line short description of the FPMDOCU-item. \n   \n  The definition of the present hierarchy item with attached alias definition is \n   \n !$FPMDOCU #h FPM.FPMDOCU.Syntax.a_block h#   \n !$FPMDOCU #a a=alias; short description of the hierarchy element in one line a#  \n !$FPMDOCU #b \n !$FPMDOCU ... here now comes the text that you currently read ...  \n !$FPMDOCU b# \n   \n  As already shown in the h-block definition, the hierarchy item can obtain an alias tag, \n  i.e. a one line short description of the FPMDOCU-item. \n   \n  The definition of the present hierarchy item with attached alias definition is \n   \n !$FPMDOCU #h FPM.FPMDOCU.Syntax.a_block h#   \n !$FPMDOCU #a a=alias; short description of the hierarchy element in one line a#  \n !$FPMDOCU #b \n !$FPMDOCU ... here now comes the text that you currently read ...  \n !$FPMDOCU b# \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/FPMLOG/FPMDOCU.f90 \n\n\n\n", 
        "url": "../FPM.FPMDOCU.Syntax___fpmdocu___.a-block.html", 
        "id": 13, 
        "title": "a-block"
    }, 
    {
        "body": "\n\n%ind_T% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.GASDYN.%ind_T%.html", 
        "id": 14, 
        "title": "%ind_T%"
    }, 
    {
        "body": "\n\n%ind_XI% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.GASDYN.%ind_XI%.html", 
        "id": 15, 
        "title": "%ind_XI%"
    }, 
    {
        "body": "\n\n%ind_c% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.GASDYN.%ind_c%.html", 
        "id": 16, 
        "title": "%ind_c%"
    }, 
    {
        "body": "\n\n%ind_k% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.GASDYN.%ind_k%.html", 
        "id": 17, 
        "title": "%ind_k%"
    }, 
    {
        "body": "\n\n%ind_r% ...  density of the gas \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.GASDYN.%ind_r%.html", 
        "id": 18, 
        "title": "%ind_r%"
    }, 
    {
        "body": "\n\n%ind_rE% ...  total energy of the gas \n\n\n  rE = r*u + 0.5*r*v^2 where u is the internal ernegy  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.GASDYN.%ind_rE%.html", 
        "id": 19, 
        "title": "%ind_rE%"
    }, 
    {
        "body": "\n\nTextDecoration ...  give colors of emphasis on the text \n\n\n   \n   \" This text is in red \"  while this is in normal color \n   \" This text is in blue \"  while this is in default color \n   \" This text is in green \"  while this is in default color \n   \" This text is in orange \"  while this is in default color \n   \" This text is in italic \"  while this is in default style \n   \" This text is bold \"  while this is in default style \n   \" This text is also bold \"  while this is in default style \n   \n  \"#UCVCODE\" and \"UCVCODE#\" mark beginning and end of a USER_common_variable-example, that will be rendered by coloring: \n   - $Variables$ : dark green \n   - &Alias;&     : dark read \n   - #comments   : yellow \n  here an example: \n   #UCVCODE \n   # some comment in this line \n   BC_v($DedicatedBND$) = ( %BND_slip% , &AliasForFriction;&, &AliasForMomentumControl;& ) # comments maybe also here \n   INITDATA($Material$, %ind_p_dyn%) = [ equn($EQNinitp$) ]                             # and here \n  UCVCODE#  \n   \n   \" This text is in red \"  while this is in normal color \n   \" This text is in blue \"  while this is in default color \n   \" This text is in green \"  while this is in default color \n   \" This text is in orange \"  while this is in default color \n   \" This text is in italic \"  while this is in default style \n   \" This text is bold \"  while this is in default style \n   \" This text is also bold \"  while this is in default style \n   \n   \n   \" This text is in red \"  while this is in normal color \n   \" This text is in blue \"  while this is in default color \n   \" This text is in green \"  while this is in default color \n   \" This text is in orange \"  while this is in default color \n   \" This text is in italic \"  while this is in default style \n   \" This text is bold \"  while this is in default style \n   \" This text is also bold \"  while this is in default style \n   \n   \n   \" This text is in red \"  while this is in normal color \n   \" This text is in blue \"  while this is in default color \n   \" This text is in green \"  while this is in default color \n   \" This text is in orange \"  while this is in default color \n   \" This text is in italic \"  while this is in default style \n   \" This text is bold \"  while this is in default style \n   \" This text is also bold \"  while this is in default style \n   \n   \n   \" This text is in red \"  while this is in normal color \n   \" This text is in blue \"  while this is in default color \n   \" This text is in green \"  while this is in default color \n   \" This text is in orange \"  while this is in default color \n   \" This text is in italic \"  while this is in default style \n   \" This text is bold \"  while this is in default style \n   \" This text is also bold \"  while this is in default style \n   \n   \n   \" This text is in red \"  while this is in normal color \n   \" This text is in blue \"  while this is in default color \n   \" This text is in green \"  while this is in default color \n   \" This text is in orange \"  while this is in default color \n   \" This text is in italic \"  while this is in default style \n   \" This text is bold \"  while this is in default style \n   \" This text is also bold \"  while this is in default style \n   \n   \n   \" This text is in red \"  while this is in normal color \n   \" This text is in blue \"  while this is in default color \n   \" This text is in green \"  while this is in default color \n   \" This text is in orange \"  while this is in default color \n   \" This text is in italic \"  while this is in default style \n   \" This text is bold \"  while this is in default style \n   \" This text is also bold \"  while this is in default style \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/FPMLOG/FPMDOCU.f90 \n\n\n\n", 
        "url": "../FPM.FPMDOCU.Syntax___fpmdocu___.TextDecoration.html", 
        "id": 20, 
        "title": "TextDecoration"
    }, 
    {
        "body": "\n\nb-block ...  b=block; full explanation of the hierarchy item in text-block from \n\n\n  A text-block definition starts with \"#b\". All subsequent lines are now interpreted as text, until the closing icon \"b#\" is reached. \n  An example is here: \n   \n !$FPMDOCU #h Hier.ar.chy h#  \n !$FPMDOCU #b \n !$FPMDOCU first line of text \n !$FPMDOCU second line of text \n !$FPMDOCU ... \n !$FPMDOCU last line of text \n !$FPMDOCU b# \n   \n  The advantage is simply, that the \"#b\" and \"b#\" icons do not disturb reading, if one works inside of the source \n  code files, implementing things. The \"#t...t#\" icons of a t-block are more preferable for a one line comment. \n  A text-block definition starts with \"#b\". All subsequent lines are now interpreted as text, until the closing icon \"b#\" is reached. \n  An example is here: \n   \n !$FPMDOCU #h Hier.ar.chy h#  \n !$FPMDOCU #b \n !$FPMDOCU first line of text \n !$FPMDOCU second line of text \n !$FPMDOCU ... \n !$FPMDOCU last line of text \n !$FPMDOCU b# \n   \n  The advantage is simply, that the \"#b\" and \"b#\" icons do not disturb reading, if one works inside of the source \n  code files, implementing things. The \"#t...t#\" icons of a t-block are more preferable for a one line comment. \n  A text-block definition starts with \"#b\". All subsequent lines are now interpreted as text, until the closing icon \"b#\" is reached. \n  An example is here: \n   \n !$FPMDOCU #h Hier.ar.chy h#  \n !$FPMDOCU #b \n !$FPMDOCU first line of text \n !$FPMDOCU second line of text \n !$FPMDOCU ... \n !$FPMDOCU last line of text \n !$FPMDOCU b# \n   \n  The advantage is simply, that the \"#b\" and \"b#\" icons do not disturb reading, if one works inside of the source \n  code files, implementing things. The \"#t...t#\" icons of a t-block are more preferable for a one line comment. \n  A text-block definition starts with \"#b\". All subsequent lines are now interpreted as text, until the closing icon \"b#\" is reached. \n  An example is here: \n   \n !$FPMDOCU #h Hier.ar.chy h#  \n !$FPMDOCU #b \n !$FPMDOCU first line of text \n !$FPMDOCU second line of text \n !$FPMDOCU ... \n !$FPMDOCU last line of text \n !$FPMDOCU b# \n   \n  The advantage is simply, that the \"#b\" and \"b#\" icons do not disturb reading, if one works inside of the source \n  code files, implementing things. The \"#t...t#\" icons of a t-block are more preferable for a one line comment. \n  A text-block definition starts with \"#b\". All subsequent lines are now interpreted as text, until the closing icon \"b#\" is reached. \n  An example is here: \n   \n !$FPMDOCU #h Hier.ar.chy h#  \n !$FPMDOCU #b \n !$FPMDOCU first line of text \n !$FPMDOCU second line of text \n !$FPMDOCU ... \n !$FPMDOCU last line of text \n !$FPMDOCU b# \n   \n  The advantage is simply, that the \"#b\" and \"b#\" icons do not disturb reading, if one works inside of the source \n  code files, implementing things. The \"#t...t#\" icons of a t-block are more preferable for a one line comment. \n  A text-block definition starts with \"#b\". All subsequent lines are now interpreted as text, until the closing icon \"b#\" is reached. \n  An example is here: \n   \n !$FPMDOCU #h Hier.ar.chy h#  \n !$FPMDOCU #b \n !$FPMDOCU first line of text \n !$FPMDOCU second line of text \n !$FPMDOCU ... \n !$FPMDOCU last line of text \n !$FPMDOCU b# \n   \n  The advantage is simply, that the \"#b\" and \"b#\" icons do not disturb reading, if one works inside of the source \n  code files, implementing things. The \"#t...t#\" icons of a t-block are more preferable for a one line comment. \n  A text-block definition starts with \"#b\". All subsequent lines are now interpreted as text, until the closing icon \"b#\" is reached. \n  An example is here: \n   \n !$FPMDOCU #h Hier.ar.chy h#  \n !$FPMDOCU #b \n !$FPMDOCU first line of text \n !$FPMDOCU second line of text \n !$FPMDOCU ... \n !$FPMDOCU last line of text \n !$FPMDOCU b# \n   \n  The advantage is simply, that the \"#b\" and \"b#\" icons do not disturb reading, if one works inside of the 
source \n  code files, implementing things. The \"#t...t#\" icons of a t-block are more preferable for a one line comment. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/FPMLOG/FPMDOCU.f90 \n\n\n\n", 
        "url": "../FPM.FPMDOCU.Syntax___fpmdocu___.b-block.html", 
        "id": 21, 
        "title": "b-block"
    }, 
    {
        "body": "\n\nframe-block ...  write the lines in a box \n\n\n  The icon \"#frame\" opens and the icon \"frame#\" closes a frame block. Everything that is in between will be written into a box by the html-output. \n   \n  Example: \n   \n !$FPMDOCU This is not inside of a box \n   \n   \n '!$FPMDOCU #frame' \n '!$FPMDOCU This now should be inside of a box' \n '!$FPMDOCU frame#' \n   \n  The icon \"#frame\" opens and the icon \"frame#\" closes a frame block. Everything that is in between will be written into a box by the html-output. \n   \n  Example: \n   \n !$FPMDOCU This is not inside of a box \n   \n   \n '!$FPMDOCU #frame' \n '!$FPMDOCU This now should be inside of a box' \n '!$FPMDOCU frame#' \n   \n  The icon \"#frame\" opens and the icon \"frame#\" closes a frame block. Everything that is in between will be written into a box by the html-output. \n   \n  Example: \n   \n !$FPMDOCU This is not inside of a box \n   \n   \n '!$FPMDOCU #frame' \n '!$FPMDOCU This now should be inside of a box' \n '!$FPMDOCU frame#' \n   \n  The icon \"#frame\" opens and the icon \"frame#\" closes a frame block. Everything that is in between will be written into a box by the html-output. \n   \n  Example: \n   \n !$FPMDOCU This is not inside of a box \n   \n   \n '!$FPMDOCU #frame' \n '!$FPMDOCU This now should be inside of a box' \n '!$FPMDOCU frame#' \n   \n  The icon \"#frame\" opens and the icon \"frame#\" closes a frame block. Everything that is in between will be written into a box by the html-output. \n   \n  Example: \n   \n !$FPMDOCU This is not inside of a box \n   \n   \n '!$FPMDOCU #frame' \n '!$FPMDOCU This now should be inside of a box' \n '!$FPMDOCU frame#' \n   \n  The icon \"#frame\" opens and the icon \"frame#\" closes a frame block. Everything that is in between will be written into a box by the html-output. \n   \n  Example: \n   \n !$FPMDOCU This is not inside of a box \n   \n   \n '!$FPMDOCU #frame' \n '!$FPMDOCU This now should be inside of a box' \n '!$FPMDOCU frame#' \n   \n  The icon \"#frame\" opens and the icon \"frame#\" closes a frame block. Everything that is in between will be written into a box by the html-output. \n   \n  Example: \n   \n !$FPMDOCU This is not inside of a box \n   \n   \n '!$FPMDOCU #frame' \n '!$FPMDOCU This now should be inside of a box' \n '!$FPMDOCU frame#' \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/FPMLOG/FPMDOCU.f90 \n\n\n\n", 
        "url": "../FPM.FPMDOCU.Syntax___fpmdocu___.frame-block.html", 
        "id": 22, 
        "title": "frame-block"
    }, 
    {
        "body": "\n\nh-block ...  h=hierarchy; short name of hierarchy element in the context of the whole hierarchy tree \n\n\n  The hierarchy defintion has to be enclosed in \"#h\" and \"h#\". Camel case is okay, but blanks are not allowed. \n  A hierarchy level definition usually looks like this: \n   \n !$FPMDOCU #h Level1.Level2.Level3.NameOfTheCurrentLevel h# #a Optional alias statement a# \n   \n  For instance the definition of this particular page is \n !$FPMDOCU #h FPM.FPMDOCU.Syntax.h-block h# \n   \n  Subsequent hierarchy definition: the statement \n   \n !$FPMDOCU #h ..NameOfTheCurrentLevel h# \n   \n  will attach the given hierarchy element as a child to the last defined element, hence \n !$FPMDOCU #h FPM.FPMDOCU.Syntax.h-block h# \n !$FPMDOCU #h ..Child h# \n  would define a hierarchy level with the name \"FPM.FPMDOCU.Syntax___fpmdocu___.h-block.Child\" \n   \n  Hierarchy element in the same level: the statement \n   \n !$FPMDOCU #h .NameOfTheCurrentLevel h# \n   \n  will attach the hierarchy element as a new member in the same row as the last defined element, hence the definitions \n !$FPMDOCU #h FPM.FPMDOCU.Syntax.h-block h# \n !$FPMDOCU #h .another-block h# \n  would define a hierarchy level with the name \"FPM.FPMDOCU.Syntax___fpmdocu___.another-block\" \n   \n  Using text for more than one hierarchy items, one can define a list of items, separated by \"||\": \n   \n !$FPMDOCU #h FPM.Solver.Sol1 || FPM.Solver.Sol2 || FPM.Solver.Sol3 || FPM.AndSoOn h# #b \n !$FPMDOCU Now some text, that refers to all of the hierarchy items  FPM.Solver.Sol1,  FPM.Solver.Sol2,  FPM.Solver.Sol3, FPM.AndSoOn  \n !$FPMDOCU b#  \n   \n   \n  Important is the a-block (\"#a...a#\"), which allows a onle-line-description of the hierarchy item. \n   \n  With the link-command (\"#link\"), the html-generator even tries to find the pages, which reference to the present item. \n  Thus, an extension of the example above would be \n !$FPMDOCU #h Level1.Level2.Level3.NameOfTheCurrentLevel h# #a Optional alias statement a# #link  \n   \n  With the sort-command (\"#sort\"), the html-generator will sort the list of children of this element before displaying the list of children in the html-output \n  Thus, an extension of the example above would be \n !$FPMDOCU #h Level1.Level2.Level3.NameOfTheCurrentLevel h# #a Optional alias statement a# #link #sort \n  The hierarchy defintion has to be enclosed in \"#h\" and \"h#\". Camel case is okay, but blanks are not allowed. \n  A hierarchy level definition usually looks like this: \n   \n !$FPMDOCU #h Level1.Level2.Level3.NameOfTheCurrentLevel h# #a Optional alias statement a# \n   \n  For instance the definition of this particular page is \n !$FPMDOCU #h FPM.FPMDOCU.Syntax.h-block h# \n   \n  Subsequent hierarchy definition: the statement \n   \n !$FPMDOCU #h ..NameOfTheCurrentLevel h# \n   \n  will attach the given hierarchy element as a child to the last defined element, hence \n !$FPMDOCU #h FPM.FPMDOCU.Syntax.h-block h# \n !$FPMDOCU #h ..Child h# \n  would define a hierarchy level with the name \"FPM.FPMDOCU.Syntax___fpmdocu___.h-block.Child\" \n   \n  Hierarchy element in the same level: the statement \n   \n !$FPMDOCU #h .NameOfTheCurrentLevel h# \n   \n  will attach the hierarchy element as a new member in the same row as the last defined element, hence the definitions \n !$FPMDOCU #h FPM.FPMDOCU.Syntax.h-block h# \n !$FPMDOCU #h .another-block h# \n  would define a hierarchy level with the name \"FPM.FPMDOCU.Syntax___fpmdocu___.another-block\" \n   \n  Using text for more than one hierarchy items, one can define a list of items, separated by \"||\": \n   \n !$FPMDOCU #h FPM.Solver.Sol1 || FPM.Solver.Sol2 || FPM.Solver.Sol3 || FPM.AndSoOn h# #b \n !$FPMDOCU Now some text, that refers to all of the hierarchy items  FPM.Solver.Sol1,  FPM.Solver.Sol2,  FPM.Solver.Sol3, FPM.AndSoOn  \n !$FPMDOCU b#  \n   \n   \n  Important is the a-block (\"#a...a#\"), which allows a onle-line-description of the hierarchy item. \n   \n  With the link-command (\"#link\"), the html-generator even tries to find 
the pages, which reference to the present item. \n  Thus, an extension of the example above would be \n !$FPMDOCU #h Level1.Level2.Level3.NameOfTheCurrentLevel h# #a Optional alias statement a# #link  \n   \n  With the sort-command (\"#sort\"), the html-generator will sort the list of children of this element before displaying the list of children in the html-output \n  Thus, an extension of the example above would be \n !$FPMDOCU #h Level1.Level2.Level3.NameOfTheCurrentLevel h# #a Optional alias statement a# #link #sort \n  The hierarchy defintion has to be enclosed in \"#h\" and \"h#\". Camel case is okay, but blanks are not allowed. \n  A hierarchy level definition usually looks like this: \n   \n !$FPMDOCU #h Level1.Level2.Level3.NameOfTheCurrentLevel h# #a Optional alias statement a# \n   \n  For instance the definition of this particular page is \n !$FPMDOCU #h FPM.FPMDOCU.Syntax.h-block h# \n   \n  Subsequent hierarchy definition: the statement \n   \n !$FPMDOCU #h ..NameOfTheCurrentLevel h# \n   \n  will attach the given hierarchy element as a child to the last defined element, hence \n !$FPMDOCU #h FPM.FPMDOCU.Syntax.h-block h# \n !$FPMDOCU #h ..Child h# \n  would define a hierarchy level with the name \"FPM.FPMDOCU.Syntax___fpmdocu___.h-block.Child\" \n   \n  Hierarchy element in the same level: the statement \n   \n !$FPMDOCU #h .NameOfTheCurrentLevel h# \n   \n  will attach the hierarchy element as a new member in the same row as the last defined element, hence the definitions \n !$FPMDOCU #h FPM.FPMDOCU.Syntax.h-block h# \n !$FPMDOCU #h .another-block h# \n  would define a hierarchy level with the name \"FPM.FPMDOCU.Syntax___fpmdocu___.another-block\" \n   \n  Using text for more than one hierarchy items, one can define a list of items, separated by \"||\": \n   \n !$FPMDOCU #h FPM.Solver.Sol1 || FPM.Solver.Sol2 || FPM.Solver.Sol3 || FPM.AndSoOn h# #b \n !$FPMDOCU Now some text, that refers to all of the hierarchy items  FPM.Solver.Sol1,  FPM.Solver.Sol2,  FPM.Solver.Sol3, FPM.AndSoOn  \n !$FPMDOCU b#  \n   \n   \n  Important is the a-block (\"#a...a#\"), which allows a onle-line-description of the hierarchy item. \n   \n  With the link-command (\"#link\"), the html-generator even tries to find the pages, which reference to the present item. \n  Thus, an extension of the example above would be \n !$FPMDOCU #h Level1.Level2.Level3.NameOfTheCurrentLevel h# #a Optional alias statement a# #link  \n   \n  With the sort-command (\"#sort\"), the html-generator will sort the list of children of this element before displaying the list of children in the html-output \n  Thus, an extension of the example above would be \n !$FPMDOCU #h Level1.Level2.Level3.NameOfTheCurrentLevel h# #a Optional alias statement a# #link #sort \n  The hierarchy defintion has to be enclosed in \"#h\" and \"h#\". Camel case is okay, but blanks are not allowed. \n  A hierarchy level definition usually looks like this: \n   \n !$FPMDOCU #h Level1.Level2.Level3.NameOfTheCurrentLevel h# #a Optional alias statement a# \n   \n  For instance the definition of this particular page is \n !$FPMDOCU #h FPM.FPMDOCU.Syntax.h-block h# \n   \n  Subsequent hierarchy definition: the statement \n   \n !$FPMDOCU #h ..NameOfTheCurrentLevel h# \n   \n  will attach the given hierarchy element as a child to the last defined element, hence \n !$FPMDOCU #h FPM.FPMDOCU.Syntax.h-block h# \n !$FPMDOCU #h ..Child h# \n  would define a hierarchy level with the name \"FPM.FPMDOCU.Syntax___fpmdocu___.h-block.Child\" \n   \n  Hierarchy element in the same level: the statement \n   \n !$FPMDOCU #h .NameOfTheCurrentLevel h# \n   \n  will attach the hierarchy element as a new member in the same row as the last defined element, hence the definitions \n !$FPMDOCU #h FPM.FPMDOCU.Syntax.h-block h# \n !$FPMDOCU #h .another-block h# \n  would define a hierarchy level with the name \"FPM.FPMDOCU.Syntax___fpmdocu___.another-block\" \n   \n  Using text for more than one hierarchy items, one can define a list of items, separated by \"||\": \n   \n !$FPMDOCU #h FPM.Solver.Sol1 || FPM.
Solver.Sol2 || FPM.Solver.Sol3 || FPM.AndSoOn h# #b \n !$FPMDOCU Now some text, that refers to all of the hierarchy items  FPM.Solver.Sol1,  FPM.Solver.Sol2,  FPM.Solver.Sol3, FPM.AndSoOn  \n !$FPMDOCU b#  \n   \n   \n  Important is the a-block (\"#a...a#\"), which allows a onle-line-description of the hierarchy item. \n   \n  With the link-command (\"#link\"), the html-generator even tries to find the pages, which reference to the present item. \n  Thus, an extension of the example above would be \n !$FPMDOCU #h Level1.Level2.Level3.NameOfTheCurrentLevel h# #a Optional alias statement a# #link  \n   \n  With the sort-command (\"#sort\"), the html-generator will sort the list of children of this element before displaying the list of children in the html-output \n  Thus, an extension of the example above would be \n !$FPMDOCU #h Level1.Level2.Level3.NameOfTheCurrentLevel h# #a Optional alias statement a# #link #sort \n  The hierarchy defintion has to be enclosed in \"#h\" and \"h#\". Camel case is okay, but blanks are not allowed. \n  A hierarchy level definition usually looks like this: \n   \n !$FPMDOCU #h Level1.Level2.Level3.NameOfTheCurrentLevel h# #a Optional alias statement a# \n   \n  For instance the definition of this particular page is \n !$FPMDOCU #h FPM.FPMDOCU.Syntax.h-block h# \n   \n  Subsequent hierarchy definition: the statement \n   \n !$FPMDOCU #h ..NameOfTheCurrentLevel h# \n   \n  will attach the given hierarchy element as a child to the last defined element, hence \n !$FPMDOCU #h FPM.FPMDOCU.Syntax.h-block h# \n !$FPMDOCU #h ..Child h# \n  would define a hierarchy level with the name \"FPM.FPMDOCU.Syntax___fpmdocu___.h-block.Child\" \n   \n  Hierarchy element in the same level: the statement \n   \n !$FPMDOCU #h .NameOfTheCurrentLevel h# \n   \n  will attach the hierarchy element as a new member in the same row as the last defined element, hence the definitions \n !$FPMDOCU #h FPM.FPMDOCU.Syntax.h-block h# \n !$FPMDOCU #h .another-block h# \n  would define a hierarchy level with the name \"FPM.FPMDOCU.Syntax___fpmdocu___.another-block\" \n   \n  Using text for more than one hierarchy items, one can define a list of items, separated by \"||\": \n   \n !$FPMDOCU #h FPM.Solver.Sol1 || FPM.Solver.Sol2 || FPM.Solver.Sol3 || FPM.AndSoOn h# #b \n !$FPMDOCU Now some text, that refers to all of the hierarchy items  FPM.Solver.Sol1,  FPM.Solver.Sol2,  FPM.Solver.Sol3, FPM.AndSoOn  \n !$FPMDOCU b#  \n   \n   \n  Important is the a-block (\"#a...a#\"), which allows a onle-line-description of the hierarchy item. \n   \n  With the link-command (\"#link\"), the html-generator even tries to find the pages, which reference to the present item. \n  Thus, an extension of the example above would be \n !$FPMDOCU #h Level1.Level2.Level3.NameOfTheCurrentLevel h# #a Optional alias statement a# #link  \n   \n  With the sort-command (\"#sort\"), the html-generator will sort the list of children of this element before displaying the list of children in the html-output \n  Thus, an extension of the example above would be \n !$FPMDOCU #h Level1.Level2.Level3.NameOfTheCurrentLevel h# #a Optional alias statement a# #link #sort \n  The hierarchy defintion has to be enclosed in \"#h\" and \"h#\". Camel case is okay, but blanks are not allowed. \n  A hierarchy level definition usually looks like this: \n   \n !$FPMDOCU #h Level1.Level2.Level3.NameOfTheCurrentLevel h# #a Optional alias statement a# \n   \n  For instance the definition of this particular page is \n !$FPMDOCU #h FPM.FPMDOCU.Syntax.h-block h# \n   \n  Subsequent hierarchy definition: the statement \n   \n !$FPMDOCU #h ..NameOfTheCurrentLevel h# \n   \n  will attach the given hierarchy element as a child to the last defined element, hence \n !$FPMDOCU #h FPM.FPMDOCU.Syntax.h-block h# \n !$FPMDOCU #h ..Child h# \n  would define a hierarchy level with the name \"FPM.FPMDOCU.Syntax___fpmdocu___.h-block.Child\" \n   \n  Hierarchy element in the same level: the statement \n   \n !$FPMDOCU #h .NameOfTheCurrentLevel h# \n   \n  will attach the hierarchy element as a new member 
in the same row as the last defined element, hence the definitions \n !$FPMDOCU #h FPM.FPMDOCU.Syntax.h-block h# \n !$FPMDOCU #h .another-block h# \n  would define a hierarchy level with the name \"FPM.FPMDOCU.Syntax___fpmdocu___.another-block\" \n   \n  Using text for more than one hierarchy items, one can define a list of items, separated by \"||\": \n   \n !$FPMDOCU #h FPM.Solver.Sol1 || FPM.Solver.Sol2 || FPM.Solver.Sol3 || FPM.AndSoOn h# #b \n !$FPMDOCU Now some text, that refers to all of the hierarchy items  FPM.Solver.Sol1,  FPM.Solver.Sol2,  FPM.Solver.Sol3, FPM.AndSoOn  \n !$FPMDOCU b#  \n   \n   \n  Important is the a-block (\"#a...a#\"), which allows a onle-line-description of the hierarchy item. \n   \n  With the link-command (\"#link\"), the html-generator even tries to find the pages, which reference to the present item. \n  Thus, an extension of the example above would be \n !$FPMDOCU #h Level1.Level2.Level3.NameOfTheCurrentLevel h# #a Optional alias statement a# #link  \n   \n  With the sort-command (\"#sort\"), the html-generator will sort the list of children of this element before displaying the list of children in the html-output \n  Thus, an extension of the example above would be \n !$FPMDOCU #h Level1.Level2.Level3.NameOfTheCurrentLevel h# #a Optional alias statement a# #link #sort \n  The hierarchy defintion has to be enclosed in \"#h\" and \"h#\". Camel case is okay, but blanks are not allowed. \n  A hierarchy level definition usually looks like this: \n   \n !$FPMDOCU #h Level1.Level2.Level3.NameOfTheCurrentLevel h# #a Optional alias statement a# \n   \n  For instance the definition of this particular page is \n !$FPMDOCU #h FPM.FPMDOCU.Syntax.h-block h# \n   \n  Subsequent hierarchy definition: the statement \n   \n !$FPMDOCU #h ..NameOfTheCurrentLevel h# \n   \n  will attach the given hierarchy element as a child to the last defined element, hence \n !$FPMDOCU #h FPM.FPMDOCU.Syntax.h-block h# \n !$FPMDOCU #h ..Child h# \n  would define a hierarchy level with the name \"FPM.FPMDOCU.Syntax___fpmdocu___.h-block.Child\" \n   \n  Hierarchy element in the same level: the statement \n   \n !$FPMDOCU #h .NameOfTheCurrentLevel h# \n   \n  will attach the hierarchy element as a new member in the same row as the last defined element, hence the definitions \n !$FPMDOCU #h FPM.FPMDOCU.Syntax.h-block h# \n !$FPMDOCU #h .another-block h# \n  would define a hierarchy level with the name \"FPM.FPMDOCU.Syntax___fpmdocu___.another-block\" \n   \n  Using text for more than one hierarchy items, one can define a list of items, separated by \"||\": \n   \n !$FPMDOCU #h FPM.Solver.Sol1 || FPM.Solver.Sol2 || FPM.Solver.Sol3 || FPM.AndSoOn h# #b \n !$FPMDOCU Now some text, that refers to all of the hierarchy items  FPM.Solver.Sol1,  FPM.Solver.Sol2,  FPM.Solver.Sol3, FPM.AndSoOn  \n !$FPMDOCU b#  \n   \n   \n  Important is the a-block (\"#a...a#\"), which allows a onle-line-description of the hierarchy item. \n   \n  With the link-command (\"#link\"), the html-generator even tries to find the pages, which reference to the present item. \n  Thus, an extension of the example above would be \n !$FPMDOCU #h Level1.Level2.Level3.NameOfTheCurrentLevel h# #a Optional alias statement a# #link  \n   \n  With the sort-command (\"#sort\"), the html-generator will sort the list of children of this element before displaying the list of children in the html-output \n  Thus, an extension of the example above would be \n !$FPMDOCU #h Level1.Level2.Level3.NameOfTheCurrentLevel h# #a Optional alias statement a# #link #sort \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/FPMLOG/FPMDOCU.f90 \n\n\n\n", 
        "url": "../FPM.FPMDOCU.Syntax___fpmdocu___.h-block.html", 
        "id": 23, 
        "title": "h-block"
    }, 
    {
        "body": "\n\nimage-block ...  include a picture in the text \n\n\n  The icon \"#image\" opens and the icon \"image#\" closes a picture constraint. Inbetween shall occur only the picture file name. \n   \n  Example: \n   \n   \n '!$FPMDOCU #image RelativePath/FileNameOfPicture image#' \n   \n  The icon \"#image\" opens and the icon \"image#\" closes a picture constraint. Inbetween shall occur only the picture file name. \n   \n  Example: \n   \n   \n '!$FPMDOCU #image RelativePath/FileNameOfPicture image#' \n   \n  The icon \"#image\" opens and the icon \"image#\" closes a picture constraint. Inbetween shall occur only the picture file name. \n   \n  Example: \n   \n   \n '!$FPMDOCU #image RelativePath/FileNameOfPicture image#' \n   \n  The icon \"#image\" opens and the icon \"image#\" closes a picture constraint. Inbetween shall occur only the picture file name. \n   \n  Example: \n   \n   \n '!$FPMDOCU #image RelativePath/FileNameOfPicture image#' \n   \n  The icon \"#image\" opens and the icon \"image#\" closes a picture constraint. Inbetween shall occur only the picture file name. \n   \n  Example: \n   \n   \n '!$FPMDOCU #image RelativePath/FileNameOfPicture image#' \n   \n  The icon \"#image\" opens and the icon \"image#\" closes a picture constraint. Inbetween shall occur only the picture file name. \n   \n  Example: \n   \n   \n '!$FPMDOCU #image RelativePath/FileNameOfPicture image#' \n   \n  The icon \"#image\" opens and the icon \"image#\" closes a picture constraint. Inbetween shall occur only the picture file name. \n   \n  Example: \n   \n   \n '!$FPMDOCU #image RelativePath/FileNameOfPicture image#' \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/FPMLOG/FPMDOCU.f90 \n\n\n\n", 
        "url": "../FPM.FPMDOCU.Syntax___fpmdocu___.image-block.html", 
        "id": 24, 
        "title": "image-block"
    }, 
    {
        "body": "\n\nlatex-equation ...  translates LaTeX into pictures \n\n\n  The icon \"#eqn\" opens and the icon \"eqn#\" closes a LaTeX equation. Everything that is in between will be written into an image file included by the html-output. \n   \n  Example: \n   \n   \n  !$FPMDOCU Bad equation style: a^b \n   \n  is rendered as a^b. \n   \n   \n '!$FPMDOCU #eqn a^b eqn#' \n   \n  is rendered as  \n  The given eqution is always rendered in the next line. \n   \n  Besides this, one is able to render latex equations in the mathjax-way: \n  Include the latex text in brackets in the form  \\[  a^b  \\]  , then the equation is rendered in the next line, it looks like \\[ a^b \\] \n  Include the latex text in dollar signs in the form \\( a^b \\), then the equation is rendered inline, it looks like \\( a^b \\). \n  The icon \"#eqn\" opens and the icon \"eqn#\" closes a LaTeX equation. Everything that is in between will be written into an image file included by the html-output. \n   \n  Example: \n   \n   \n  !$FPMDOCU Bad equation style: a^b \n   \n  is rendered as a^b. \n   \n   \n '!$FPMDOCU #eqn a^b eqn#' \n   \n  is rendered as  \n  The given eqution is always rendered in the next line. \n   \n  Besides this, one is able to render latex equations in the mathjax-way: \n  Include the latex text in brackets in the form  \\[  a^b  \\]  , then the equation is rendered in the next line, it looks like \\[ a^b \\] \n  Include the latex text in dollar signs in the form \\( a^b \\), then the equation is rendered inline, it looks like \\( a^b \\). \n  The icon \"#eqn\" opens and the icon \"eqn#\" closes a LaTeX equation. Everything that is in between will be written into an image file included by the html-output. \n   \n  Example: \n   \n   \n  !$FPMDOCU Bad equation style: a^b \n   \n  is rendered as a^b. \n   \n   \n '!$FPMDOCU #eqn a^b eqn#' \n   \n  is rendered as  \n  The given eqution is always rendered in the next line. \n   \n  Besides this, one is able to render latex equations in the mathjax-way: \n  Include the latex text in brackets in the form  \\[  a^b  \\]  , then the equation is rendered in the next line, it looks like \\[ a^b \\] \n  Include the latex text in dollar signs in the form \\( a^b \\), then the equation is rendered inline, it looks like \\( a^b \\). \n  The icon \"#eqn\" opens and the icon \"eqn#\" closes a LaTeX equation. Everything that is in between will be written into an image file included by the html-output. \n   \n  Example: \n   \n   \n  !$FPMDOCU Bad equation style: a^b \n   \n  is rendered as a^b. \n   \n   \n '!$FPMDOCU #eqn a^b eqn#' \n   \n  is rendered as  \n  The given eqution is always rendered in the next line. \n   \n  Besides this, one is able to render latex equations in the mathjax-way: \n  Include the latex text in brackets in the form  \\[  a^b  \\]  , then the equation is rendered in the next line, it looks like \\[ a^b \\] \n  Include the latex text in dollar signs in the form \\( a^b \\), then the equation is rendered inline, it looks like \\( a^b \\). \n  The icon \"#eqn\" opens and the icon \"eqn#\" closes a LaTeX equation. Everything that is in between will be written into an image file included by the html-output. \n   \n  Example: \n   \n   \n  !$FPMDOCU Bad equation style: a^b \n   \n  is rendered as a^b. \n   \n   \n '!$FPMDOCU #eqn a^b eqn#' \n   \n  is rendered as  \n  The given eqution is always rendered in the next line. \n   \n  Besides this, one is able to render latex equations in the mathjax-way: \n  Include the latex text in brackets in the form  \\[  a^b  \\]  , then the equation is rendered in the next line, it looks like \\[ a^b \\] \n  Include the latex text in dollar signs in the form \\( a^b \\), then the equation is rendered inline, it looks like \\( a^b \\). \n  The icon \"#eqn\" opens and the icon \"eqn#\" closes a LaTeX equation. Everything that is in between will be written into an image file included by the html-output. \n   \n  Example: \n   \n   \n  !$FPMDOCU Bad equation style: a^b \n   \n  is rendered as a^b. \n   \n   \n '!$FPMDOCU #eqn a^b 
eqn#' \n   \n  is rendered as  \n  The given eqution is always rendered in the next line. \n   \n  Besides this, one is able to render latex equations in the mathjax-way: \n  Include the latex text in brackets in the form  \\[  a^b  \\]  , then the equation is rendered in the next line, it looks like \\[ a^b \\] \n  Include the latex text in dollar signs in the form \\( a^b \\), then the equation is rendered inline, it looks like \\( a^b \\). \n  The icon \"#eqn\" opens and the icon \"eqn#\" closes a LaTeX equation. Everything that is in between will be written into an image file included by the html-output. \n   \n  Example: \n   \n   \n  !$FPMDOCU Bad equation style: a^b \n   \n  is rendered as a^b. \n   \n   \n '!$FPMDOCU #eqn a^b eqn#' \n   \n  is rendered as  \n  The given eqution is always rendered in the next line. \n   \n  Besides this, one is able to render latex equations in the mathjax-way: \n  Include the latex text in brackets in the form  \\[  a^b  \\]  , then the equation is rendered in the next line, it looks like \\[ a^b \\] \n  Include the latex text in dollar signs in the form \\( a^b \\), then the equation is rendered inline, it looks like \\( a^b \\). \n       \n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/FPMLOG/FPMDOCU.f90 \n\n\n\n", 
        "url": "../FPM.FPMDOCU.Syntax___fpmdocu___.latex-equation.html", 
        "id": 25, 
        "title": "latex-equation"
    }, 
    {
        "body": "\n\nlatex-equation-inline ...  translates LaTeX into pictures \n\n\n  The icon \"#eql\" opens and the icon \"eql#\" closes a LaTeX equation. Everything that is in between will be written into an image file included by the html-output. \n   \n  Example: \n   \n   \n '!$FPMDOCU Here is a text that contains #eql a^b eql# put as inline equation' \n   \n  It is rendered as: \n   \n  Here is a text that contains  put as inline equation. \n  The icon \"#eql\" opens and the icon \"eql#\" closes a LaTeX equation. Everything that is in between will be written into an image file included by the html-output. \n   \n  Example: \n   \n   \n '!$FPMDOCU Here is a text that contains #eql a^b eql# put as inline equation' \n   \n  It is rendered as: \n   \n  Here is a text that contains  put as inline equation. \n  The icon \"#eql\" opens and the icon \"eql#\" closes a LaTeX equation. Everything that is in between will be written into an image file included by the html-output. \n   \n  Example: \n   \n   \n '!$FPMDOCU Here is a text that contains #eql a^b eql# put as inline equation' \n   \n  It is rendered as: \n   \n  Here is a text that contains  put as inline equation. \n  The icon \"#eql\" opens and the icon \"eql#\" closes a LaTeX equation. Everything that is in between will be written into an image file included by the html-output. \n   \n  Example: \n   \n   \n '!$FPMDOCU Here is a text that contains #eql a^b eql# put as inline equation' \n   \n  It is rendered as: \n   \n  Here is a text that contains  put as inline equation. \n  The icon \"#eql\" opens and the icon \"eql#\" closes a LaTeX equation. Everything that is in between will be written into an image file included by the html-output. \n   \n  Example: \n   \n   \n '!$FPMDOCU Here is a text that contains #eql a^b eql# put as inline equation' \n   \n  It is rendered as: \n   \n  Here is a text that contains  put as inline equation. \n  The icon \"#eql\" opens and the icon \"eql#\" closes a LaTeX equation. Everything that is in between will be written into an image file included by the html-output. \n   \n  Example: \n   \n   \n '!$FPMDOCU Here is a text that contains #eql a^b eql# put as inline equation' \n   \n  It is rendered as: \n   \n  Here is a text that contains  put as inline equation. \n  The icon \"#eql\" opens and the icon \"eql#\" closes a LaTeX equation. Everything that is in between will be written into an image file included by the html-output. \n   \n  Example: \n   \n   \n '!$FPMDOCU Here is a text that contains #eql a^b eql# put as inline equation' \n   \n  It is rendered as: \n   \n  Here is a text that contains  put as inline equation. \n       \n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/FPMLOG/FPMDOCU.f90 \n\n\n\n", 
        "url": "../FPM.FPMDOCU.Syntax___fpmdocu___.latex-equation-inline.html", 
        "id": 26, 
        "title": "latex-equation-inline"
    }, 
    {
        "body": "\n\nlink-command ...  find list of pages/items, which reference to the present page/item \n\n\n  With the link-command (\"#link\"), the html-generator tries to find the pages, which reference to the present item. \n  A simple example would be \n   \n !$FPMDOCU #h Level1.Level2.Level3.NameOfTheCurrentLevel h# #a Optional alias statement a# #link  \n   \n  If the hierarchy item \"LevelA.LevelB.LevelC.plaplapla\" would provide a link to \"Level1.Level2.Level3.NameOfTheCurrentLevel\", \n  then \"LevelA.LevelB.LevelC.plaplapla\" would appear in the list of the referencing pages at the end of the html-output. \n  With the link-command (\"#link\"), the html-generator tries to find the pages, which reference to the present item. \n  A simple example would be \n   \n !$FPMDOCU #h Level1.Level2.Level3.NameOfTheCurrentLevel h# #a Optional alias statement a# #link  \n   \n  If the hierarchy item \"LevelA.LevelB.LevelC.plaplapla\" would provide a link to \"Level1.Level2.Level3.NameOfTheCurrentLevel\", \n  then \"LevelA.LevelB.LevelC.plaplapla\" would appear in the list of the referencing pages at the end of the html-output. \n  With the link-command (\"#link\"), the html-generator tries to find the pages, which reference to the present item. \n  A simple example would be \n   \n !$FPMDOCU #h Level1.Level2.Level3.NameOfTheCurrentLevel h# #a Optional alias statement a# #link  \n   \n  If the hierarchy item \"LevelA.LevelB.LevelC.plaplapla\" would provide a link to \"Level1.Level2.Level3.NameOfTheCurrentLevel\", \n  then \"LevelA.LevelB.LevelC.plaplapla\" would appear in the list of the referencing pages at the end of the html-output. \n  With the link-command (\"#link\"), the html-generator tries to find the pages, which reference to the present item. \n  A simple example would be \n   \n !$FPMDOCU #h Level1.Level2.Level3.NameOfTheCurrentLevel h# #a Optional alias statement a# #link  \n   \n  If the hierarchy item \"LevelA.LevelB.LevelC.plaplapla\" would provide a link to \"Level1.Level2.Level3.NameOfTheCurrentLevel\", \n  then \"LevelA.LevelB.LevelC.plaplapla\" would appear in the list of the referencing pages at the end of the html-output. \n  With the link-command (\"#link\"), the html-generator tries to find the pages, which reference to the present item. \n  A simple example would be \n   \n !$FPMDOCU #h Level1.Level2.Level3.NameOfTheCurrentLevel h# #a Optional alias statement a# #link  \n   \n  If the hierarchy item \"LevelA.LevelB.LevelC.plaplapla\" would provide a link to \"Level1.Level2.Level3.NameOfTheCurrentLevel\", \n  then \"LevelA.LevelB.LevelC.plaplapla\" would appear in the list of the referencing pages at the end of the html-output. \n  With the link-command (\"#link\"), the html-generator tries to find the pages, which reference to the present item. \n  A simple example would be \n   \n !$FPMDOCU #h Level1.Level2.Level3.NameOfTheCurrentLevel h# #a Optional alias statement a# #link  \n   \n  If the hierarchy item \"LevelA.LevelB.LevelC.plaplapla\" would provide a link to \"Level1.Level2.Level3.NameOfTheCurrentLevel\", \n  then \"LevelA.LevelB.LevelC.plaplapla\" would appear in the list of the referencing pages at the end of the html-output. \n  With the link-command (\"#link\"), the html-generator tries to find the pages, which reference to the present item. \n  A simple example would be \n   \n !$FPMDOCU #h Level1.Level2.Level3.NameOfTheCurrentLevel h# #a Optional alias statement a# #link  \n   \n  If the hierarchy item \"LevelA.LevelB.LevelC.plaplapla\" would provide a link to \"Level1.Level2.Level3.NameOfTheCurrentLevel\", \n  then \"LevelA.LevelB.LevelC.plaplapla\" would appear in the list of the referencing pages at the end of the html-output. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/FPMLOG/FPMDOCU.f90 \n\n\n\n", 
        "url": "../FPM.FPMDOCU.Syntax___fpmdocu___.link-command.html", 
        "id": 27, 
        "title": "link-command"
    }, 
    {
        "body": "\n\nPOPBAL ...  Indices for the population balance solver \n\n\n   This list is not yet complete   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.POPBAL.html", 
        "id": 28, 
        "title": "POPBAL"
    }, 
    {
        "body": "\n\nDROPLETPHASE ...  Indices for the droplet and particle phase solver \n\n\n   This list is not yet complete   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.DROPLETPHASE.html", 
        "id": 29, 
        "title": "DROPLETPHASE"
    }, 
    {
        "body": "\n\nInputFiles\n\n\n\n\n\nList of members:\n\n\nUSER_common_variables  ...  main input file for defining all simulation data, boundary conditions, material parameters, geometrie, etc. \ncommon_variables  ...  input file for development and debugging purposes \n\n\n\n\n\n", 
        "url": "../FPM.InputFiles.html", 
        "id": 30, 
        "title": "InputFiles"
    }, 
    {
        "body": "\n\nProgramExecution\n\n\n\n\n\nList of members:\n\n\nRunTimeTools  ... RunTimeTools\nInstallAndRun  ... InstallAndRun\n\n\n\n\n\n", 
        "url": "../FPM.ProgramExecution.html", 
        "id": 31, 
        "title": "ProgramExecution"
    }, 
    {
        "body": "\n\nReleases ...  information on the MESHFREE releases \n\n\n  Executables available at https://svn.itwm.fhg.de/svn/FPMDOCU/Executables/ \n   \n   v16.08.0  \n   Tickets:   \n    - Add warning if geometry used in InDom() is not found. (Ticket #56277) \n   Bugfixes:   \n    - Removed bug in geometry movement at restart (Ticket #56172) \n    - Bugfix: Only first valid case{...}-statement in selection will be used. Previously, all valid case{...}-statement except for case_else{} were executed. \n    - Point cloud filling in MPI mode (with only a single openMP thread) is now deterministic for a given number of MPI processes (Ticket #56695) \n    - Improved point organization for thin geometry parts (Tickets #56703, #56807) \n    - Bugfix: Settings in cv had been able to overwrite settings in Ucv. Now Ucv is always final. \n   v16.07.0  \n   New:   \n    - Finished new SAVE_format option ERFHDF5 (ERF-HDF5 v2.1) \n    - New option SAVE_atEndOfTimestep \n    - USER_h_min can now be defined by equations \n    - MONITORPOINTS: interior MONITORPOINTS can move. New: MONITORPOINTS_DELETION and MONITORPOINTS_STOP \n    - New MOVE statements %MOVE_ElasticBeam%, %MOVE_ProjectionOfMovementOfAnotherPart% \n   Tickets:   \n    - #55401: Remove limit on number of aliases. \n   Bugfixes:   \n    - Bug correction MONITOR-marker \n    - Bug correction of INTEGRATION_FLUX connected with moving boundary elements \n   v16.06.1  \n   Tickets:   \n    - #55648: Removing points from a degenerated 3D-phase (thin layer of FPM-points) in the vicinity of gaps or regular geometries is now \n              suppressed, however checked only on this one particular example. \n    Bugfixes:   \n    - %INTEGRATION_FLUX% now works even with moving boundary elements \n    - TIMECHECK: bug correction that previously lead to breakdown of FPM if COMP_TimeCheck:=1 and CONTROL_StopAfterReadingGeometry:=2 are both set \n   \n   v16.06.0  \n   New:   \n    - Updated EVENT treatment, new EventMessage capability. \n    - Search page for FPMDOCU. \n   Bugfixes:   \n    - Improved formulation of boundary conditions at free surface in the vp- case for compressible materials. \n   Tickets:   \n    - Removed bug in INTEGRATION along free surfaces. \n   v16.05.0  \n   New:   \n    - each FPM-simulation has now a proper process ID; the SIGNAL- and warning-files carry this unique process ID in their name, \n      such that more than one simulation ran be run in on and the same project folder. \n    - Compactified structure of FPM output in the time step phase. \n    - Provide a stop code for the EVENT handler \n    - remove defects in kinetic energy in the organization part of FPM \n   Bugfixes:   \n    - remove problem with compareY() (ticket 54883) -> problem of declaration sizes in fortran. Increaing the array sizes, future solution is an adaptive size array \n    - remove FATAL-VALUE problems (ticket 53514) \n   v16.04.0  \n   New:   \n    - Enhancements in the documentation. \n    - Call events every N time steps. \n    - Use of INTEGRATION_FLUX over BND_plane. \n    - Option for converting 6-node-triangles into regular triangles when reading in. \n   Bugfixes:   \n    - Fix volume control at metaplanes in the MPI version. \n   v16.03.1  \n   Bugfixes:   \n    - Fixed compilation of Cray version. \n   \n   v16.03.0  \n   New:   \n    - Support for license server FITlm \n    - Improve hierarchy of time check output, see COMP_TimeCheck \n    - New function compareY() to compare function value between two chambers \n    - ERF-HDF5 Pointcloud and boundary data can be viewed in ESI Visual-Environment (experimental) \n   Tickets:   \n    - #52923: Make volume correction take metaplanes into account \n    - #53706: Add access to first residuals (see %ind_v_residual(3)%, %ind_r_residual%) \n    - #54022: Bugfix for restart with large point cloud \n    - #54220/54184/54308: Bugfix for Integration statements, columns in timestep file \n    - #54472: Bugfix in regularisation for problems with all Neumann boundary conditions \n    - #54468: Make kill on normal 
termination optional. Standard is no kill. To turn it back on provide '-k' or '--kill' as command line option to FPM. \n    - #54405: special workaround \n   Bugfixes:   \n    - Bug in the selection-environment in USER_common_variables.dat \n   v16.02.0  \n   Bugfixes:   \n    - Bug fixes regarding multiple IGES-files and surface triangulation from IGES \n   \n   v16.01.1  \n   New:   \n    - New movement statement %MOVE_vertuschka% \n    - Option to run point cloud quality check for externally given point clouds (e.g. by ascii files). \n    - ENSIGHT6: Split point cloud into different ENSIGHT PIDs, see SAVE_PID_ITEM \n    - Improved neighbor selection for pressure evaluation in integrations. \n   Tickets:   \n    - #54022: Fixed restart bug. \n    - #53918: Corrected typo in description of ind_ETA. \n   Bugfixes:   \n    - Fix restart bug for simulations containing automatic aliases. \n   \n   v16.01.0  \n   New:   \n    - ERF-HDF5: Pointcloud can be viewed in Animator4 or ESI Visual-Environment (experimental). \n    - %CONSTRUCT_EstablishCurveVolumeVersusHeight%. \n    - Save construct variables on restart file, begin_construct_atRestart{} in order to renew construct variables. \n    - %INTEGRATION_ABSFLUX%, %INTEGRATION_ABSFLUX_TIME%. \n    - Mathematical selection-clause in order to mimic if-then-elseif-else based on arithmetic expressions, see Selection. \n    - AMFPMJ_CommonAdministrationDirectory. \n   Bugfixes:   \n    - Fixed bug with timestep-files in conjunction with restart and reload. \n    - Fixed bug with negative chamber indices. \n    - Bug fix for CONSTRUCT-statement with %CONSTRUCT_BoxMidPoint%-keyword. \n    - Bug fixes related to multiple geometry IGES files. \n   \n  Note:  This version is not fully backwards compatible. \n  begin_boundary_elements and begin_construct blocks are now read sequentially. \n  Geometry parts used in a construct statement need to be defined beforehand. \n   \n   v15.12.1  \n   Bugfixes:   \n    - Fixed compilation error. \n   \n   v15.12.0  \n   New:   \n    - Various geometry manipulation options (manipulate{}, delete{}), see BoundaryElements \n    - Integration on BND_BlindAndEmpty boundary elements (passing FPM points), see %INTEGRATION_FLUX% \n    - ERF-HDF5: write out first timestep (experimental) \n    - New option for adaptive smoothing length, see ADTV \n    - Support for multiple geometry IGES files, see include{File} \n    - New FPM-neighborhood selection procedure for INTEGRATION at BND_point-objects \n    - Creation of BND_points based on existing geometry, see BNDpoints_ExtractFromNodes{} \n    - CuttingCurveCluster \n    - Performance improvements in Delaunay tetrahedralization \n    - ExDom() as opposite of InDom() in equation parser \n   Tickets:   \n    - #53395: Fixed Bug in the abaqus pressure write-outs. \n   Bugfixes:   \n    - Fixed restart. \n    - Bugfix in timestep-files for values less than 1.0e-99 \n   \n   v15.11.1  \n   Tickets:   \n    - #53113: restart in case of bubbly inflow \n   \n   v15.11.0  \n   New:   \n    - point cloud quality check \n    - COMP_TimeCheck = 3 writes the time statistics into the result directory after every time step \n    - shorter version of status bar for BiCGstab solver \n    - more time statistics for box sorting for boundary elements \n    - adaptive smoothing length definition USER_h_funct = 'ADTV' \n    - performance improvement for box sorting for boundary elements \n    - writing 'ENSIGHT6 BINARY' results to more than one result path \n    - sweeping function ensuring given slopes are not exceeded for dedicated functions (see CODI_min_max) \n    - speedup for function ChkNP() \n    - latex equations in FPMDOCU \n   \n   Tickets:   \n    - #52915: write outs for missing boundary conditions \n    - #52913: comment writing of *.VOLUMES \n    - #52912: total clock and cpu time available for integration (see %CLOCK_STATISTICS_TOTAL_ORGANIZE%, %CPU_STATISTICS_TOTAL_ORGANIZE%) \n    - #52752: restart in case of saving in a given coordinate system \n   \n   Bugfixes:   \n    - integration statements with keyword %
INTEGRATION_INT% \n    - standard behavior for command line option '-nt nn' \n    - memory leak for COMP_SortBEintoBoxes_Version = 4 \n    - integration for planes \n    - bubble volume computation \n    - avoid termination of FPM if result directory became non-existent \n   \n   v15.10.1  \n   Bugfixes:   \n    - detection of free surface points \n   \n   v15.10.0  \n   New:   \n    - new function ChkNP() \n    - option to restrict the projection for BND_points to neighboring points only via %INTEGRATION_BND_DIRECT_Proj_BND% or %INTEGRATION_BND_DIRECT_TIME_proj_BND% (see INTEGRATION) \n    - sharing of scalar variables for ENSIGHT6 BINARY files via SAVE_ShareScalars \n    - launch computational steering by SIGNAL_LaunchComputationalSteering = true \n    - flux equilibrium boundary conditions for k-epsilon-model \n    - strong defintion for alias, i.e. \"aliasName\" := \"...\" overwrites the old alias definition instead of creating aliasName{2} \n   \n   Bugfixes:   \n    - mapping of pressure for VPS shell elements \n    - bubble volume computation \n    - determination of opposite points for multiphase applications \n   \n   v15.9.1  \n   Bugfixes:   \n    - tetrahedrization during saving of all points/nodes (see SAVE_format) \n   \n   v15.9.0  \n   New:   \n    - BOUNDARYFILLING-flag for aliases corresponding to geometry parts \n   \n   Bugfixes:   \n    - termination of FPM for incorrect use of derivatives in input file, e.g. for dYdx() \n   \n   v15.8.0  \n   Bugfixes:   \n    - remove free surface points if distance to boundary is exactly zero \n   \n   v15.7.3  \n   Bugfixes:   \n    - free surface points hitting a %TOUCH_reflection% boundary \n   \n   v15.7.2  \n   New:   \n    - pre-check for free surface points (see ORGANIZE_CheckPointsAtFS_PerformPreCheck) \n    - new function lenA() \n    - enhancement of event handler (see EVENT) \n   \n   Bugfixes:   \n    - handling of penetration of thin walls \n   \n   v15.7.1  \n   New:   \n    - improvement for boundary slip points \n    - minor trivial performance improvements \n   \n   Bugfixes:   \n    - reading of stl-files \n    - handling of penetration of thin walls \n    - handling of slight penetration of walls for free surface points \n   \n   v15.7.0  \n   New:   \n    - time step criterion for moving metaplanes \n    - new IDENT-type %BND_wall_NoLayerThickness% (same behavior as BND_wall but ignores the given dist_LayerThickness parameter) \n    - sloppy{} functionality also for GMSH-files \n    - new function binA() \n    - add boundary condition flag %BND_NEUMANN% with same behaviour as %BND_VONNEU% \n    - add boundary condition flag %BND_ROBIN% with same behavior as %BND_CAUCHY% \n   \n   Bugfixes:   \n    - non-boundary points with neighbors that have been close to a boundary in the previous time step are now explicitly checked for their boundary distance \n    - check that displacement of free surface points is not exaggerated \n    - mapping of pressure for VPS shell elements \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fpmdocu/FPMReleases.f90 \n\n\n\n", 
        "url": "../FPM.Releases.html", 
        "id": 32, 
        "title": "Releases"
    }, 
    {
        "body": "\n\nref-block ...  invoke a reference link in the html-output \n\n\n  The icon \"#ref\" opens and the icon \"ref#\" closes a reference block. \n   \n  Example: \n   \n '!$FPMDOCU #ref TextToDisplay, Hierarchy1.Hierarchy2....Hierarchyn ref#' \n   \n  The TextToDisplay appears in the html-output, and it points to the hierarchy item \"Hierarchy1.Hierarchy2....Hierarchyn\". \n   \n  Very important is the comma that separates the text to display from the link to point to. \n  If the text to display contains itself a comma, it has to be put in quotation marks '\"...\"' \n   \n  This text points to an empty link, though it contains a comma \n  The icon \"#ref\" opens and the icon \"ref#\" closes a reference block. \n   \n  Example: \n   \n '!$FPMDOCU #ref TextToDisplay, Hierarchy1.Hierarchy2....Hierarchyn ref#' \n   \n  The TextToDisplay appears in the html-output, and it points to the hierarchy item \"Hierarchy1.Hierarchy2....Hierarchyn\". \n   \n  Very important is the comma that separates the text to display from the link to point to. \n  If the text to display contains itself a comma, it has to be put in quotation marks '\"...\"' \n   \n  This text points to an empty link, though it contains a comma \n  The icon \"#ref\" opens and the icon \"ref#\" closes a reference block. \n   \n  Example: \n   \n '!$FPMDOCU #ref TextToDisplay, Hierarchy1.Hierarchy2....Hierarchyn ref#' \n   \n  The TextToDisplay appears in the html-output, and it points to the hierarchy item \"Hierarchy1.Hierarchy2....Hierarchyn\". \n   \n  Very important is the comma that separates the text to display from the link to point to. \n  If the text to display contains itself a comma, it has to be put in quotation marks '\"...\"' \n   \n  This text points to an empty link, though it contains a comma \n  The icon \"#ref\" opens and the icon \"ref#\" closes a reference block. \n   \n  Example: \n   \n '!$FPMDOCU #ref TextToDisplay, Hierarchy1.Hierarchy2....Hierarchyn ref#' \n   \n  The TextToDisplay appears in the html-output, and it points to the hierarchy item \"Hierarchy1.Hierarchy2....Hierarchyn\". \n   \n  Very important is the comma that separates the text to display from the link to point to. \n  If the text to display contains itself a comma, it has to be put in quotation marks '\"...\"' \n   \n  This text points to an empty link, though it contains a comma \n  The icon \"#ref\" opens and the icon \"ref#\" closes a reference block. \n   \n  Example: \n   \n '!$FPMDOCU #ref TextToDisplay, Hierarchy1.Hierarchy2....Hierarchyn ref#' \n   \n  The TextToDisplay appears in the html-output, and it points to the hierarchy item \"Hierarchy1.Hierarchy2....Hierarchyn\". \n   \n  Very important is the comma that separates the text to display from the link to point to. \n  If the text to display contains itself a comma, it has to be put in quotation marks '\"...\"' \n   \n  This text points to an empty link, though it contains a comma \n  The icon \"#ref\" opens and the icon \"ref#\" closes a reference block. \n   \n  Example: \n   \n '!$FPMDOCU #ref TextToDisplay, Hierarchy1.Hierarchy2....Hierarchyn ref#' \n   \n  The TextToDisplay appears in the html-output, and it points to the hierarchy item \"Hierarchy1.Hierarchy2....Hierarchyn\". \n   \n  Very important is the comma that separates the text to display from the link to point to. \n  If the text to display contains itself a comma, it has to be put in quotation marks '\"...\"' \n   \n  This text points to an empty link, though it contains a comma \n  The icon \"#ref\" opens and the icon \"ref#\" closes a reference block. \n   \n  Example: \n   \n '!$FPMDOCU #ref TextToDisplay, Hierarchy1.Hierarchy2....Hierarchyn ref#' \n   \n  The TextToDisplay appears in the html-output, and it points to the hierarchy item \"Hierarchy1.Hierarchy2....Hierarchyn\". \n   \n  Very important is the comma that separates the text to display from the link to point to. \n  If the text to display contains itself a comma, it has to be put in quotation marks '\"...\"' \n   \n  This text points to an empty link, though it 
contains a comma \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/FPMLOG/FPMDOCU.f90 \n\n\n\n", 
        "url": "../FPM.FPMDOCU.Syntax___fpmdocu___.ref-block.html", 
        "id": 33, 
        "title": "ref-block"
    }, 
    {
        "body": "\n\nt-block ...  t=text; full explanation of the hierarchy item \n\n\n  A text for FPMDOCU can be implemented either by single lines (t-block) text or by multiline text blocks (b-block). \n   \n  Single line text starts with the icon \"#t\" and ends with \"t#\". Both icons have to be in the same line. Here is an example: \n   \n !$FPMDOCU #t here is a text that goes to the hierarchy element previously defined t# \n !$FPMDOCU #t by #h...h# and appears in the HTML-page t#      xyz...  \n   \n  The part outside of the encompassing icons (in this example \"xyz...\") does not appear in the html-output. \n  A text for FPMDOCU can be implemented either by single lines (t-block) text or by multiline text blocks (b-block). \n   \n  Single line text starts with the icon \"#t\" and ends with \"t#\". Both icons have to be in the same line. Here is an example: \n   \n !$FPMDOCU #t here is a text that goes to the hierarchy element previously defined t# \n !$FPMDOCU #t by #h...h# and appears in the HTML-page t#      xyz...  \n   \n  The part outside of the encompassing icons (in this example \"xyz...\") does not appear in the html-output. \n  A text for FPMDOCU can be implemented either by single lines (t-block) text or by multiline text blocks (b-block). \n   \n  Single line text starts with the icon \"#t\" and ends with \"t#\". Both icons have to be in the same line. Here is an example: \n   \n !$FPMDOCU #t here is a text that goes to the hierarchy element previously defined t# \n !$FPMDOCU #t by #h...h# and appears in the HTML-page t#      xyz...  \n   \n  The part outside of the encompassing icons (in this example \"xyz...\") does not appear in the html-output. \n  A text for FPMDOCU can be implemented either by single lines (t-block) text or by multiline text blocks (b-block). \n   \n  Single line text starts with the icon \"#t\" and ends with \"t#\". Both icons have to be in the same line. Here is an example: \n   \n !$FPMDOCU #t here is a text that goes to the hierarchy element previously defined t# \n !$FPMDOCU #t by #h...h# and appears in the HTML-page t#      xyz...  \n   \n  The part outside of the encompassing icons (in this example \"xyz...\") does not appear in the html-output. \n  A text for FPMDOCU can be implemented either by single lines (t-block) text or by multiline text blocks (b-block). \n   \n  Single line text starts with the icon \"#t\" and ends with \"t#\". Both icons have to be in the same line. Here is an example: \n   \n !$FPMDOCU #t here is a text that goes to the hierarchy element previously defined t# \n !$FPMDOCU #t by #h...h# and appears in the HTML-page t#      xyz...  \n   \n  The part outside of the encompassing icons (in this example \"xyz...\") does not appear in the html-output. \n  A text for FPMDOCU can be implemented either by single lines (t-block) text or by multiline text blocks (b-block). \n   \n  Single line text starts with the icon \"#t\" and ends with \"t#\". Both icons have to be in the same line. Here is an example: \n   \n !$FPMDOCU #t here is a text that goes to the hierarchy element previously defined t# \n !$FPMDOCU #t by #h...h# and appears in the HTML-page t#      xyz...  \n   \n  The part outside of the encompassing icons (in this example \"xyz...\") does not appear in the html-output. \n  A text for FPMDOCU can be implemented either by single lines (t-block) text or by multiline text blocks (b-block). \n   \n  Single line text starts with the icon \"#t\" and ends with \"t#\". Both icons have to be in the same line. Here is an example: \n   \n !$FPMDOCU #t here is a text that goes to the hierarchy element previously defined t# \n !$FPMDOCU #t by #h...h# and appears in the HTML-page t#      xyz...  \n   \n  The part outside of the encompassing icons (in this example \"xyz...\") does not appear in the html-output. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/FPMLOG/FPMDOCU.f90 \n\n\n\n", 
        "url": "../FPM.FPMDOCU.Syntax___fpmdocu___.t-block.html", 
        "id": 34, 
        "title": "t-block"
    }, 
    {
        "body": "\n\nsort-command ...  sort the list of children in lexicographical order in the html-output \n\n\n  With the sort-command (\"#sort\"), the html-generator will sort the children of this item in lexicographical order \n  before the list is displayed in the html-output. \n  A simple example would be \n   \n !$FPMDOCU #h Level1.Level2.Level3.NameOfTheCurrentLevel h# #a Optional alias statement a# #sort  \n   \n  With the sort-command (\"#sort\"), the html-generator will sort the children of this item in lexicographical order \n  before the list is displayed in the html-output. \n  A simple example would be \n   \n !$FPMDOCU #h Level1.Level2.Level3.NameOfTheCurrentLevel h# #a Optional alias statement a# #sort  \n   \n  With the sort-command (\"#sort\"), the html-generator will sort the children of this item in lexicographical order \n  before the list is displayed in the html-output. \n  A simple example would be \n   \n !$FPMDOCU #h Level1.Level2.Level3.NameOfTheCurrentLevel h# #a Optional alias statement a# #sort  \n   \n  With the sort-command (\"#sort\"), the html-generator will sort the children of this item in lexicographical order \n  before the list is displayed in the html-output. \n  A simple example would be \n   \n !$FPMDOCU #h Level1.Level2.Level3.NameOfTheCurrentLevel h# #a Optional alias statement a# #sort  \n   \n  With the sort-command (\"#sort\"), the html-generator will sort the children of this item in lexicographical order \n  before the list is displayed in the html-output. \n  A simple example would be \n   \n !$FPMDOCU #h Level1.Level2.Level3.NameOfTheCurrentLevel h# #a Optional alias statement a# #sort  \n   \n  With the sort-command (\"#sort\"), the html-generator will sort the children of this item in lexicographical order \n  before the list is displayed in the html-output. \n  A simple example would be \n   \n !$FPMDOCU #h Level1.Level2.Level3.NameOfTheCurrentLevel h# #a Optional alias statement a# #sort  \n   \n  With the sort-command (\"#sort\"), the html-generator will sort the children of this item in lexicographical order \n  before the list is displayed in the html-output. \n  A simple example would be \n   \n !$FPMDOCU #h Level1.Level2.Level3.NameOfTheCurrentLevel h# #a Optional alias statement a# #sort  \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/FPMLOG/FPMDOCU.f90 \n\n\n\n", 
        "url": "../FPM.FPMDOCU.Syntax___fpmdocu___.sort-command.html", 
        "id": 35, 
        "title": "sort-command"
    }, 
    {
        "body": "\n\nNavigationFeatures ...  features which might help for navigating the FPMDOCU pages \n\n\n\n\n\nList of members:\n\n\nFPMDOCU_Index  ...  collection of all keywords used in FPMDOCU by their first letter \nIndex  ...  collection of all keywords used in FPMDOCU by their first letter \nFPMDOCU_AllInOne  ...  compacting all FPMDOCU pages into one huge HTML-file, thus enabling to search for any string by CTRL+F \nAllInOne  ...  compacting all FPMDOCU pages into one huge HTML-file, thus enabling to search for any string by CTRL+F \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/FPMLOG/FPMDOCU.f90 \n\n\n\n", 
        "url": "../FPM.FPMDOCU.NavigationFeatures.html", 
        "id": 36, 
        "title": "NavigationFeatures"
    }, 
    {
        "body": "\n\nSAVE_intervall ...  consecutively save after a number of time cycles or a given real time interval \n\n\n  Deprecated. See SAVE_interval. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/Save/USER_save_data.f90 \n\n\n\n", 
        "url": "../FPM.FPMDOCU.Deprecated.SAVE_intervall.html", 
        "id": 37, 
        "title": "SAVE_intervall"
    }, 
    {
        "body": "\n\nFPMDOCU_Index ...  collection of all keywords used in FPMDOCU by their first letter \n\n\n  In the upper right corner of each FPMDOCU page, the \"Index\" icon can be found. By clicking, the index-pages are entered. \n  In the upper right corner of each FPMDOCU page, the \"Index\" icon can be found. By clicking, the index-pages are entered. \n  In the upper right corner of each FPMDOCU page, the \"Index\" icon can be found. By clicking, the index-pages are entered. \n  In the upper right corner of each FPMDOCU page, the \"Index\" icon can be found. By clicking, the index-pages are entered. \n  In the upper right corner of each FPMDOCU page, the \"Index\" icon can be found. By clicking, the index-pages are entered. \n  In the upper right corner of each FPMDOCU page, the \"Index\" icon can be found. By clicking, the index-pages are entered. \n  In the upper right corner of each FPMDOCU page, the \"Index\" icon can be found. By clicking, the index-pages are entered. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/FPMLOG/FPMDOCU.f90 \n\n\n\n", 
        "url": "../FPM.FPMDOCU.NavigationFeatures.FPMDOCU_Index.html", 
        "id": 38, 
        "title": "FPMDOCU_Index"
    }, 
    {
        "body": "\n\nIndex ...  collection of all keywords used in FPMDOCU by their first letter \n\n\n  see FPMDOCU_Index . \n  see FPMDOCU_Index . \n  see FPMDOCU_Index . \n  see FPMDOCU_Index . \n  see FPMDOCU_Index . \n  see FPMDOCU_Index . \n  see FPMDOCU_Index . \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/FPMLOG/FPMDOCU.f90 \n\n\n\n", 
        "url": "../FPM.FPMDOCU.NavigationFeatures.Index___FDF___.html", 
        "id": 39, 
        "title": "Index___FDF___"
    }, 
    {
        "body": "\n\nFPMDOCU_AllInOne ...  compacting all FPMDOCU pages into one huge HTML-file, thus enabling to search for any string by CTRL+F \n\n\n  In the upper right corner of each FPMDOCU page, the \"AllInOne\" icon can be found. By clicking, the (very big) html-file that contains all FPMDOCU pages \n  is entered. One can search for any string in this page by CTRL-F. Navigation-links to directly navigate back top FPMDOCU are given. \n  In the upper right corner of each FPMDOCU page, the \"AllInOne\" icon can be found. By clicking, the (very big) html-file that contains all FPMDOCU pages \n  is entered. One can search for any string in this page by CTRL-F. Navigation-links to directly navigate back top FPMDOCU are given. \n  In the upper right corner of each FPMDOCU page, the \"AllInOne\" icon can be found. By clicking, the (very big) html-file that contains all FPMDOCU pages \n  is entered. One can search for any string in this page by CTRL-F. Navigation-links to directly navigate back top FPMDOCU are given. \n  In the upper right corner of each FPMDOCU page, the \"AllInOne\" icon can be found. By clicking, the (very big) html-file that contains all FPMDOCU pages \n  is entered. One can search for any string in this page by CTRL-F. Navigation-links to directly navigate back top FPMDOCU are given. \n  In the upper right corner of each FPMDOCU page, the \"AllInOne\" icon can be found. By clicking, the (very big) html-file that contains all FPMDOCU pages \n  is entered. One can search for any string in this page by CTRL-F. Navigation-links to directly navigate back top FPMDOCU are given. \n  In the upper right corner of each FPMDOCU page, the \"AllInOne\" icon can be found. By clicking, the (very big) html-file that contains all FPMDOCU pages \n  is entered. One can search for any string in this page by CTRL-F. Navigation-links to directly navigate back top FPMDOCU are given. \n  In the upper right corner of each FPMDOCU page, the \"AllInOne\" icon can be found. By clicking, the (very big) html-file that contains all FPMDOCU pages \n  is entered. One can search for any string in this page by CTRL-F. Navigation-links to directly navigate back top FPMDOCU are given. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/FPMLOG/FPMDOCU.f90 \n\n\n\n", 
        "url": "../FPM.FPMDOCU.NavigationFeatures.FPMDOCU_AllInOne.html", 
        "id": 40, 
        "title": "FPMDOCU_AllInOne"
    }, 
    {
        "body": "\n\nAllInOne ...  compacting all FPMDOCU pages into one huge HTML-file, thus enabling to search for any string by CTRL+F \n\n\n  see FPMDOCU_AllInOne . \n  see FPMDOCU_AllInOne . \n  see FPMDOCU_AllInOne . \n  see FPMDOCU_AllInOne . \n  see FPMDOCU_AllInOne . \n  see FPMDOCU_AllInOne . \n  see FPMDOCU_AllInOne . \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/FPMLOG/FPMDOCU.f90 \n\n\n\n", 
        "url": "../FPM.FPMDOCU.NavigationFeatures.AllInOne___FDF___.html", 
        "id": 41, 
        "title": "AllInOne___FDF___"
    }, 
    {
        "body": "\n\n%ind_EdgeValue%\n\n\n  In several situations, there is a local pointcloud configuration without interior particles. \n  That might happen in airbag applications with only thin layers inbetween the membranes, \n  or it might be due to a degeneration of a 3D-water phase if thin layers of liquid evolve. \n  These situations are characterized by the absence of interior FPM-particles. \n  A compact thin layer of numerical FPM-particles does not harm the numerics, but if this \n  layer ends blindly (edge of an airbag or water front of a thin film), this can lead \n  to numerical problems. Hence, here we try to, at least, mark these blindly ending thin \n  layers of FPM-particles. \n   \n  This feature is used so far only for GASDYN applications. For LIQUID applications, \n  i.e. for the evolution of thin 3D-patricle layers, we rather use %ind_TearOff% and %ind_IsolationFlag% \n  in order to characterize the configuration of the point cloud. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Core/TimeAdministration/ADMIN_DetermineCornerPoint.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General.%ind_EdgeValue%.html", 
        "id": 42, 
        "title": "%ind_EdgeValue%"
    }, 
    {
        "body": "\n\nGeneral ...  FPM indices for general simulation entities \n\n\n  To be used by all classes of FPM solver (LIQUID, GASDYN, POPBAL, PARTICLEPHASE, ...)  \n\n\n\n\nList of members:\n\n\n%ind_BC%  ...  index of boundary condition \n%ind_BE1%  ...  BE=BoundaryElement, i.e. index of boundary element which a boundary particle is placed on \n%ind_BVA(1)%  ...  BVA=Boundary VAlue, temporary array used for defining boundary conditions \n%ind_BVA(2)%  ...  BVA=Boundary VAlue, temporary array used for defining boundary conditions \n%ind_BVA(3)%  ...  BVA=Boundary VAlue, temporary array used for defining boundary conditions \n%ind_BVA_NUS(1)%  ...  BVA_NUS=Bounbdary VAlue for NUSselt type \n%ind_BVA_NUS(2)%  ...  BVA_NUS=Boundary VAlue for NUSselt type \n%ind_BVA_NUS(3)%  ...  BVA_NUS=Boundary VAlue for NUSselt type \n%ind_ClusterSurface%  ...  clustering of free surface or of initial regular boundary \n%ind_EdgeValue%  ...  pointcloud configuration without interior points: this item marks points at the edge of such configurations \n%ind_Grad_c(1)%  ...  Gradient of correction pressure:  x \n%ind_Grad_c(2)%  ...  Gradient of correction pressure:  y \n%ind_Grad_c(3)%  ...  Gradient of correction pressure:  z \n%ind_Gradv_0(1)%  ...  Velocity Gradient:  u_x at previous timestep \n%ind_Gradv_0(2)%  ...  Velocity Gradient:  u_y at previous timestep \n%ind_Gradv_0(3)%  ...  Velocity Gradient:  u_z at previous timestep \n%ind_Gradv_0(4)%  ...  Velocity Gradient:  v_x at previous timestep \n%ind_Gradv_0(5)%  ...  Velocity Gradient:  v_y at previous timestep \n%ind_Gradv_0(6)%  ...  Velocity Gradient:  v_z at previous timestep \n%ind_Gradv_0(7)%  ...  Velocity Gradient:  w_x at previous timestep \n%ind_Gradv_0(8)%  ...  Velocity Gradient:  w_y at previous timestep \n%ind_Gradv_0(9)%  ...  Velocity Gradient:  w_z at previous timestep \n%ind_IN%  ...  current local index of particle in the MPI domain \n%ind_IN_glob%  ...  current GLOBAL index of particle in the MPI domain \n%ind_IN_glob_reduced%  ...  current GLOBAl index of particle, only active particles \n%ind_IsolationFlag%  ...  local high frequent part of local curvature, not considering contact angle effects \n%ind_MARKER%  ...  unique marker (integer number) is particle is flagged as irreducible \n%ind_MCT(1,1)%  ...  transformation matrix for coordinate transformation \n%ind_MCT(1,2)%  ...  transformation matrix for coordinate transformation \n%ind_MCT(1,3)%  ...  transformation matrix for coordinate transformation \n%ind_MCT(2,1)%  ...  transformation matrix for coordinate transformation \n%ind_MCT(2,2)%  ...  transformation matrix for coordinate transformation \n%ind_MCT(2,3)%  ...  transformation matrix for coordinate transformation \n%ind_MCT(3,1)%  ...  transformation matrix for coordinate transformation \n%ind_MCT(3,2)%  ...  transformation matrix for coordinate transformation \n%ind_MCT(3,3)%  ...  transformation matrix for coordinate transformation \n%ind_MOVE%  ...  index of boundary move condition \n%ind_MPIcommunicate%  ...  PURE POSTPROCESSING!!!!!!!!!  number of MPI-processes to which this particle has to be communicated \n%ind_OrdApprox(1)%  ...  Approximation order used for gradient computation \n%ind_OrdApprox(2)%  ...  Approximation order used for Laplace operator \n%ind_Organize%  ...  Current status of particle with respect to point cloud organization \n%ind_OrganizeDTB%  ...  status for the distance to boundary computation \n%ind_OrganizeDTMP%  ...  status for the distance/projection to metaplanes \n%ind_OrganizePC(1)%  ...  state of filling interior FPM-points \n%ind_OrganizePC(2)%  ...  state of removing interior FPM-points \n%ind_OrganizePC(3)%  ...  state of filling FPM-points at boundaries \n%ind_OrganizePC(4)%  ...  state of removing/clustering of FPM-points at boundaries \n%ind_OrganizePC(5)%  ...  currently unused \n%ind_SlipState%  ...  status of the slip status, i.e. sliding boundary particles along slip walls \n%ind_SlipState_cntnbts%  ...   \n%ind_Sn(1)%  ...  Stress tensor times boundary normal, i.e. stresses acting on surface, 
unit=Pa \n%ind_Sn(2)%  ...  Stress tensor times boundary normal, i.e. stresses acting on surface, unit=Pa \n%ind_Sn(3)%  ...  Stress tensor times boundary normal, i.e. stresses acting on surface, unit=Pa \n%ind_SubDivision%  ...  CURRENTLY INACTIVE: index for Kim`s postprocessing filter for FPM-points \n%ind_TearOff%  ...  marks a particle in direct neighborhood of a FreeSurface-SolidWall junction \n%ind_Thick%  ...  virtual stretching of thin gaps, provides the thickening factor. Not supported since 2008 \n%ind_Vi%  ...  volume represented by a particle, unit=m^3 \n%ind_act%  ...  activation status of a boundary particle \n%ind_addvar%  ...  additional variables that can be used for additional tasks \n%ind_bndBubble%  ...  index of macroscopic bubbles \n%ind_cell%  ...  cell number of the tree leaf for the tree-based neigbor search (UseBoxSystemVersion=2) \n%ind_cell_Deflation%  ...  cell number of the deflation cells (experimental status) \n%ind_cham%  ...  chamber index of particle \n%ind_cluster%  ...  unique cluster index of of pointcloud \n%ind_create%  ...   \n%ind_dA%  ...  area coverd by a boundary particle, including free surface particles, unit=m^2 \n%ind_dbp%  ...  dbp=distance between phases, unit=meters \n%ind_debug(1)%  ...  free variables in order to debug FPM and be able to visualize \n%ind_debug(2)%  ...  free variables in order to debug FPM and be able to visualize \n%ind_debug(3)%  ...  free variables in order to debug FPM and be able to visualize \n%ind_debug(4)%  ...  free variables in order to debug FPM and be able to visualize \n%ind_debug(5)%  ...  free variables in order to debug FPM and be able to visualize \n%ind_div_bar_c%  ...  PURE POSTPROCESSING: the (divergence of velocity)^bar at the point in the numerical scheme where the correction pressure is computed \n%ind_div_bar_pDyn%  ...  PURE POSTPROCESSING: the (divergence of velocity)^bar at the point in the numerical scheme where the correction pressure is computed \n%ind_dt%  ...  global time step size used for this particle, unit=seconds \n%ind_dt_0%  ...  size of the previous time step, unit=seconds \n%ind_dt_local%  ...  locally feasible time step size \n%ind_dtb%  ...  dtb=distance to boundary, unit=meters \n%ind_event_AbortFPM%  ...  current event status for event stopping FPM \n%ind_event_DeletePoint%  ...  current event status for event deleting points \n%ind_event_FunctionManipulation%  ...  current event status for function manipulation event \n%ind_event_Msg%  ...  current event status for event print message \n%ind_event_StopFPM%  ...  current event status for event stopping FPM \n%ind_h%  ...  local smoothing length, unit=meters \n%ind_h_adaptive%  ...  local smoothing length proposed for adaptive treatment of H, unit=meters \n%ind_iopp%  ...  iopp=index of opposite point. \n%ind_kappa%  ...  curvature of the free surface boundary, smooth part  \n%ind_kappa_prime%  ...  curvature of the free surface boundary, noisy part \n%ind_kob%  ...  kob=kind of boundary \n%ind_layer%  ...  layer information of boundary particle \n%ind_med%  ...  material index of particle \n%ind_medopp%  ...  material index of opposite point \n%ind_n(1)%  ...  x-component of boundary normal \n%ind_n(2)%  ...  y-component of boundary normal \n%ind_n(3)%  ...  z-component of boundary normal \n%ind_nML(1)%  ...  direction of the midline, nML=NormalizeddirectionMidLine \n%ind_nML(2)%  ...  direction of the midline \n%ind_nML(3)%  ...  direction of the midline \n%ind_nR(1)%  ...  x-component of boundary normal in RealWorld (if coordinate transformation is activated) \n%ind_nR(2)%  ...  y-component of boundary normal in RealWorld (if coordinate transformation is activated) \n%ind_nR(3)%  ...  z-component of boundary normal in RealWorld (if coordinate transformation is activated) \n%ind_nThick(1)%  ...  virtual stretching of thin gaps, provides the thickening direction \n%ind_nThick(2)%  ...  virtual stretching of thin gaps, provides the thickening direction \n%ind_nThick(3)%  ...  virtual stretching of thin gaps, provides the thickening direction \n%ind_
nbRegularNeighbors%  ...  number of regular neighbors found in the ball of radius h \n%ind_next%  ...  if particles lined up, here the index of the particle next in line is stored \n%ind_np(1)%  ...  particular direction or some vector, used as dummy variable \n%ind_np(2)%  ...  particular direction or some vector, used as dummy variable \n%ind_np(3)%  ...  particular direction or some vector, used as dummy variable \n%ind_ohh%  ...  ohh=OneByHH, i.e. one divided by local smoothing length squared \n%ind_ooh%  ...  ooh=OrderOfH, order of smooting length \n%ind_pBubble%  ...  internal pressure of macroscopic bubble \n%ind_prev%  ...  if particles lined up, here the index of the particle previous in line is stored \n%ind_proc%  ...  index of MPI-process the particle currently belongs to \n%ind_r_residual%  ...  residual of density \n%ind_rhs(1)%  ...  rhs = righ hand side, used for rhs/source terms in the differential equations to be solved \n%ind_rhs(2)%  ...  rhs = righ hand side, used for rhs/source terms in the differential equations to be solved \n%ind_rhs(3)%  ...  rhs = righ hand side, used for rhs/source terms in the differential equations to be solved \n%ind_sha(1)%  ...  shape function for boundary particles \n%ind_sha(2)%  ...  shape function for boundary particles \n%ind_sha(3)%  ...  shape function for boundary particles \n%ind_sha(4)%  ...  shape function for boundary particles \n%ind_st%  ...  st=start time of particle, unit=seconds \n%ind_time%  ...  present time, unit=seconds \n%ind_v_p(1)%  ...  x-component of the velocity of boundary movement \n%ind_v_p(2)%  ...  x-component of the velocity of boundary movement \n%ind_v_p(3)%  ...  x-component of the velocity of boundary movement \n%ind_v_residual(1)%  ...  residual of velocity (x-component) \n%ind_v_residual(2)%  ...  absolute of velocity (y-component) \n%ind_v_residual(3)%  ...  residual of velocity (z-component) \n%ind_v_trans(1)%  ...  velocity a particle is actually moving with, x-component, unit=m/s \n%ind_v_trans(2)%  ...  velocity a particle is actually moving with, y-component, unit=m/s \n%ind_v_trans(3)%  ...  velocity a particle is actually moving with, z-component, unit=m/s \n%ind_vol%  ...  numerical weight of particle \n%ind_volBubble%  ...  volume of macroscopic bubble \n%ind_x(1)%  ...  x-component of point position, unit=meters \n%ind_x(2)%  ...  y-component of point position \n%ind_x(3)%  ...  z-component of point position \n%ind_x0(1)%  ...  x-component initial particle position, unit=meters \n%ind_x0(2)%  ...  y-component initial particle position \n%ind_x0(3)%  ...  z-component initial particle position \n%ind_xR(1)%  ...  x-component of particle position in real coordinates, unit=meters \n%ind_xR(2)%  ...  y-component of particle position in real coordinates \n%ind_xR(3)%  ...  z-component of particle position in real coordinates \n%ind_x_displaced(1)%  ...  x-component of point position before distance to boundary computation, unit = meters \n%ind_x_displaced(2)%  ...  y-component of point position before distance to boundary computation, unit = meters \n%ind_x_displaced(3)%  ...  z-component of point position before distance to boundary computation, unit = meters \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.html", 
        "id": 43, 
        "title": "General___index___"
    }, 
    {
        "body": "\n\n%ind_BC% ...  index of boundary condition \n\n\n  this entity carries the index of the BC-flag, that is usually provided in the alias section by BC$BCflag$  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_BC%.html", 
        "id": 44, 
        "title": "%ind_BC%"
    }, 
    {
        "body": "\n\n%ind_BE1% ...  BE=BoundaryElement, i.e. index of boundary element which a boundary particle is placed on \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_BE1%.html", 
        "id": 45, 
        "title": "%ind_BE1%"
    }, 
    {
        "body": "\n\n%ind_BVA(1)% ...  BVA=Boundary VAlue, temporary array used for defining boundary conditions \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_BVA(1)%.html", 
        "id": 46, 
        "title": "%ind_BVA(1)%"
    }, 
    {
        "body": "\n\n%ind_BVA(2)% ...  BVA=Boundary VAlue, temporary array used for defining boundary conditions \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_BVA(2)%.html", 
        "id": 47, 
        "title": "%ind_BVA(2)%"
    }, 
    {
        "body": "\n\n%ind_BVA(3)% ...  BVA=Boundary VAlue, temporary array used for defining boundary conditions \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_BVA(3)%.html", 
        "id": 48, 
        "title": "%ind_BVA(3)%"
    }, 
    {
        "body": "\n\n%ind_BVA_NUS(1)% ...  BVA_NUS=Bounbdary VAlue for NUSselt type \n\n\n  A Nusselt type BC is given by dPHI/dn = A+B*PHI, the value A is stored in %ind_BVA(1)%, the value of B ind %ind_BVA_NUS(1)%. \n  If vector valued functions are used, the (%ind_BVA(2)%,%ind_BVA_NUS(2)%) and \n  (%ind_BVA(3)%,%ind_BVA_NUS(3)%) will be used as well. \n  The array is temporyry during a time step and cannot be used for postprocessing. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_BVA_NUS(1)%.html", 
        "id": 49, 
        "title": "%ind_BVA_NUS(1)%"
    }, 
    {
        "body": "\n\n%ind_BVA_NUS(2)% ...  BVA_NUS=Boundary VAlue for NUSselt type \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_BVA_NUS(2)%.html", 
        "id": 50, 
        "title": "%ind_BVA_NUS(2)%"
    }, 
    {
        "body": "\n\n%ind_BVA_NUS(3)% ...  BVA_NUS=Boundary VAlue for NUSselt type \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_BVA_NUS(3)%.html", 
        "id": 51, 
        "title": "%ind_BVA_NUS(3)%"
    }, 
    {
        "body": "\n\n%ind_ClusterSurface% ...  clustering of free surface or of initial regular boundary \n\n\n  During startup, clustering of the whole boundary is performed and saved in this variable index. \n  During time integration, if BUBBLE_DoTheManagement is switched, the raw index of current bubble clustering \n  is stored in this variable. This index is then copied to %ind_bndBubble% . \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_ClusterSurface%.html", 
        "id": 52, 
        "title": "%ind_ClusterSurface%"
    }, 
    {
        "body": "\n\n%ind_EdgeValue% ...  pointcloud configuration without interior points: this item marks points at the edge of such configurations \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_EdgeValue%.html", 
        "id": 53, 
        "title": "%ind_EdgeValue%"
    }, 
    {
        "body": "\n\n%ind_Grad_c(1)% ...  Gradient of correction pressure:  x \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_Grad_c(1)%.html", 
        "id": 54, 
        "title": "%ind_Grad_c(1)%"
    }, 
    {
        "body": "\n\n%ind_Grad_c(2)% ...  Gradient of correction pressure:  y \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_Grad_c(2)%.html", 
        "id": 55, 
        "title": "%ind_Grad_c(2)%"
    }, 
    {
        "body": "\n\n%ind_Grad_c(3)% ...  Gradient of correction pressure:  z \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_Grad_c(3)%.html", 
        "id": 56, 
        "title": "%ind_Grad_c(3)%"
    }, 
    {
        "body": "\n\n%ind_Gradv_0(1)% ...  Velocity Gradient:  u_x at previous timestep \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_Gradv_0(1)%.html", 
        "id": 57, 
        "title": "%ind_Gradv_0(1)%"
    }, 
    {
        "body": "\n\n%ind_Gradv_0(2)% ...  Velocity Gradient:  u_y at previous timestep \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_Gradv_0(2)%.html", 
        "id": 58, 
        "title": "%ind_Gradv_0(2)%"
    }, 
    {
        "body": "\n\n%ind_Gradv_0(3)% ...  Velocity Gradient:  u_z at previous timestep \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_Gradv_0(3)%.html", 
        "id": 59, 
        "title": "%ind_Gradv_0(3)%"
    }, 
    {
        "body": "\n\n%ind_Gradv_0(4)% ...  Velocity Gradient:  v_x at previous timestep \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_Gradv_0(4)%.html", 
        "id": 60, 
        "title": "%ind_Gradv_0(4)%"
    }, 
    {
        "body": "\n\n%ind_Gradv_0(5)% ...  Velocity Gradient:  v_y at previous timestep \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_Gradv_0(5)%.html", 
        "id": 61, 
        "title": "%ind_Gradv_0(5)%"
    }, 
    {
        "body": "\n\n%ind_Gradv_0(6)% ...  Velocity Gradient:  v_z at previous timestep \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_Gradv_0(6)%.html", 
        "id": 62, 
        "title": "%ind_Gradv_0(6)%"
    }, 
    {
        "body": "\n\n%ind_Gradv_0(7)% ...  Velocity Gradient:  w_x at previous timestep \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_Gradv_0(7)%.html", 
        "id": 63, 
        "title": "%ind_Gradv_0(7)%"
    }, 
    {
        "body": "\n\n%ind_Gradv_0(8)% ...  Velocity Gradient:  w_y at previous timestep \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_Gradv_0(8)%.html", 
        "id": 64, 
        "title": "%ind_Gradv_0(8)%"
    }, 
    {
        "body": "\n\n%ind_Gradv_0(9)% ...  Velocity Gradient:  w_z at previous timestep \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_Gradv_0(9)%.html", 
        "id": 65, 
        "title": "%ind_Gradv_0(9)%"
    }, 
    {
        "body": "\n\n%ind_IN% ...  current local index of particle in the MPI domain \n\n\n  All particles, also inactive ones (dry particles at the walls for example), have their proper index. Counting starts at 1 for each MPI-process  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_IN%.html", 
        "id": 66, 
        "title": "%ind_IN%"
    }, 
    {
        "body": "\n\n%ind_IN_glob% ...  current GLOBAL index of particle in the MPI domain \n\n\n  counting of the index starts at 1 at MPI process 0 and continues in the next MPI-domain. Also inactive particles count.  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_IN_glob%.html", 
        "id": 67, 
        "title": "%ind_IN_glob%"
    }, 
    {
        "body": "\n\n%ind_IN_glob_reduced% ...  current GLOBAl index of particle, only active particles \n\n\n  only active particles are counted, such that we have a complete chain of indices without interruptions  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_IN_glob_reduced%.html", 
        "id": 68, 
        "title": "%ind_IN_glob_reduced%"
    }, 
    {
        "body": "\n\n%ind_IsolationFlag% ...  local high frequent part of local curvature, not considering contact angle effects \n\n\n  This entity is similar to %ind_kappa_prime%, however, unlike %ind_kappa_prime%, it does not take into account the contact angle information \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_IsolationFlag%.html", 
        "id": 69, 
        "title": "%ind_IsolationFlag%"
    }, 
    {
        "body": "\n\n%ind_MARKER% ...  unique marker (integer number) is particle is flagged as irreducible \n\n\n  see especially %MONITORPOINTS_CREATION_IrreducibleFPMpoint%  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_MARKER%.html", 
        "id": 70, 
        "title": "%ind_MARKER%"
    }, 
    {
        "body": "\n\n%ind_MCT(1,1)% ...  transformation matrix for coordinate transformation \n\n\n  An infinitessimal vector DxT in the transformed space will be mapped to \n  to the real world space by  \n  DxR = MCT*DxT \n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_MCT(1,1)%.html", 
        "id": 71, 
        "title": "%ind_MCT(1,1)%"
    }, 
    {
        "body": "\n\n%ind_MCT(1,2)% ...  transformation matrix for coordinate transformation \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_MCT(1,2)%.html", 
        "id": 72, 
        "title": "%ind_MCT(1,2)%"
    }, 
    {
        "body": "\n\n%ind_MCT(1,3)% ...  transformation matrix for coordinate transformation \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_MCT(1,3)%.html", 
        "id": 73, 
        "title": "%ind_MCT(1,3)%"
    }, 
    {
        "body": "\n\n%ind_MCT(2,1)% ...  transformation matrix for coordinate transformation \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_MCT(2,1)%.html", 
        "id": 74, 
        "title": "%ind_MCT(2,1)%"
    }, 
    {
        "body": "\n\n%ind_MCT(2,2)% ...  transformation matrix for coordinate transformation \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_MCT(2,2)%.html", 
        "id": 75, 
        "title": "%ind_MCT(2,2)%"
    }, 
    {
        "body": "\n\n%ind_MCT(2,3)% ...  transformation matrix for coordinate transformation \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_MCT(2,3)%.html", 
        "id": 76, 
        "title": "%ind_MCT(2,3)%"
    }, 
    {
        "body": "\n\n%ind_MCT(3,1)% ...  transformation matrix for coordinate transformation \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_MCT(3,1)%.html", 
        "id": 77, 
        "title": "%ind_MCT(3,1)%"
    }, 
    {
        "body": "\n\n%ind_MCT(3,2)% ...  transformation matrix for coordinate transformation \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_MCT(3,2)%.html", 
        "id": 78, 
        "title": "%ind_MCT(3,2)%"
    }, 
    {
        "body": "\n\n%ind_MCT(3,3)% ...  transformation matrix for coordinate transformation \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_MCT(3,3)%.html", 
        "id": 79, 
        "title": "%ind_MCT(3,3)%"
    }, 
    {
        "body": "\n\n%ind_MOVE% ...  index of boundary move condition \n\n\n  this entity carries the index of the MOVE-flag, that is usually provided in the alias section by MOVE$MOVEflag$  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_MOVE%.html", 
        "id": 80, 
        "title": "%ind_MOVE%"
    }, 
    {
        "body": "\n\n%ind_MPIcommunicate% ...  PURE POSTPROCESSING!!!!!!!!!  number of MPI-processes to which this particle has to be communicated \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_MPIcommunicate%.html", 
        "id": 81, 
        "title": "%ind_MPIcommunicate%"
    }, 
    {
        "body": "\n\n%ind_OrdApprox(1)% ...  Approximation order used for gradient computation \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_OrdApprox(1)%.html", 
        "id": 82, 
        "title": "%ind_OrdApprox(1)%"
    }, 
    {
        "body": "\n\n%ind_OrdApprox(2)% ...  Approximation order used for Laplace operator \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_OrdApprox(2)%.html", 
        "id": 83, 
        "title": "%ind_OrdApprox(2)%"
    }, 
    {
        "body": "\n\n%ind_Organize% ...  Current status of particle with respect to point cloud organization \n\n\n  It can take the following values: \n  %ORGANIZE_none% \n  %ORGANIZE_CandidateForFreeSurface% \n  %ORGANIZE_WasPushedToFreeSurface0% \n  %ORGANIZE_WasPushedToFreeSurface% \n  %ORGANIZE_WasCreatedNearMetaplanes% \n  %ORGANIZE_WasPushedBackFromBoundary% \n  %ORGANIZE_HasCreatedMonitorPoint% \n  %ORGANIZE_CreatedByShallowWater% \n  %ORGANIZE_CreatedByTouchDownOfFreeSurface% \n  %ORGANIZE_IsIsolated% \n  %ORGANIZE_WasNotConsideredForActivation% \n  %ORGANIZE_DeactivationDueToLackOfInteriorParticles% \n  %ORGANIZE_ActivationDueToLackOfFreeSurface% \n  %ORGANIZE_ExplicitelyCheckedForActivation% \n  %ORGANIZE_CandidateForAtivation% \n  %ORGANIZE_HasRunThroughActivationProcedure% \n  %ORGANIZE_IsNotActive% \n  %ORGANIZE_MeanReduction% \n  %ORGANIZE_MinReduction% \n  %ORGANIZE_MaxReduction% \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_Organize%.html", 
        "id": 84, 
        "title": "%ind_Organize%"
    }, 
    {
        "body": "\n\n%ind_OrganizeDTB% ...  status for the distance to boundary computation \n\n\n  reveals the stats of the latest distance to boundary computation \n   \n   %ind_OrganizeDTB% == %ORGANIZE_none%  -> nothing done for this point (i.e. regular boundary point etc.) \n                     == 0.1              -> no distance check as no boundary FPM-point found in neighborhood and no boundary is on reduced filling mode \n                     == 0.2              -> no distance check as all boundary FPM-points see the current point in inside direction (only if no boundary is in reduces filling mode) \n                     == 0.3              -> marked for distance to boundary computation \n                     == 0.4              -> no boundray found in neighborhood \n                     == 0.45             -> point projects to a %BND_blind% -boundary \n                     == 0.5              -> point projects to regular boundary \n                     == 0.51             -> point project down to a nofill boundary (special: only first time step) \n                     == 0.6              -> point is checked for penetration thorough boundary \n                     == 0.61             -> intersection with boundary is found \n                     == 0.62             -> intersection with boundary is found and point really will be reprojected, i.e. push back ontop of the boundary \n                     == 0.63             -> intersection with boundary is found, but reproject is risky (too long projectino distance) and thus point is deleted \n                     == 0.7              -> regular FPM-point, enough distance to boundary \n                     == 0.72             -> distance to boundary smaller than dist_LayerThickness, but point not treated as it stems from tear off at edges \n                     == 0.73             -> distance to boundary smaller than dist_LayerThickness, but also less than zero, so further treatment launched (see 0.8 and bigger) \n                     == 0.74             -> isolated FPM point, pushed due to the value of dist_LayerThickness given in common_vairables.dat \n                     == 0.75             -> FPM point who provided to small layer thickness compared to the given value of dist_LayerThickness, hence position of point is adjusted \n                     == 0.76             -> thickening thin layer due to more or less perpendicular interaction of free surface point with boundary \n                     == 0.8              -> free surface point finally INSIDE \n                     == 0.9              -> free surface point OUTSIDE \n                     == 0.91             -> free surface point OUTSIDE, but stemming from tear off edge \n                     == 0.92             -> free surface point OUTSIDE, but stemming from tear off edge \n                     == 0.93             -> free surface point OUTSIDE, too for from boundary, i.e. deleted \n                     == 0.94             -> free surface point OUTSIDE, that might have penetrated trough thin walls, i.e. deletd \n                     == 0.95             -> free surface point OUTSIDE, reprjected to boundary if necessary \n                     > 1                 -> regular removal of point \n                     == %ORGANIZE_CreatedByTouchDownOfFreeSurface% -> reprojection to boundary completed \n   \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_OrganizeDTB%.html", 
        "id": 85, 
        "title": "%ind_OrganizeDTB%"
    }, 
    {
        "body": "\n\n%ind_OrganizeDTMP% ...  status for the distance/projection to metaplanes \n\n\n  if point currently IS in contact with metaplane value=1, if it was previously, value=-1, if not contact, value=0  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_OrganizeDTMP%.html", 
        "id": 86, 
        "title": "%ind_OrganizeDTMP%"
    }, 
    {
        "body": "\n\n%ind_OrganizePC(1)% ...  state of filling interior FPM-points \n\n\n  Y%ind_OrganizePC(1)% == 0 : no action of interior-point-filling was taken for this point \n  Y%ind_OrganizePC(1)% == 1 : scheduled to fill new interior FPM-point \n  Y%ind_OrganizePC(1)% == 2 : scheduled to inject new interior FPM-point \n  Y%ind_OrganizePC(1)% == 3 : actually filled new interior FPM-point in its neighborhood \n  Y%ind_OrganizePC(1)% == 4 : actually injected new interior FPM-point in the direction of its boundary normal \n  Y%ind_OrganizePC(1)% == 5 : this particle just was created by an FPM-point in its neighborhood \n  Y%ind_OrganizePC(1)% == 6 : this FPM-point was just injected by another (boundary) particle in its neighborhood \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_OrganizePC(1)%.html", 
        "id": 87, 
        "title": "%ind_OrganizePC(1)%"
    }, 
    {
        "body": "\n\n%ind_OrganizePC(2)% ...  state of removing interior FPM-points \n\n\n  Y%ind_OrganizePC(2)% == 0  : no removal action taken based on this FPM-point \n  Y%ind_OrganizePC(2)% == 1  : this FPM-point is the result of a clustering operation of two FPM-points into one \n  Y%ind_OrganizePC(2)% == -1 : this FPM-point is marked for deletion and will be remove at the beginning of the next time step \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_OrganizePC(2)%.html", 
        "id": 88, 
        "title": "%ind_OrganizePC(2)%"
    }, 
    {
        "body": "\n\n%ind_OrganizePC(3)% ...  state of filling FPM-points at boundaries \n\n\n  Y%ind_OrganizePC(3)% == 0 : no action of surface/boundary filling taken for this point \n  Y%ind_OrganizePC(3)% == 1 : scheduled for hole search in its neighborhood \n  Y%ind_OrganizePC(3)% == 2 : actually created particle in its neighborhood \n  Y%ind_OrganizePC(3)% == 3 : particle was just created by an already existing particle in the neighborhood \n  Y%ind_OrganizePC(3)% == 4 : (only free surface); particle was created AND scheduled for the \"BringToSurface\" algorithm \n  Y%ind_OrganizePC(3)% == 5 : (only free surface); particle was created, and the \"BringToSurfcae\"-algorithm was effected \n  Y%ind_OrganizePC(3)% == 6 : (only free surface); particle was previously interior and changed to %BND_free% \n  Y%ind_OrganizePC(3)% == 7 : (only free surface); particle was previously interior and changed to %BND_free%, additionally the \"BringToSurfcae\"-algorithm was effected \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_OrganizePC(3)%.html", 
        "id": 89, 
        "title": "%ind_OrganizePC(3)%"
    }, 
    {
        "body": "\n\n%ind_OrganizePC(4)% ...  state of removing/clustering of FPM-points at boundaries \n\n\n  Y%ind_OrganizePC(4)% == 0 : no removal action applied to this FPM-point \n  Y%ind_OrganizePC(4)% == 1 : two points clustered into one. They have been closer to each other than (dist_rip * H). Mean average is taken from both original points. \n  Y%ind_OrganizePC(4)% == 2 : two points clustered into one. They have been closer to each other than (0.01*H), which might come into being by creating new particles (accross MPI-process bounds, concurrent OMP-threads) \n  Y%ind_OrganizePC(4)% == 3 : one point removed because too close to the present point. REMARK: two points cannot be clustered if one is interior and one is boundary. The boundary point is kept, the interior one is removed. \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_OrganizePC(4)%.html", 
        "id": 90, 
        "title": "%ind_OrganizePC(4)%"
    }, 
    {
        "body": "\n\n%ind_OrganizePC(5)% ...  currently unused \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_OrganizePC(5)%.html", 
        "id": 91, 
        "title": "%ind_OrganizePC(5)%"
    }, 
    {
        "body": "\n\n%ind_SlipState% ...  status of the slip status, i.e. sliding boundary particles along slip walls \n\n\n  ... currently experimental  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_SlipState%.html", 
        "id": 92, 
        "title": "%ind_SlipState%"
    }, 
    {
        "body": "\n\n%ind_SlipState_cntnbts% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_SlipState_cntnbts%.html", 
        "id": 93, 
        "title": "%ind_SlipState_cntnbts%"
    }, 
    {
        "body": "\n\n%ind_Sn(1)% ...  Stress tensor times boundary normal, i.e. stresses acting on surface, unit=Pa \n\n\n  x-component of   \n \n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_Sn(1)%.html", 
        "id": 94, 
        "title": "%ind_Sn(1)%"
    }, 
    {
        "body": "\n\n%ind_Sn(2)% ...  Stress tensor times boundary normal, i.e. stresses acting on surface, unit=Pa \n\n\n  y-component of     \n \n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_Sn(2)%.html", 
        "id": 95, 
        "title": "%ind_Sn(2)%"
    }, 
    {
        "body": "\n\n%ind_Sn(3)% ...  Stress tensor times boundary normal, i.e. stresses acting on surface, unit=Pa \n\n\n  z-component of     \n \n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_Sn(3)%.html", 
        "id": 96, 
        "title": "%ind_Sn(3)%"
    }, 
    {
        "body": "\n\n%ind_SubDivision% ...  CURRENTLY INACTIVE: index for Kim`s postprocessing filter for FPM-points \n\n\n  does not work, so index switched off  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_SubDivision%.html", 
        "id": 97, 
        "title": "%ind_SubDivision%"
    }, 
    {
        "body": "\n\n%ind_TearOff% ...  marks a particle in direct neighborhood of a FreeSurface-SolidWall junction \n\n\n  If a wall particle is directly adjacent to a free surface, then %ind_TearOff% will \n  become positive and carries the index of the adjacent free surface particle. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_TearOff%.html", 
        "id": 98, 
        "title": "%ind_TearOff%"
    }, 
    {
        "body": "\n\n%ind_Thick% ...  virtual stretching of thin gaps, provides the thickening factor. Not supported since 2008 \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_Thick%.html", 
        "id": 99, 
        "title": "%ind_Thick%"
    }, 
    {
        "body": "\n\n%ind_Vi% ...  volume represented by a particle, unit=m^3 \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_Vi%.html", 
        "id": 100, 
        "title": "%ind_Vi%"
    }, 
    {
        "body": "\n\n%ind_act% ...  activation status of a boundary particle \n\n\n  contains the number of time steps the particle was active without break. For inactive particles, we have 0 or (temporarily) a negative number  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_act%.html", 
        "id": 101, 
        "title": "%ind_act%"
    }, 
    {
        "body": "\n\n%ind_addvar% ...  additional variables that can be used for additional tasks \n\n\n  Additional variables can be the following \n   \n  %ind_addvar(1)% \n  %ind_addvar(2)% \n  %ind_addvar(3)% \n  %ind_addvar(4)% \n  %ind_addvar(5)% \n  %ind_addvar(6)% \n  %ind_addvar(7)% \n  %ind_addvar(8)% \n  %ind_addvar(9)% \n   \n  They can be freely used in the input file USER_common_variables.dat. \n   \n  If additinal variables will have to be in place, a defintion of the number \n  of additional variables (N_addvar) has to be given in common_variables.dat \n   \n  Using %ind_addvar(9)% for if N_addvar=3 will lead to serious \n  problems during code execution. \n   \n\n\n\n\nList of members:\n\n\n%ind_addvar(1)%  ...  additional variables that can be used for additional tasks \n%ind_addvar(2)%  ...  additional variables that can be used for additional tasks \n%ind_addvar(3)%  ...  additional variables that can be used for additional tasks \n%ind_addvar(4)%  ...  additional variables that can be used for additional tasks \n%ind_addvar(5)%  ...  additional variables that can be used for additional tasks \n%ind_addvar(6)%  ...  additional variables that can be used for additional tasks \n%ind_addvar(7)%  ...  additional variables that can be used for additional tasks \n%ind_addvar(8)%  ...  additional variables that can be used for additional tasks \n%ind_addvar(9)%  ...  additional variables that can be used for additional tasks \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_addvar%.html", 
        "id": 102, 
        "title": "%ind_addvar%"
    }, 
    {
        "body": "\n\n%ind_addvar(1)% ...  additional variables that can be used for additional tasks \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_addvar%.%ind_addvar(1)%.html", 
        "id": 103, 
        "title": "%ind_addvar(1)%"
    }, 
    {
        "body": "\n\n%ind_addvar(2)% ...  additional variables that can be used for additional tasks \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_addvar%.%ind_addvar(2)%.html", 
        "id": 104, 
        "title": "%ind_addvar(2)%"
    }, 
    {
        "body": "\n\n%ind_addvar(3)% ...  additional variables that can be used for additional tasks \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_addvar%.%ind_addvar(3)%.html", 
        "id": 105, 
        "title": "%ind_addvar(3)%"
    }, 
    {
        "body": "\n\n%ind_addvar(4)% ...  additional variables that can be used for additional tasks \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_addvar%.%ind_addvar(4)%.html", 
        "id": 106, 
        "title": "%ind_addvar(4)%"
    }, 
    {
        "body": "\n\n%ind_addvar(5)% ...  additional variables that can be used for additional tasks \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_addvar%.%ind_addvar(5)%.html", 
        "id": 107, 
        "title": "%ind_addvar(5)%"
    }, 
    {
        "body": "\n\n%ind_addvar(6)% ...  additional variables that can be used for additional tasks \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_addvar%.%ind_addvar(6)%.html", 
        "id": 108, 
        "title": "%ind_addvar(6)%"
    }, 
    {
        "body": "\n\n%ind_addvar(7)% ...  additional variables that can be used for additional tasks \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_addvar%.%ind_addvar(7)%.html", 
        "id": 109, 
        "title": "%ind_addvar(7)%"
    }, 
    {
        "body": "\n\n%ind_addvar(8)% ...  additional variables that can be used for additional tasks \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_addvar%.%ind_addvar(8)%.html", 
        "id": 110, 
        "title": "%ind_addvar(8)%"
    }, 
    {
        "body": "\n\n%ind_addvar(9)% ...  additional variables that can be used for additional tasks \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_addvar%.%ind_addvar(9)%.html", 
        "id": 111, 
        "title": "%ind_addvar(9)%"
    }, 
    {
        "body": "\n\n%ind_bndBubble% ...  index of macroscopic bubbles \n\n\n  Macroscopic bubbles are deteced in the BubbleAlgorithm. A particle that is part of the surface of \n  such a bubble is marked with its index. Each enclosed volume (bubble) obtains \n  its proper index. Paticles forming a bubble can be active free surface particles (%BND_free%) \n  or inactive boundary particles (%BND_wall%, %BND_slip%, %BND_inflow%, %BND_outflow%). \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_bndBubble%.html", 
        "id": 112, 
        "title": "%ind_bndBubble%"
    }, 
    {
        "body": "\n\n%ind_cell% ...  cell number of the tree leaf for the tree-based neigbor search (UseBoxSystemVersion=2) \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_cell%.html", 
        "id": 113, 
        "title": "%ind_cell%"
    }, 
    {
        "body": "\n\n%ind_cell_Deflation% ...  cell number of the deflation cells (experimental status) \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_cell_Deflation%.html", 
        "id": 114, 
        "title": "%ind_cell_Deflation%"
    }, 
    {
        "body": "\n\n%ind_cham% ...  chamber index of particle \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_cham%.html", 
        "id": 115, 
        "title": "%ind_cham%"
    }, 
    {
        "body": "\n\n%ind_cluster% ...  unique cluster index of of pointcloud \n\n\n  Cluster computation is invoked by SCAN_ClustersOfConnectivity. It delivers a unique cluster index for each FPM point, also in MPI-mode . ", 
        "url": "../FPM.Indices.General___index___.%ind_cluster%.html", 
        "id": 116, 
        "title": "%ind_cluster%"
    }, 
    {
        "body": "\n\n%ind_create% ...   \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_create%.html", 
        "id": 117, 
        "title": "%ind_create%"
    }, 
    {
        "body": "\n\n%ind_dA% ...  area coverd by a boundary particle, including free surface particles, unit=m^2 \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_dA%.html", 
        "id": 118, 
        "title": "%ind_dA%"
    }, 
    {
        "body": "\n\n%ind_dbp% ...  dbp=distance between phases, unit=meters \n\n\n  if phase contact exists, this item provides the measured distance between the two phases  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_dbp%.html", 
        "id": 119, 
        "title": "%ind_dbp%"
    }, 
    {
        "body": "\n\n%ind_debug(1)% ...  free variables in order to debug FPM and be able to visualize \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_debug(1)%.html", 
        "id": 120, 
        "title": "%ind_debug(1)%"
    }, 
    {
        "body": "\n\n%ind_debug(2)% ...  free variables in order to debug FPM and be able to visualize \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_debug(2)%.html", 
        "id": 121, 
        "title": "%ind_debug(2)%"
    }, 
    {
        "body": "\n\n%ind_debug(3)% ...  free variables in order to debug FPM and be able to visualize \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_debug(3)%.html", 
        "id": 122, 
        "title": "%ind_debug(3)%"
    }, 
    {
        "body": "\n\n%ind_debug(4)% ...  free variables in order to debug FPM and be able to visualize \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_debug(4)%.html", 
        "id": 123, 
        "title": "%ind_debug(4)%"
    }, 
    {
        "body": "\n\n%ind_debug(5)% ...  free variables in order to debug FPM and be able to visualize \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_debug(5)%.html", 
        "id": 124, 
        "title": "%ind_debug(5)%"
    }, 
    {
        "body": "\n\n%ind_div_bar_c% ...  PURE POSTPROCESSING: the (divergence of velocity)^bar at the point in the numerical scheme where the correction pressure is computed \n\n\n  see the Scheme v-- and vp-  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_div_bar_c%.html", 
        "id": 125, 
        "title": "%ind_div_bar_c%"
    }, 
    {
        "body": "\n\n%ind_div_bar_pDyn% ...  PURE POSTPROCESSING: the (divergence of velocity)^bar at the point in the numerical scheme where the correction pressure is computed \n\n\n  see the Scheme v-- and vp-  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_div_bar_pDyn%.html", 
        "id": 126, 
        "title": "%ind_div_bar_pDyn%"
    }, 
    {
        "body": "\n\n%ind_dt% ...  global time step size used for this particle, unit=seconds \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_dt%.html", 
        "id": 127, 
        "title": "%ind_dt%"
    }, 
    {
        "body": "\n\n%ind_dt_0% ...  size of the previous time step, unit=seconds \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_dt_0%.html", 
        "id": 128, 
        "title": "%ind_dt_0%"
    }, 
    {
        "body": "\n\nSolvers\n\n\n\n\n\nList of members:\n\n\nGeometry  ... Geometry\nNumerics  ... Numerics\n\n\n\n\n\n", 
        "url": "../FPM.Solvers.html", 
        "id": 129, 
        "title": "Solvers"
    }, 
    {
        "body": "\n\n%ind_dt_local% ...  locally feasible time step size \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_dt_local%.html", 
        "id": 130, 
        "title": "%ind_dt_local%"
    }, 
    {
        "body": "\n\n%ind_dtb% ...  dtb=distance to boundary, unit=meters \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_dtb%.html", 
        "id": 131, 
        "title": "%ind_dtb%"
    }, 
    {
        "body": "\n\n%ind_event_AbortFPM% ...  current event status for event stopping FPM \n\n\n  It can take the following values: \n  0   -- points which do not activate aborting of FPM \n  1   -- points which activate stopping aborting at this time step \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_event_AbortFPM%.html", 
        "id": 132, 
        "title": "%ind_event_AbortFPM%"
    }, 
    {
        "body": "\n\n%ind_event_DeletePoint% ...  current event status for event deleting points \n\n\n  It can take the following values: \n  0   -- points not being a neighbor of at this time step deleted point \n  -1  -- neighboring points of at this time step deleted point \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_event_DeletePoint%.html", 
        "id": 133, 
        "title": "%ind_event_DeletePoint%"
    }, 
    {
        "body": "\n\n%ind_event_FunctionManipulation% ...  current event status for function manipulation event \n\n\n  It can take the following values: \n  0   -- points not influenced by any function manipulation event \n  1   -- points directly influenced by a function manipulation event in the current time step \n  -1  -- neighboring points of at this time step directly influenced points \n  0.1 -- points filled by at this time step directly influenced points \n  >1  -- points that have been previously affected by a function manipulation event \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_event_FunctionManipulation%.html", 
        "id": 134, 
        "title": "%ind_event_FunctionManipulation%"
    }, 
    {
        "body": "\n\n%ind_event_Msg% ...  current event status for event print message \n\n\n  It can take the following values: \n  0   -- points which do not activate message \n  1   -- points which activate message printing at this time step \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_event_Msg%.html", 
        "id": 135, 
        "title": "%ind_event_Msg%"
    }, 
    {
        "body": "\n\n%ind_event_StopFPM% ...  current event status for event stopping FPM \n\n\n  It can take the following values: \n  0   -- points which do not activate stopping FPM \n  1   -- points which activate stopping FPM at this time step \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_event_StopFPM%.html", 
        "id": 136, 
        "title": "%ind_event_StopFPM%"
    }, 
    {
        "body": "\n\n%ind_h% ...  local smoothing length, unit=meters \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_h%.html", 
        "id": 137, 
        "title": "%ind_h%"
    }, 
    {
        "body": "\n\n%ind_h_adaptive% ...  local smoothing length proposed for adaptive treatment of H, unit=meters \n\n\n  In case of USER_h_funct = 'ADTV' , his variable contains the propsed value of smoothing length  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_h_adaptive%.html", 
        "id": 138, 
        "title": "%ind_h_adaptive%"
    }, 
    {
        "body": "\n\n%ind_iopp% ...  iopp=index of opposite point. \n\n\n  if a particle lies at a phase boundary and a communicating partner (opposite point) was found, then this item provides the particle index of this point  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_iopp%.html", 
        "id": 139, 
        "title": "%ind_iopp%"
    }, 
    {
        "body": "\n\n%ind_kappa% ...  curvature of the free surface boundary, smooth part  \n\n\n  the curvature of the free surface is split into a smooth part and a fluctuation part: \n   \n  kappa_measured = kappa + kappa_prime \n   \n  In general, the measurement of the curvature of the free surface is noisy due to the particle \n  locations, the smooth part kappa \n  however provides a good value that goes into the boundary condition for the hydrostatic pressure. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_kappa%.html", 
        "id": 140, 
        "title": "%ind_kappa%"
    }, 
    {
        "body": "\n\n%ind_kappa_prime% ...  curvature of the free surface boundary, noisy part \n\n\n  kappa_measured = kappa + kappa_prime  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_kappa_prime%.html", 
        "id": 141, 
        "title": "%ind_kappa_prime%"
    }, 
    {
        "body": "\n\n%ind_kob% ...  kob=kind of boundary \n\n\n  type of boundary the boundary particle might have, i.e. %BND_free%, %BND_none%, %BND_inflow% etc.  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_kob%.html", 
        "id": 142, 
        "title": "%ind_kob%"
    }, 
    {
        "body": "\n\n%ind_layer% ...  layer information of boundary particle \n\n\n  layer index of the boundary element, which the FPM particle has closest distance to  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_layer%.html", 
        "id": 143, 
        "title": "%ind_layer%"
    }, 
    {
        "body": "\n\n%ind_med% ...  material index of particle \n\n\n  med = medium  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_med%.html", 
        "id": 144, 
        "title": "%ind_med%"
    }, 
    {
        "body": "\n\n%ind_medopp% ...  material index of opposite point \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_medopp%.html", 
        "id": 145, 
        "title": "%ind_medopp%"
    }, 
    {
        "body": "\n\n%ind_n(1)% ...  x-component of boundary normal \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_n(1)%.html", 
        "id": 146, 
        "title": "%ind_n(1)%"
    }, 
    {
        "body": "\n\n%ind_n(2)% ...  y-component of boundary normal \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_n(2)%.html", 
        "id": 147, 
        "title": "%ind_n(2)%"
    }, 
    {
        "body": "\n\n%ind_n(3)% ...  z-component of boundary normal \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_n(3)%.html", 
        "id": 148, 
        "title": "%ind_n(3)%"
    }, 
    {
        "body": "\n\n%ind_nML(1)% ...  direction of the midline, nML=NormalizeddirectionMidLine \n\n\n  The midline was computed in tank filling applications, i.e. a virtual line along the center of the \n  filling pipe. In longitudinal direction, space was compressed, such that in \n  this direction, less FPM particles have to be used \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_nML(1)%.html", 
        "id": 149, 
        "title": "%ind_nML(1)%"
    }, 
    {
        "body": "\n\n%ind_nML(2)% ...  direction of the midline \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_nML(2)%.html", 
        "id": 150, 
        "title": "%ind_nML(2)%"
    }, 
    {
        "body": "\n\n%ind_nML(3)% ...  direction of the midline \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_nML(3)%.html", 
        "id": 151, 
        "title": "%ind_nML(3)%"
    }, 
    {
        "body": "\n\n%ind_nR(1)% ...  x-component of boundary normal in RealWorld (if coordinate transformation is activated) \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_nR(1)%.html", 
        "id": 152, 
        "title": "%ind_nR(1)%"
    }, 
    {
        "body": "\n\n%ind_nR(2)% ...  y-component of boundary normal in RealWorld (if coordinate transformation is activated) \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_nR(2)%.html", 
        "id": 153, 
        "title": "%ind_nR(2)%"
    }, 
    {
        "body": "\n\n%ind_nR(3)% ...  z-component of boundary normal in RealWorld (if coordinate transformation is activated) \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_nR(3)%.html", 
        "id": 154, 
        "title": "%ind_nR(3)%"
    }, 
    {
        "body": "\n\n%ind_nThick(1)% ...  virtual stretching of thin gaps, provides the thickening direction \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_nThick(1)%.html", 
        "id": 155, 
        "title": "%ind_nThick(1)%"
    }, 
    {
        "body": "\n\n%ind_nThick(2)% ...  virtual stretching of thin gaps, provides the thickening direction \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_nThick(2)%.html", 
        "id": 156, 
        "title": "%ind_nThick(2)%"
    }, 
    {
        "body": "\n\n%ind_nThick(3)% ...  virtual stretching of thin gaps, provides the thickening direction \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_nThick(3)%.html", 
        "id": 157, 
        "title": "%ind_nThick(3)%"
    }, 
    {
        "body": "\n\n%ind_nbRegularNeighbors% ...  number of regular neighbors found in the ball of radius h \n\n\n  The original number of neighbors after seach in the ball with radius h. ", 
        "url": "../FPM.Indices.General___index___.%ind_nbRegularNeighbors%.html", 
        "id": 158, 
        "title": "%ind_nbRegularNeighbors%"
    }, 
    {
        "body": "\n\n%ind_next% ...  if particles lined up, here the index of the particle next in line is stored \n\n\n  Lining up is an option if EULER is used. In this case, the transport operators (v*grad()) can be better \n  approximated if particles are lined up due to the velocity field. Invoke lining up by \n  KOP(...) = ... EULER ... POINTS:LINEUP \n  in the solver line of USER_common_variables. Besides this item, %ind_prev% is also important. \n\n\n\n\nThis item is referenced in:\n\n\n%ind_prev%  ...  if particles lined up, here the index of the particle previous in line is stored \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_next%.html", 
        "id": 159, 
        "title": "%ind_next%"
    }, 
    {
        "body": "\n\n%ind_np(1)% ...  particular direction or some vector, used as dummy variable \n\n\n  usually, in this variable the gradient of pressure is stored, i.e. grad_p = (Y%ind_np(1)%,Y%ind_np(2)%,lY%ind_np(3)%)  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_np(1)%.html", 
        "id": 160, 
        "title": "%ind_np(1)%"
    }, 
    {
        "body": "\n\n%ind_np(2)% ...  particular direction or some vector, used as dummy variable \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_np(2)%.html", 
        "id": 161, 
        "title": "%ind_np(2)%"
    }, 
    {
        "body": "\n\n%ind_np(3)% ...  particular direction or some vector, used as dummy variable \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_np(3)%.html", 
        "id": 162, 
        "title": "%ind_np(3)%"
    }, 
    {
        "body": "\n\n%ind_ohh% ...  ohh=OneByHH, i.e. one divided by local smoothing length squared \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_ohh%.html", 
        "id": 163, 
        "title": "%ind_ohh%"
    }, 
    {
        "body": "\n\n%ind_ooh% ...  ooh=OrderOfH, order of smooting length \n\n\n  this entity is deprecated, the order of smooting length i.e. one divided by local smoothing length was important for the formerly used box-based neighbor search (UseBoxSystemVersion=1). For the tree-based neighbor search (UseBoxSystemVersion=2), ind_ooh does not have any meaning  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_ooh%.html", 
        "id": 164, 
        "title": "%ind_ooh%"
    }, 
    {
        "body": "\n\n%ind_pBubble% ...  internal pressure of macroscopic bubble \n\n\n  internal pressure af the bubble this particle belongs to. It is computed according to the BubbleAlgorithm.  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_pBubble%.html", 
        "id": 165, 
        "title": "%ind_pBubble%"
    }, 
    {
        "body": "\n\n%ind_prev% ...  if particles lined up, here the index of the particle previous in line is stored \n\n\n  Lining up is an option if EULER is used. In this case, the transport operators (v*grad()) can be better \n  approximated if particles are lined up due to the velocity field. Invoke lining up by \n  KOP(...) = ... EULER ... POINTS:LINEUP \n  in the solver line of USER_common_variables. Besides this item, %ind_next% plays a role. \n\n\n\n\nThis item is referenced in:\n\n\n%ind_next%  ...  if particles lined up, here the index of the particle next in line is stored \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_prev%.html", 
        "id": 166, 
        "title": "%ind_prev%"
    }, 
    {
        "body": "\n\n%ind_proc% ...  index of MPI-process the particle currently belongs to \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_proc%.html", 
        "id": 167, 
        "title": "%ind_proc%"
    }, 
    {
        "body": "\n\n%ind_r_residual% ...  residual of density \n\n\n  We assume the general equation of mass conservation \n   \n  and define the residuum as to be \n   \n    \n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_r_residual%.html", 
        "id": 168, 
        "title": "%ind_r_residual%"
    }, 
    {
        "body": "\n\n%ind_rhs(1)% ...  rhs = righ hand side, used for rhs/source terms in the differential equations to be solved \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_rhs(1)%.html", 
        "id": 169, 
        "title": "%ind_rhs(1)%"
    }, 
    {
        "body": "\n\n%ind_rhs(2)% ...  rhs = righ hand side, used for rhs/source terms in the differential equations to be solved \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_rhs(2)%.html", 
        "id": 170, 
        "title": "%ind_rhs(2)%"
    }, 
    {
        "body": "\n\n%ind_rhs(3)% ...  rhs = righ hand side, used for rhs/source terms in the differential equations to be solved \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_rhs(3)%.html", 
        "id": 171, 
        "title": "%ind_rhs(3)%"
    }, 
    {
        "body": "\n\n%ind_sha(1)% ...  shape function for boundary particles \n\n\n  A position of a boundary particle can be expressed by the node points of the element, on which the \n  particle is placed: x = sha(1)*A + sha(2)*B + sha(3)*C + sha(4)*D \n  where A, B, C, D are the node points of the boundary element. In case of a quad, all four are used, \n  in case of a triangle, D is unused and sha(4)=0. In case of a line, C, D are void and therefore sha(3)=sha(4)=0. \n  If the particle is interior, free surface or phase boundary, the vector (Y%sha(1)%,Y%ind_sha(2)%,Y%ind_sha(3)%) represents the \n  boundary normal of the particular boundary point, which the particle has its closest distance to. \n  Remark: The index of the according boundary element is to be found in %ind_BE1% \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_sha(1)%.html", 
        "id": 172, 
        "title": "%ind_sha(1)%"
    }, 
    {
        "body": "\n\n%ind_sha(2)% ...  shape function for boundary particles \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_sha(2)%.html", 
        "id": 173, 
        "title": "%ind_sha(2)%"
    }, 
    {
        "body": "\n\n%ind_sha(3)% ...  shape function for boundary particles \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_sha(3)%.html", 
        "id": 174, 
        "title": "%ind_sha(3)%"
    }, 
    {
        "body": "\n\n%ind_sha(4)% ...  shape function for boundary particles \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_sha(4)%.html", 
        "id": 175, 
        "title": "%ind_sha(4)%"
    }, 
    {
        "body": "\n\n%ind_st% ...  st=start time of particle, unit=seconds \n\n\n  when was the particle created  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_st%.html", 
        "id": 176, 
        "title": "%ind_st%"
    }, 
    {
        "body": "\n\n%ind_time% ...  present time, unit=seconds \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_time%.html", 
        "id": 177, 
        "title": "%ind_time%"
    }, 
    {
        "body": "\n\n%ind_v_p(1)% ...  x-component of the velocity of boundary movement \n\n\n  each boundary particle belongs to a boundary element, which travels with a certain velocity. The travelling  \n  velocity is explicitely given by (Y%ind_v_p(1)%,Y%ind_v_p(2)%,Y%ind_v_p(3)%)  \n  If the particle is free surface and in contact to another phase, the boundary velocity is the speed of the opposite point/phase  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_v_p(1)%.html", 
        "id": 178, 
        "title": "%ind_v_p(1)%"
    }, 
    {
        "body": "\n\n%ind_v_p(2)% ...  x-component of the velocity of boundary movement \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_v_p(2)%.html", 
        "id": 179, 
        "title": "%ind_v_p(2)%"
    }, 
    {
        "body": "\n\n%ind_v_p(3)% ...  x-component of the velocity of boundary movement \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_v_p(3)%.html", 
        "id": 180, 
        "title": "%ind_v_p(3)%"
    }, 
    {
        "body": "\n\n%ind_v_residual(1)% ...  residual of velocity (x-component) \n\n\n  see %ind_v_residual(3)%  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_v_residual(1)%.html", 
        "id": 181, 
        "title": "%ind_v_residual(1)%"
    }, 
    {
        "body": "\n\n%ind_v_residual(2)% ...  absolute of velocity (y-component) \n\n\n  see %ind_v_residual(3)%  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_v_residual(2)%.html", 
        "id": 182, 
        "title": "%ind_v_residual(2)%"
    }, 
    {
        "body": "\n\n%ind_v_residual(3)% ...  residual of velocity (z-component) \n\n\n  We assume the general equation of momentum as to be \n   \n  From this, we define the residuum \n   \n    \n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_v_residual(3)%.html", 
        "id": 183, 
        "title": "%ind_v_residual(3)%"
    }, 
    {
        "body": "\n\n%ind_v_trans(1)% ...  velocity a particle is actually moving with, x-component, unit=m/s \n\n\n  in case of LAGRANGE, %ind_v% and %ind_v_trans% are the same, however in case of EULER, \n  %ind_v_trans% really represents the velocity the \n  pointcloud is moving with, so it might be absolutely different from %ind_v% \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_v_trans(1)%.html", 
        "id": 184, 
        "title": "%ind_v_trans(1)%"
    }, 
    {
        "body": "\n\n%ind_v_trans(2)% ...  velocity a particle is actually moving with, y-component, unit=m/s \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_v_trans(2)%.html", 
        "id": 185, 
        "title": "%ind_v_trans(2)%"
    }, 
    {
        "body": "\n\n%ind_v_trans(3)% ...  velocity a particle is actually moving with, z-component, unit=m/s \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_v_trans(3)%.html", 
        "id": 186, 
        "title": "%ind_v_trans(3)%"
    }, 
    {
        "body": "\n\n%ind_vol% ...  numerical weight of particle \n\n\n  this value is usually 1 for active particles, and 0 for inactive particles. For critical, but active particles, the weight can be reduced, however this option is actually not used.  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_vol%.html", 
        "id": 187, 
        "title": "%ind_vol%"
    }, 
    {
        "body": "\n\n%ind_volBubble% ...  volume of macroscopic bubble \n\n\n  Volume of the bubble this particle belongs to. It is computed according to the BubbleAlgorithm.  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_volBubble%.html", 
        "id": 188, 
        "title": "%ind_volBubble%"
    }, 
    {
        "body": "\n\n%ind_x(1)% ...  x-component of point position, unit=meters \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_x(1)%.html", 
        "id": 189, 
        "title": "%ind_x(1)%"
    }, 
    {
        "body": "\n\n%ind_x(2)% ...  y-component of point position \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_x(2)%.html", 
        "id": 190, 
        "title": "%ind_x(2)%"
    }, 
    {
        "body": "\n\n%ind_x(3)% ...  z-component of point position \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_x(3)%.html", 
        "id": 191, 
        "title": "%ind_x(3)%"
    }, 
    {
        "body": "\n\n%ind_x0(1)% ...  x-component initial particle position, unit=meters \n\n\n  with the ind_x0-variables, a comparison between initial location of particle  \n  at the beginning of the time step and the final location  \n  at the end of the time step is possible  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_x0(1)%.html", 
        "id": 192, 
        "title": "%ind_x0(1)%"
    }, 
    {
        "body": "\n\n%ind_x0(2)% ...  y-component initial particle position \n\n\n  with the ind_x0-variables, a comparison between initial location of particle  \n  at the beginning of the time step and the final location  \n  at the end of the time step is possible  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_x0(2)%.html", 
        "id": 193, 
        "title": "%ind_x0(2)%"
    }, 
    {
        "body": "\n\n%ind_x0(3)% ...  z-component initial particle position \n\n\n  with the ind_x0-variables, a comparison between initial location of particle  \n  at the beginning of the time step and the final location  \n  at the end of the time step is possible  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_x0(3)%.html", 
        "id": 194, 
        "title": "%ind_x0(3)%"
    }, 
    {
        "body": "\n\n%ind_xR(1)% ...  x-component of particle position in real coordinates, unit=meters \n\n\n  if coordinate transformation is used, ind_x delivers the position in the transormed world and ind_xR delivers the position in the real world  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_xR(1)%.html", 
        "id": 195, 
        "title": "%ind_xR(1)%"
    }, 
    {
        "body": "\n\n%ind_xR(2)% ...  y-component of particle position in real coordinates \n\n\n  if coordinate transformation is used, ind_x delivers the position in the transormed world and in_xR delivers the position in the real world  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_xR(2)%.html", 
        "id": 196, 
        "title": "%ind_xR(2)%"
    }, 
    {
        "body": "\n\n%ind_xR(3)% ...  z-component of particle position in real coordinates \n\n\n  if coordinate transformation is used, ind_x delivers the position in the transormed world and in_xR delivers the position in the real world  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_xR(3)%.html", 
        "id": 197, 
        "title": "%ind_xR(3)%"
    }, 
    {
        "body": "\n\n%ind_x_displaced(1)% ...  x-component of point position before distance to boundary computation, unit = meters \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_x_displaced(1)%.html", 
        "id": 198, 
        "title": "%ind_x_displaced(1)%"
    }, 
    {
        "body": "\n\nGeometry\n\n\n\n\n\nList of members:\n\n\nExcludeCriticalNeighbors  ...  Exclude critical neighbors from the neighborlists of FPM-points \n\n\n\n\n\n", 
        "url": "../FPM.Solvers.Geometry.html", 
        "id": 199, 
        "title": "Geometry"
    }, 
    {
        "body": "\n\n%ind_x_displaced(2)% ...  y-component of point position before distance to boundary computation, unit = meters \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_x_displaced(2)%.html", 
        "id": 200, 
        "title": "%ind_x_displaced(2)%"
    }, 
    {
        "body": "\n\n%ind_x_displaced(3)% ...  z-component of point position before distance to boundary computation, unit = meters \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.General___index___.%ind_x_displaced(3)%.html", 
        "id": 201, 
        "title": "%ind_x_displaced(3)%"
    }, 
    {
        "body": "\n\n%ind_v(1)% ...  x-component of velocity vector \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.TRANSPORT.%ind_v(1)%.html", 
        "id": 202, 
        "title": "%ind_v(1)%"
    }, 
    {
        "body": "\n\n%ind_v(2)% ...  y-component of velocity vector \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.TRANSPORT.%ind_v(2)%.html", 
        "id": 203, 
        "title": "%ind_v(2)%"
    }, 
    {
        "body": "\n\n%ind_v(3)% ...  z-component of velocity vector \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.TRANSPORT.%ind_v(3)%.html", 
        "id": 204, 
        "title": "%ind_v(3)%"
    }, 
    {
        "body": "\n\n%ind_T% ...  Temperature \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.TRANSPORT.%ind_T%.html", 
        "id": 205, 
        "title": "%ind_T%"
    }, 
    {
        "body": "\n\n%ind_p% ...  pressure \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.TRANSPORT.%ind_p%.html", 
        "id": 206, 
        "title": "%ind_p%"
    }, 
    {
        "body": "\n\n%ind_p_dyn% ...  correction pressure \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.TRANSPORT.%ind_p_dyn%.html", 
        "id": 207, 
        "title": "%ind_p_dyn%"
    }, 
    {
        "body": "\n\n%ind_r% ...  density \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.TRANSPORT.%ind_r%.html", 
        "id": 208, 
        "title": "%ind_r%"
    }, 
    {
        "body": "\n\n%ind_h% ...  smoothing length \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.TRANSPORT.%ind_h%.html", 
        "id": 209, 
        "title": "%ind_h%"
    }, 
    {
        "body": "\n\n%ind_IN% ...  actual index of the particle \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.TRANSPORT.%ind_IN%.html", 
        "id": 210, 
        "title": "%ind_IN%"
    }, 
    {
        "body": "\n\n%ind_pnt_nearBND% ...  ???? \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.TRANSPORT.%ind_pnt_nearBND%.html", 
        "id": 211, 
        "title": "%ind_pnt_nearBND%"
    }, 
    {
        "body": "\n\nLIQUID ...  indices for the implicit (incompressible/weakly compressible) solver \n\n\n\n\n\nList of members:\n\n\n%ind_CV%  ...  specific heat capacity, unit: J/(kg*K) \n%ind_CV_LatentHeat%  ...   \n%ind_DiagPcorr%  ...  compressibility of the fluid \n%ind_ETA%  ...  viscosity, unit: Pa*s \n%ind_ETA_eff%  ...  effective dynamic viscosity (sum of laminar, numerical, turbulen viscosities), unit: Ns/(m^2) \n%ind_ETA_sm%  ...   \n%ind_LAM%  ...  heat conductivity, unit: W/(m*K) \n%ind_LatentHeat%  ...   \n%ind_MUE%  ...  shear modulus, unit: N/m^2 \n%ind_MUE_mean%  ...   \n%ind_MUE_relax%  ...   \n%ind_MUE_sm%  ...  shear modulus, after numerical smoothing, unit: N/m^2 \n%ind_MomSrc(1)%  ...   \n%ind_MomSrc(2)%  ...   \n%ind_MomSrc(3)%  ...   \n%ind_NUE_turb%  ...  turbulent kinematic viscosity, unit m^2/s \n%ind_PHI%  ...   \n%ind_PSI%  ...   \n%ind_PenV%  ...   \n%ind_R_P%  ...   \n%ind_SIG%  ...  surface tension, unit: N/m \n%ind_SlidingState%  ...   \n%ind_Smises%  ...   \n%ind_SrelaxTime%  ...   \n%ind_Sxx%  ...   \n%ind_Sxy%  ...   \n%ind_Sxz%  ...   \n%ind_Syy%  ...   \n%ind_Syz%  ...   \n%ind_Szz%  ...   \n%ind_T%  ...  Temperature, unit: Kelvin, Celsius \n%ind_T_0%  ...   \n%ind_TurbulentWallLayer%  ...  distance of artificial shift of FPM-points at boundary towards the interior if turbulence model is switched on \n%ind_alpha%  ...   \n%ind_betaDarcy%  ...  DarcyConstant devided by density, unit: 1/s \n%ind_c%  ...   \n%ind_cD%  ...   \n%ind_d30%  ...   \n%ind_diss%  ...   \n%ind_div%  ...  measured, instantaneous divergence of velocity \n%ind_divS(1)%  ...   \n%ind_divS(2)%  ...   \n%ind_divS(3)%  ...   \n%ind_divV_sw%  ...   \n%ind_div_bar%  ...  compression rate due to given temperature or hydrostatic pressure or density time change rate \n%ind_div_bar_0%  ...  compression rate at the previous time step \n%ind_div_tild%  ...   \n%ind_dt_virt%  ...   \n%ind_eps%  ...  k-epsilon model: turbulent dissipation [m^2/s^3] \n%ind_eps_dot%  ...   \n%ind_eps_plastic%  ...   \n%ind_eps_plastic_dot%  ...   \n%ind_eps_plastic_dot_dot%  ...   \n%ind_g(1)%  ...   \n%ind_g(2)%  ...   \n%ind_g(3)%  ...   \n%ind_hwf_3d%  ...   \n%ind_k%  ...  k-epsilon model: turbulent kinetic energy [m^2/s^2]\n%ind_lap_vn%  ...   \n%ind_logVi_ist(1)%  ...  time-integrated local defect volume \n%ind_logVi_ist(2)%  ...  time-integrated relative local defect volume \n%ind_logVi_soll%  ...  time-integrated relative required volume \n%ind_p%  ...  hydrostatic pressure \n%ind_pDivV%  ...   \n%ind_p_0%  ...   \n%ind_p_dyn%  ...  dynamic pressure \n%ind_p_dyn_0%  ...   \n%ind_penalty%  ...   \n%ind_pnt_nearBND%  ...  mark FPM-points near boundary \n%ind_r%  ...  density, unit: kg/m^3 \n%ind_r_0%  ...   \n%ind_r_AddDispPh%  ...   \n%ind_r_c%  ...   \n%ind_r_pDyn%  ...   \n%ind_r_sm%  ...   \n%ind_tauW%  ...  turbulent wall shear stress [N/m^2]\n%ind_v(1)%  ...  x-component of velocity vector \n%ind_v(2)%  ...  y-component of velocity vector \n%ind_v(3)%  ...  z-component of velocity vector \n%ind_v0Darcy(1)%  ...  velocity of the porous basis material, x-component, unit: m/s \n%ind_v0Darcy(2)%  ...  velocity of the porous basis material, y-component, unit: m/s \n%ind_v0Darcy(3)%  ...  velocity of the porous basis material, z-component, unit: m/s \n%ind_v_0(1)%  ...  velocity of the previous time step, x-component \n%ind_v_0(2)%  ...  velocity of the previous time step, y-component \n%ind_v_0(3)%  ...  velocity of the previous time step, z-component \n%ind_v_3d(1)%  ...   \n%ind_v_3d(2)%  ...   \n%ind_v_3d(3)%  ...   \n%ind_v_tild(1)%  ...  velocity before correction, x-component \n%ind_v_tild(2)%  ...  velocity before correction, y-component \n%ind_v_tild(3)%  ...  velocity before correction, z-component \n%ind_v_times_v0%  ...  scalar product (v-v_p)*(v0-v_p) \n%ind_vn_a%  ...   \n%ind_vn_b%  ...   \n%ind_vn_n%  ...   \n%ind_vrel(1)%  ...   \n%ind_vrel(2)%  ...   \n%ind_vrel(3)%  ...   \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.html", 
        "id": 212, 
        "title": "LIQUID___index___"
    }, 
    {
        "body": "\n\n%ind_CV% ...  specific heat capacity, unit: J/(kg*K) \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_CV%.html", 
        "id": 213, 
        "title": "%ind_CV%"
    }, 
    {
        "body": "\n\n%ind_CV_LatentHeat% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_CV_LatentHeat%.html", 
        "id": 214, 
        "title": "%ind_CV_LatentHeat%"
    }, 
    {
        "body": "\n\n%ind_DiagPcorr% ...  compressibility of the fluid \n\n\n  represents the term . See for example DesiredAndNominalDivergenceOfVelocity  \n \n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_DiagPcorr%.html", 
        "id": 215, 
        "title": "%ind_DiagPcorr%"
    }, 
    {
        "body": "\n\n%ind_ETA% ...  viscosity, unit: Pa*s \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_ETA%.html", 
        "id": 216, 
        "title": "%ind_ETA%"
    }, 
    {
        "body": "\n\n%ind_ETA_eff% ...  effective dynamic viscosity (sum of laminar, numerical, turbulen viscosities), unit: Ns/(m^2) \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_ETA_eff%.html", 
        "id": 217, 
        "title": "%ind_ETA_eff%"
    }, 
    {
        "body": "\n\n%ind_ETA_sm% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_ETA_sm%.html", 
        "id": 218, 
        "title": "%ind_ETA_sm%"
    }, 
    {
        "body": "\n\n%ind_LAM% ...  heat conductivity, unit: W/(m*K) \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_LAM%.html", 
        "id": 219, 
        "title": "%ind_LAM%"
    }, 
    {
        "body": "\n\n%ind_LatentHeat% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_LatentHeat%.html", 
        "id": 220, 
        "title": "%ind_LatentHeat%"
    }, 
    {
        "body": "\n\n%ind_MUE% ...  shear modulus, unit: N/m^2 \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_MUE%.html", 
        "id": 221, 
        "title": "%ind_MUE%"
    }, 
    {
        "body": "\n\n%ind_MUE_mean% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_MUE_mean%.html", 
        "id": 222, 
        "title": "%ind_MUE_mean%"
    }, 
    {
        "body": "\n\n%ind_MUE_relax% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_MUE_relax%.html", 
        "id": 223, 
        "title": "%ind_MUE_relax%"
    }, 
    {
        "body": "\n\n%ind_MUE_sm% ...  shear modulus, after numerical smoothing, unit: N/m^2 \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_MUE_sm%.html", 
        "id": 224, 
        "title": "%ind_MUE_sm%"
    }, 
    {
        "body": "\n\n%ind_MomSrc(1)% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_MomSrc(1)%.html", 
        "id": 225, 
        "title": "%ind_MomSrc(1)%"
    }, 
    {
        "body": "\n\n%ind_MomSrc(2)% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_MomSrc(2)%.html", 
        "id": 226, 
        "title": "%ind_MomSrc(2)%"
    }, 
    {
        "body": "\n\n%ind_MomSrc(3)% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_MomSrc(3)%.html", 
        "id": 227, 
        "title": "%ind_MomSrc(3)%"
    }, 
    {
        "body": "\n\n%ind_NUE_turb% ...  turbulent kinematic viscosity, unit m^2/s \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_NUE_turb%.html", 
        "id": 228, 
        "title": "%ind_NUE_turb%"
    }, 
    {
        "body": "\n\n%ind_PHI% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_PHI%.html", 
        "id": 229, 
        "title": "%ind_PHI%"
    }, 
    {
        "body": "\n\n%ind_PSI% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_PSI%.html", 
        "id": 230, 
        "title": "%ind_PSI%"
    }, 
    {
        "body": "\n\n%ind_PenV% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_PenV%.html", 
        "id": 231, 
        "title": "%ind_PenV%"
    }, 
    {
        "body": "\n\n%ind_R_P% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_R_P%.html", 
        "id": 232, 
        "title": "%ind_R_P%"
    }, 
    {
        "body": "\n\n%ind_SIG% ...  surface tension, unit: N/m \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_SIG%.html", 
        "id": 233, 
        "title": "%ind_SIG%"
    }, 
    {
        "body": "\n\n%ind_SlidingState% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_SlidingState%.html", 
        "id": 234, 
        "title": "%ind_SlidingState%"
    }, 
    {
        "body": "\n\n%ind_Smises% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_Smises%.html", 
        "id": 235, 
        "title": "%ind_Smises%"
    }, 
    {
        "body": "\n\n%ind_SrelaxTime% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_SrelaxTime%.html", 
        "id": 236, 
        "title": "%ind_SrelaxTime%"
    }, 
    {
        "body": "\n\n%ind_Sxx% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_Sxx%.html", 
        "id": 237, 
        "title": "%ind_Sxx%"
    }, 
    {
        "body": "\n\n%ind_Sxy% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_Sxy%.html", 
        "id": 238, 
        "title": "%ind_Sxy%"
    }, 
    {
        "body": "\n\n%ind_Sxz% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_Sxz%.html", 
        "id": 239, 
        "title": "%ind_Sxz%"
    }, 
    {
        "body": "\n\n%ind_Syy% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_Syy%.html", 
        "id": 240, 
        "title": "%ind_Syy%"
    }, 
    {
        "body": "\n\n%ind_Syz% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_Syz%.html", 
        "id": 241, 
        "title": "%ind_Syz%"
    }, 
    {
        "body": "\n\n%ind_Szz% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_Szz%.html", 
        "id": 242, 
        "title": "%ind_Szz%"
    }, 
    {
        "body": "\n\n%ind_T% ...  Temperature, unit: Kelvin, Celsius \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_T%.html", 
        "id": 243, 
        "title": "%ind_T%"
    }, 
    {
        "body": "\n\n%ind_T_0% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_T_0%.html", 
        "id": 244, 
        "title": "%ind_T_0%"
    }, 
    {
        "body": "\n\n%ind_TurbulentWallLayer% ...  distance of artificial shift of FPM-points at boundary towards the interior if turbulence model is switched on \n\n\n  this provides an addtional point of support needed for the computation of the logarithmic velocity profile in the boundary layer  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_TurbulentWallLayer%.html", 
        "id": 245, 
        "title": "%ind_TurbulentWallLayer%"
    }, 
    {
        "body": "\n\n%ind_alpha% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_alpha%.html", 
        "id": 246, 
        "title": "%ind_alpha%"
    }, 
    {
        "body": "\n\n%ind_betaDarcy% ...  DarcyConstant devided by density, unit: 1/s \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_betaDarcy%.html", 
        "id": 247, 
        "title": "%ind_betaDarcy%"
    }, 
    {
        "body": "\n\n%ind_c% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_c%.html", 
        "id": 248, 
        "title": "%ind_c%"
    }, 
    {
        "body": "\n\n%ind_cD% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_cD%.html", 
        "id": 249, 
        "title": "%ind_cD%"
    }, 
    {
        "body": "\n\n%ind_d30% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_d30%.html", 
        "id": 250, 
        "title": "%ind_d30%"
    }, 
    {
        "body": "\n\n%ind_diss% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_diss%.html", 
        "id": 251, 
        "title": "%ind_diss%"
    }, 
    {
        "body": "\n\n%ind_div% ...  measured, instantaneous divergence of velocity \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_div%.html", 
        "id": 252, 
        "title": "%ind_div%"
    }, 
    {
        "body": "\n\n%ind_divS(1)% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_divS(1)%.html", 
        "id": 253, 
        "title": "%ind_divS(1)%"
    }, 
    {
        "body": "\n\n%ind_divS(2)% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_divS(2)%.html", 
        "id": 254, 
        "title": "%ind_divS(2)%"
    }, 
    {
        "body": "\n\n%ind_divS(3)% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_divS(3)%.html", 
        "id": 255, 
        "title": "%ind_divS(3)%"
    }, 
    {
        "body": "\n\n%ind_divV_sw% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_divV_sw%.html", 
        "id": 256, 
        "title": "%ind_divV_sw%"
    }, 
    {
        "body": "\n\n%ind_div_bar% ...  compression rate due to given temperature or hydrostatic pressure or density time change rate \n\n\n  will be different from zero only if the density is dependent on time and/or temperature and/or pressure   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_div_bar%.html", 
        "id": 257, 
        "title": "%ind_div_bar%"
    }, 
    {
        "body": "\n\n%ind_div_bar_0% ...  compression rate at the previous time step \n\n\n  see %ind_div_bar%  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_div_bar_0%.html", 
        "id": 258, 
        "title": "%ind_div_bar_0%"
    }, 
    {
        "body": "\n\n%ind_div_tild% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_div_tild%.html", 
        "id": 259, 
        "title": "%ind_div_tild%"
    }, 
    {
        "body": "\n\n%ind_dt_virt% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_dt_virt%.html", 
        "id": 260, 
        "title": "%ind_dt_virt%"
    }, 
    {
        "body": "\n\n%ind_eps% ...  k-epsilon model: turbulent dissipation [m^2/s^3] \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_eps%.html", 
        "id": 261, 
        "title": "%ind_eps%"
    }, 
    {
        "body": "\n\n%ind_eps_dot% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_eps_dot%.html", 
        "id": 262, 
        "title": "%ind_eps_dot%"
    }, 
    {
        "body": "\n\n%ind_eps_plastic% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_eps_plastic%.html", 
        "id": 263, 
        "title": "%ind_eps_plastic%"
    }, 
    {
        "body": "\n\n%ind_eps_plastic_dot% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_eps_plastic_dot%.html", 
        "id": 264, 
        "title": "%ind_eps_plastic_dot%"
    }, 
    {
        "body": "\n\n%ind_eps_plastic_dot_dot% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_eps_plastic_dot_dot%.html", 
        "id": 265, 
        "title": "%ind_eps_plastic_dot_dot%"
    }, 
    {
        "body": "\n\n%ind_g(1)% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_g(1)%.html", 
        "id": 266, 
        "title": "%ind_g(1)%"
    }, 
    {
        "body": "\n\n%ind_g(2)% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_g(2)%.html", 
        "id": 267, 
        "title": "%ind_g(2)%"
    }, 
    {
        "body": "\n\n%ind_g(3)% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_g(3)%.html", 
        "id": 268, 
        "title": "%ind_g(3)%"
    }, 
    {
        "body": "\n\n%ind_hwf_3d% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_hwf_3d%.html", 
        "id": 269, 
        "title": "%ind_hwf_3d%"
    }, 
    {
        "body": "\n\n%ind_k% ...  k-epsilon model: turbulent kinetic energy [m^2/s^2]\n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_k%.html", 
        "id": 270, 
        "title": "%ind_k%"
    }, 
    {
        "body": "\n\n%ind_lap_vn% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_lap_vn%.html", 
        "id": 271, 
        "title": "%ind_lap_vn%"
    }, 
    {
        "body": "\n\n%ind_logVi_ist(1)% ...  time-integrated local defect volume \n\n\n    \n \n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_logVi_ist(1)%.html", 
        "id": 272, 
        "title": "%ind_logVi_ist(1)%"
    }, 
    {
        "body": "\n\nNumerics\n\n\n\n\n\nList of members:\n\n\nFLIQUID  ...  Implicit solver for incompressible and weakly compressible flow phenomena \nGASDYN  ...  Explicit solver of compressible flow phenomena \nSHALLOWWATER  ...  Solver for shallow water equations \n\n\n\n\n\n", 
        "url": "../FPM.Solvers.Numerics.html", 
        "id": 273, 
        "title": "Numerics"
    }, 
    {
        "body": "\n\n%ind_logVi_ist(2)% ...  time-integrated relative local defect volume \n\n\n     \n \n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_logVi_ist(2)%.html", 
        "id": 274, 
        "title": "%ind_logVi_ist(2)%"
    }, 
    {
        "body": "\n\n%ind_logVi_soll% ...  time-integrated relative required volume \n\n\n    \n \n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_logVi_soll%.html", 
        "id": 275, 
        "title": "%ind_logVi_soll%"
    }, 
    {
        "body": "\n\n%ind_p% ...  hydrostatic pressure \n\n\n  compute the hydrostatic pressure prior to the velocity computations, see HydrostaticPressureAlgorithm  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_p%___FLIQUID___.html", 
        "id": 276, 
        "title": "%ind_p%___FLIQUID___"
    }, 
    {
        "body": "\n\n%ind_pDivV% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_pDivV%.html", 
        "id": 277, 
        "title": "%ind_pDivV%"
    }, 
    {
        "body": "\n\n%ind_p_0% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_p_0%.html", 
        "id": 278, 
        "title": "%ind_p_0%"
    }, 
    {
        "body": "\n\n%ind_p_dyn% ...  dynamic pressure \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_p_dyn%.html", 
        "id": 279, 
        "title": "%ind_p_dyn%"
    }, 
    {
        "body": "\n\n%ind_p_dyn_0% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_p_dyn_0%.html", 
        "id": 280, 
        "title": "%ind_p_dyn_0%"
    }, 
    {
        "body": "\n\n%ind_penalty% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_penalty%.html", 
        "id": 281, 
        "title": "%ind_penalty%"
    }, 
    {
        "body": "\n\n%ind_pnt_nearBND% ...  mark FPM-points near boundary \n\n\n  This has only relevance if transport equation are numerically solved, i.e. in case of EULER  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_pnt_nearBND%.html", 
        "id": 282, 
        "title": "%ind_pnt_nearBND%"
    }, 
    {
        "body": "\n\n%ind_r% ...  density, unit: kg/m^3 \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_r%.html", 
        "id": 283, 
        "title": "%ind_r%"
    }, 
    {
        "body": "\n\n%ind_r_0% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_r_0%.html", 
        "id": 284, 
        "title": "%ind_r_0%"
    }, 
    {
        "body": "\n\n%ind_r_AddDispPh% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_r_AddDispPh%.html", 
        "id": 285, 
        "title": "%ind_r_AddDispPh%"
    }, 
    {
        "body": "\n\n%ind_r_c% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_r_c%.html", 
        "id": 286, 
        "title": "%ind_r_c%"
    }, 
    {
        "body": "\n\n%ind_r_pDyn% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_r_pDyn%.html", 
        "id": 287, 
        "title": "%ind_r_pDyn%"
    }, 
    {
        "body": "\n\n%ind_r_sm% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_r_sm%.html", 
        "id": 288, 
        "title": "%ind_r_sm%"
    }, 
    {
        "body": "\n\n%ind_tauW% ...  turbulent wall shear stress [N/m^2]\n\n\n  This quantity is computed for each slip boundary. If a noslip boundary is concerned, this value shall be negligible.  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_tauW%.html", 
        "id": 289, 
        "title": "%ind_tauW%"
    }, 
    {
        "body": "\n\n%ind_v(1)% ...  x-component of velocity vector \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_v(1)%.html", 
        "id": 290, 
        "title": "%ind_v(1)%"
    }, 
    {
        "body": "\n\n%ind_v(2)% ...  y-component of velocity vector \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_v(2)%.html", 
        "id": 291, 
        "title": "%ind_v(2)%"
    }, 
    {
        "body": "\n\n%ind_v(3)% ...  z-component of velocity vector \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_v(3)%.html", 
        "id": 292, 
        "title": "%ind_v(3)%"
    }, 
    {
        "body": "\n\n%ind_v0Darcy(1)% ...  velocity of the porous basis material, x-component, unit: m/s \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_v0Darcy(1)%.html", 
        "id": 293, 
        "title": "%ind_v0Darcy(1)%"
    }, 
    {
        "body": "\n\n%ind_v0Darcy(2)% ...  velocity of the porous basis material, y-component, unit: m/s \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_v0Darcy(2)%.html", 
        "id": 294, 
        "title": "%ind_v0Darcy(2)%"
    }, 
    {
        "body": "\n\n%ind_v0Darcy(3)% ...  velocity of the porous basis material, z-component, unit: m/s \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_v0Darcy(3)%.html", 
        "id": 295, 
        "title": "%ind_v0Darcy(3)%"
    }, 
    {
        "body": "\n\n%ind_v_0(1)% ...  velocity of the previous time step, x-component \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_v_0(1)%.html", 
        "id": 296, 
        "title": "%ind_v_0(1)%"
    }, 
    {
        "body": "\n\n%ind_v_0(2)% ...  velocity of the previous time step, y-component \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_v_0(2)%.html", 
        "id": 297, 
        "title": "%ind_v_0(2)%"
    }, 
    {
        "body": "\n\n%ind_v_0(3)% ...  velocity of the previous time step, z-component \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_v_0(3)%.html", 
        "id": 298, 
        "title": "%ind_v_0(3)%"
    }, 
    {
        "body": "\n\n%ind_v_3d(1)% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_v_3d(1)%.html", 
        "id": 299, 
        "title": "%ind_v_3d(1)%"
    }, 
    {
        "body": "\n\n%ind_v_3d(2)% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_v_3d(2)%.html", 
        "id": 300, 
        "title": "%ind_v_3d(2)%"
    }, 
    {
        "body": "\n\n%ind_v_3d(3)% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_v_3d(3)%.html", 
        "id": 301, 
        "title": "%ind_v_3d(3)%"
    }, 
    {
        "body": "\n\n%ind_v_tild(1)% ...  velocity before correction, x-component \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_v_tild(1)%.html", 
        "id": 302, 
        "title": "%ind_v_tild(1)%"
    }, 
    {
        "body": "\n\n%ind_v_tild(2)% ...  velocity before correction, y-component \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_v_tild(2)%.html", 
        "id": 303, 
        "title": "%ind_v_tild(2)%"
    }, 
    {
        "body": "\n\n%ind_v_tild(3)% ...  velocity before correction, z-component \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_v_tild(3)%.html", 
        "id": 304, 
        "title": "%ind_v_tild(3)%"
    }, 
    {
        "body": "\n\n%ind_v_times_v0% ...  scalar product (v-v_p)*(v0-v_p) \n\n\n  v=correcnt velocity, v_p=velocity of the boundary, v0=velocity of the previous time step. If negative, the sense of the flow turned around wrt the boundary.  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_v_times_v0%.html", 
        "id": 305, 
        "title": "%ind_v_times_v0%"
    }, 
    {
        "body": "\n\n%ind_vn_a% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_vn_a%.html", 
        "id": 306, 
        "title": "%ind_vn_a%"
    }, 
    {
        "body": "\n\nGASDYN ...  Explicit solver of compressible flow phenomena \n\n\n\n\n\nThis item is referenced in:\n\n\n%ind_EdgeValue%  ... %ind_EdgeValue%\nGeneral  ...  FPM indices for general simulation entities \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Solver/BasicSolver/Compressible/F_of_t_and_Y_GASDYN_NEW.f90 \n\n\n\n", 
        "url": "../FPM.Solvers.Numerics.GASDYN.html", 
        "id": 307, 
        "title": "GASDYN"
    }, 
    {
        "body": "\n\n%ind_vn_b% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_vn_b%.html", 
        "id": 308, 
        "title": "%ind_vn_b%"
    }, 
    {
        "body": "\n\n%ind_vn_n% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_vn_n%.html", 
        "id": 309, 
        "title": "%ind_vn_n%"
    }, 
    {
        "body": "\n\n%ind_vrel(1)% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_vrel(1)%.html", 
        "id": 310, 
        "title": "%ind_vrel(1)%"
    }, 
    {
        "body": "\n\n%ind_vrel(2)% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_vrel(2)%.html", 
        "id": 311, 
        "title": "%ind_vrel(2)%"
    }, 
    {
        "body": "\n\n%ind_vrel(3)% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.LIQUID___index___.%ind_vrel(3)%.html", 
        "id": 312, 
        "title": "%ind_vrel(3)%"
    }, 
    {
        "body": "\n\nSHALLOWWATER ...  Indices for the shallow water solver \n\n\n  See also SHALLOWWATER.  \n\n\n\n\nList of members:\n\n\n%ind_ETA%  ...   \n%ind_PHI%  ...   \n%ind_SIG%  ...   \n%ind_SlidingState%  ...   \n%ind_T%  ...   \n%ind_Umbrella(1)%  ...   \n%ind_Umbrella(2)%  ...   \n%ind_Umbrella(3)%  ...   \n%ind_div%  ...   \n%ind_divV_sw%  ...   \n%ind_divV_uw%  ...   \n%ind_div_control%  ...   \n%ind_g(1)%  ...   \n%ind_g(2)%  ...   \n%ind_g(3)%  ...   \n%ind_gradP_uw(1)%  ...   \n%ind_gradP_uw(2)%  ...   \n%ind_gradP_uw(3)%  ...   \n%ind_hwf%  ...  Height Of water/liquid Film, unit: m \n%ind_hwf_0%  ...  height of liquid layer previous time step \n%ind_hwf_3d%  ...   \n%ind_hwf_control%  ...   \n%ind_kob_she%  ...   \n%ind_lap_vn%  ...   \n%ind_nR_sm(1)%  ...   \n%ind_nR_sm(2)%  ...   \n%ind_nR_sm(3)%  ...   \n%ind_n_sm(1)%  ...   \n%ind_n_sm(2)%  ...   \n%ind_n_sm(3)%  ...   \n%ind_p%  ...  pressure given due to height of liquid film \n%ind_p_uw%  ...   \n%ind_r%  ...   \n%ind_v(1)%  ...  velocity of water film, x-component, unit: m/s \n%ind_v(2)%  ...  velocity of water film, y-component, unit: m/s \n%ind_v(3)%  ...  velocity of water film, z-component, unit: m/s \n%ind_v_3d(1)%  ...   \n%ind_v_3d(2)%  ...   \n%ind_v_3d(3)%  ...   \n%ind_v_uw(1)%  ...   \n%ind_v_uw(2)%  ...   \n%ind_v_uw(3)%  ...   \n%ind_vtang(1)%  ...   \n%ind_vtang(2)%  ...   \n%ind_vtang(3)%  ...   \n%ind_vtang_0(1)%  ...   \n%ind_vtang_0(2)%  ...   \n%ind_vtang_0(3)%  ...   \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.SHALLOWWATER___indices___.html", 
        "id": 313, 
        "title": "SHALLOWWATER___indices___"
    }, 
    {
        "body": "\n\n%ind_ETA% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.SHALLOWWATER___indices___.%ind_ETA%.html", 
        "id": 314, 
        "title": "%ind_ETA%"
    }, 
    {
        "body": "\n\n%ind_PHI% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.SHALLOWWATER___indices___.%ind_PHI%.html", 
        "id": 315, 
        "title": "%ind_PHI%"
    }, 
    {
        "body": "\n\n%ind_SIG% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.SHALLOWWATER___indices___.%ind_SIG%.html", 
        "id": 316, 
        "title": "%ind_SIG%"
    }, 
    {
        "body": "\n\n%ind_SlidingState% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.SHALLOWWATER___indices___.%ind_SlidingState%.html", 
        "id": 317, 
        "title": "%ind_SlidingState%"
    }, 
    {
        "body": "\n\n%ind_T% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.SHALLOWWATER___indices___.%ind_T%.html", 
        "id": 318, 
        "title": "%ind_T%"
    }, 
    {
        "body": "\n\n%ind_Umbrella(1)% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.SHALLOWWATER___indices___.%ind_Umbrella(1)%.html", 
        "id": 319, 
        "title": "%ind_Umbrella(1)%"
    }, 
    {
        "body": "\n\n%ind_Umbrella(2)% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.SHALLOWWATER___indices___.%ind_Umbrella(2)%.html", 
        "id": 320, 
        "title": "%ind_Umbrella(2)%"
    }, 
    {
        "body": "\n\n%ind_Umbrella(3)% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.SHALLOWWATER___indices___.%ind_Umbrella(3)%.html", 
        "id": 321, 
        "title": "%ind_Umbrella(3)%"
    }, 
    {
        "body": "\n\n%ind_div% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.SHALLOWWATER___indices___.%ind_div%.html", 
        "id": 322, 
        "title": "%ind_div%"
    }, 
    {
        "body": "\n\n%ind_divV_sw% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.SHALLOWWATER___indices___.%ind_divV_sw%.html", 
        "id": 323, 
        "title": "%ind_divV_sw%"
    }, 
    {
        "body": "\n\n%ind_divV_uw% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.SHALLOWWATER___indices___.%ind_divV_uw%.html", 
        "id": 324, 
        "title": "%ind_divV_uw%"
    }, 
    {
        "body": "\n\n%ind_div_control% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.SHALLOWWATER___indices___.%ind_div_control%.html", 
        "id": 325, 
        "title": "%ind_div_control%"
    }, 
    {
        "body": "\n\n%ind_g(1)% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.SHALLOWWATER___indices___.%ind_g(1)%.html", 
        "id": 326, 
        "title": "%ind_g(1)%"
    }, 
    {
        "body": "\n\n%ind_g(2)% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.SHALLOWWATER___indices___.%ind_g(2)%.html", 
        "id": 327, 
        "title": "%ind_g(2)%"
    }, 
    {
        "body": "\n\n%ind_g(3)% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.SHALLOWWATER___indices___.%ind_g(3)%.html", 
        "id": 328, 
        "title": "%ind_g(3)%"
    }, 
    {
        "body": "\n\n%ind_gradP_uw(1)% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.SHALLOWWATER___indices___.%ind_gradP_uw(1)%.html", 
        "id": 329, 
        "title": "%ind_gradP_uw(1)%"
    }, 
    {
        "body": "\n\n%ind_gradP_uw(2)% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.SHALLOWWATER___indices___.%ind_gradP_uw(2)%.html", 
        "id": 330, 
        "title": "%ind_gradP_uw(2)%"
    }, 
    {
        "body": "\n\n%ind_gradP_uw(3)% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.SHALLOWWATER___indices___.%ind_gradP_uw(3)%.html", 
        "id": 331, 
        "title": "%ind_gradP_uw(3)%"
    }, 
    {
        "body": "\n\n%ind_hwf% ...  Height Of water/liquid Film, unit: m \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.SHALLOWWATER___indices___.%ind_hwf%.html", 
        "id": 332, 
        "title": "%ind_hwf%"
    }, 
    {
        "body": "\n\n%ind_hwf_0% ...  height of liquid layer previous time step \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.SHALLOWWATER___indices___.%ind_hwf_0%.html", 
        "id": 333, 
        "title": "%ind_hwf_0%"
    }, 
    {
        "body": "\n\n%ind_hwf_3d% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.SHALLOWWATER___indices___.%ind_hwf_3d%.html", 
        "id": 334, 
        "title": "%ind_hwf_3d%"
    }, 
    {
        "body": "\n\n%ind_hwf_control% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.SHALLOWWATER___indices___.%ind_hwf_control%.html", 
        "id": 335, 
        "title": "%ind_hwf_control%"
    }, 
    {
        "body": "\n\n%ind_kob_she% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.SHALLOWWATER___indices___.%ind_kob_she%.html", 
        "id": 336, 
        "title": "%ind_kob_she%"
    }, 
    {
        "body": "\n\n%ind_lap_vn% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.SHALLOWWATER___indices___.%ind_lap_vn%.html", 
        "id": 337, 
        "title": "%ind_lap_vn%"
    }, 
    {
        "body": "\n\n%ind_nR_sm(1)% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.SHALLOWWATER___indices___.%ind_nR_sm(1)%.html", 
        "id": 338, 
        "title": "%ind_nR_sm(1)%"
    }, 
    {
        "body": "\n\n%ind_nR_sm(2)% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.SHALLOWWATER___indices___.%ind_nR_sm(2)%.html", 
        "id": 339, 
        "title": "%ind_nR_sm(2)%"
    }, 
    {
        "body": "\n\n%ind_nR_sm(3)% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.SHALLOWWATER___indices___.%ind_nR_sm(3)%.html", 
        "id": 340, 
        "title": "%ind_nR_sm(3)%"
    }, 
    {
        "body": "\n\n%ind_CG(1)% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.GASDYN.%ind_CG(1)%.html", 
        "id": 341, 
        "title": "%ind_CG(1)%"
    }, 
    {
        "body": "\n\n__Constants__ ...  typical %...%-constants that can be used in the input files \n\n\n  On this site, a collection of all %...%-keywords are updated, which may be used within the FPM-input files. \n   \n  The %...%-keywords are given in alphabetical order. \n   \n  By clicking on one of the items, one finds a list of links, where the \n  given keyword appears in one or the other way. \n   \n  As the FPMDOCU is dynamically growing and developing, the links to the given keywords will grow appropriately, \n  which might help navigating FPMDOCU. \n   \n\n\n\n\nList of members:\n\n\n%ABAQUS_AVMidpointIntplNode%  ...  \n%ABAQUS_AVMidpointShpdNode%  ...  \n%ABAQUS_IntplMidpoint%  ...  \n%ABAQUS_IntplNode%  ...  \n%ABAQUS_ShpdMidpoint%  ...  \n%ABAQUS_ShpdMidpointShpdNode%  ...  \n%ABAQUS_ShpdNode%  ...  \n%ACTIVE_always%  ...  \n%ACTIVE_init%  ...  \n%ACTIVE_nofill%  ...  \n%ACTIVE_nofill_OnBEclusters%  ...  \n%ACTIVE_nofill_OnDiscs%  ...  \n%ACTIVE_nofill_OnDiscsAndBEclusters%  ...  \n%ACTIVE_noinit%  ...  \n%AND%  ...  \n%AVERAGE_BND%  ...  \n%AVERAGE_INT%  ...  \n%AVERAGE_XYPLANE%  ...  \n%BCON_CG%  ...  \n%BCON_E_tot%  ...  \n%BCON_Ma%  ...  \n%BCON_PAMCRASH_CG%  ...  \n%BCON_PAMCRASH_Mdot%  ...  \n%BCON_PAMCRASH_RG%  ...  \n%BCON_PAMCRASH_T%  ...  \n%BCON_RG%  ...  \n%BCON_T%  ...  \n%BCON_T_tot%  ...  \n%BCON_Vdot%  ...  \n%BCON_contact%  ...  \n%BCON_explicit%  ...  \n%BCON_far_field%  ...  \n%BCON_free%  ...  \n%BCON_free_NoVisc%  ...  \n%BCON_implicit%  ...  \n%BCON_inflow%  ...  \n%BCON_none%  ...  \n%BCON_outflow%  ...  \n%BCON_p%  ...  \n%BCON_p_tot%  ...  \n%BCON_rho%  ...  \n%BCON_rho_va%  ...  \n%BCON_rho_vb%  ...  \n%BCON_rho_vn%  ...  \n%BCON_s%  ...  \n%BCON_s_ini%  ...  \n%BCON_slip%  ...  \n%BCON_va%  ...  \n%BCON_vb%  ...  \n%BCON_visc%  ...  \n%BCON_vn%  ...  \n%BCON_wall%  ...  \n%BCON_wall_nosl%  ...  \n%BND_AVERAGE%  ...  \n%BND_BNDDOT%  ...  \n%BND_BlindAndEmpty%  ...  \n%BND_CAUCHY%  ...  \n%BND_COULOMB_SLIDE%  ...  \n%BND_COULOMB_SLIP%  ...  \n%BND_COULOMB_STICK%  ...  \n%BND_DIRICH%  ...  \n%BND_DRYFRICTION%  ...  \n%BND_DRYFRICTION_InContact%  ...  \n%BND_HEATFLUX%  ...  \n%BND_HELMHOLTZ%  ...  \n%BND_IGES%  ...  \n%BND_IGES_curve%  ...  \n%BND_IGES_ignore%  ...  \n%BND_IGES_surface%  ...  \n%BND_IGES_trafo%  ...  \n%BND_INTERPHASE%  ...  \n%BND_INTERPHASE_dfdn%  ...  \n%BND_INTERPHASE_f%  ...  \n%BND_LAPLAC%  ...  \n%BND_Mdot%  ...  \n%BND_NEUMANN%  ...  \n%BND_NEUMANN_DIRICHLET%  ...  \n%BND_NUSSEL%  ...  \n%BND_RADIATION%  ...  \n%BND_ROBIN%  ...  \n%BND_SYSTUS%  ...  \n%BND_VONNEU%  ...  \n%BND_arcl%  ...  \n%BND_arcs%  ...  \n%BND_blind%  ...  \n%BND_contact%  ...  \n%BND_contact_Explicit%  ...  \n%BND_corner%  ...  \n%BND_count_BE%  ...  parameter for the real()-function (equation parser) \n%BND_count_NP%  ...  parameter for the real()-function (equation parser) \n%BND_cube%  ...  \n%BND_cylinder%  ...  \n%BND_edge%  ...  \n%BND_far_field%  ...  \n%BND_fixed%  ...  \n%BND_free%  ...  \n%BND_free_Barodesy%  ...  \n%BND_free_HypoPlast%  ...  \n%BND_free_InContact%  ...  \n%BND_free_InContact_Explicit%  ...  \n%BND_free_NoVisc%  ...  \n%BND_free_implicit%  ...  \n%BND_free_implicit_InContact%  ...  \n%BND_free_implicit_InContact_Explicit%  ...  \n%BND_inflow%  ...  \n%BND_line%  ...  \n%BND_node%  ...  \n%BND_none%  ...  \n%BND_outflow%  ...  \n%BND_plane%  ...  \n%BND_point%  ...  \n%BND_quad%  ...  \n%BND_slip%  ...  \n%BND_slip_InContact%  ...  \n%BND_slip_InContact_Explicit%  ...  \n%BND_tria%  ...  \n%BND_tria6N%  ...  \n%BND_void%  ...  \n%BND_wall%  ...  \n%BND_wall_InContact%  ...  \n%BND_wall_InContact_Explicit%  ...  \n%BND_wall_NoLayerThickness%  ...  \n%BND_wall_nosl%  ...  \n%BNDpoints_ExtractFromNodes%  ...  \n%BOUNDARYFILLING_Always%  ...  \n%BOUNDARYFILLING_Never%  ...  \n%BOUNDARYFILLING_OnlyIfActiveItself%  ...  \n%BOUNDARYFILLING_OnlyInActiveNeighborhood%  ...  \n%CHAMBER_BGK%  ...  \n%CHAMBER_DROPLETPHASE%  ...  \n%CHAMBER_Euler%  ...  \n%CHAMBER_EulerExpl%  ...  \n%CHAMBER_GASDYN%  ...  \n%CHAMBER_IT_000%  ...  \n%CHAMBER_IT_tes%  ...  \n%CHAMBER_IT_v00% 
 ...  \n%CHAMBER_IT_vp0%  ...  \n%CHAMBER_IT_vpT%  ...  \n%CHAMBER_KEPS%  ...  \n%CHAMBER_LIQUID%  ...  \n%CHAMBER_Lagrange%  ...  \n%CHAMBER_LineUp%  ...  \n%CHAMBER_NoLineUp%  ...  \n%CHAMBER_None%  ...  \n%CHAMBER_PARTICLEPHASE%  ...  \n%CHAMBER_POPBAL%  ...  \n%CHAMBER_SHALLOWWATER%  ...  \n%CLOCK_STATISTICS_FLIQUID%  ...  parameter for the real()-function (equation parser) \n%CLOCK_STATISTICS_ORGANIZE%  ...  parameter for the real()-function (equation parser) \n%CLOCK_STATISTICS_TOTAL_FLIQUID%  ...  parameter for the real()-function (equation parser) \n%CLOCK_STATISTICS_TOTAL_ORGANIZE%  ...  parameter for the real()-function (equation parser) \n%CLOCK_STATISTICS_TOTAL_SAMG%  ...  parameter for the real()-function (equation parser) \n%CODI_explicit%  ...  \n%CODI_implicit%  ...  \n%CONSTRUCT_Area%  ...  \n%CONSTRUCT_BoxMax%  ...  \n%CONSTRUCT_BoxMidPoint%  ...  \n%CONSTRUCT_BoxMidPoint_Abs%  ...  \n%CONSTRUCT_BoxMin%  ...  \n%CONSTRUCT_COG%  ...  \n%CONSTRUCT_EstablishCurveVolumeVersusHeight%  ...  \n%CONSTRUCT_Normal%  ...  \n%CONSTRUCT_NormalDividedByArea%  ...  \n%CONSTRUCT_PointBasedOnAbsoluteVolume%  ...  \n%CONSTRUCT_PointBasedOnRelativeVolume%  ...  \n%CONSTRUCT_Tangent1%  ...  \n%CONSTRUCT_Tangent2%  ...  \n%CONSTRUCT_Volume%  ...  \n%CONSTRUCT_VolumeForGivenHeight%  ...  \n%COORDTRANS_cone%  ...  \n%COORDTRANS_linear%  ...  \n%COORDTRANS_radial%  ...  \n%COORDTRANS_ring%  ...  \n%COORDTRANS_spherical%  ...  \n%COUPLE_PAM%  ...  \n%COUPLE_SYSTUS%  ...  \n%CPU_STATISTICS_FLIQUID%  ...  parameter for the real()-function (equation parser) \n%CPU_STATISTICS_ORGANIZE%  ...  parameter for the real()-function (equation parser) \n%CPU_STATISTICS_TOTAL_FLIQUID%  ...  parameter for the real()-function (equation parser) \n%CPU_STATISTICS_TOTAL_ORGANIZE%  ...  parameter for the real()-function (equation parser) \n%CUMU_INTERVAL%  ...  \n%CUMU_NONE%  ...  \n%CUMU_SIMULATION%  ...  \n%DIFFOP_gradient_DELAUNAY%  ...  \n%DIFFOP_gradient_GASDYN%  ...  \n%DIFFOP_gradient_MLS%  ...  \n%DIFFOP_laplace_GASDYN%  ...  \n%DIFFOP_laplace_LS%  ...  \n%DIFFOP_laplace_MLS%  ...  \n%DIFFOP_laplace_optimized%  ...  \n%DIFFOP_laplace_simplex%  ...  \n%EQN_Proj_ALL%  ...  \n%EQN_Proj_BND%  ...  \n%EQN_Proj_INT%  ...  \n%EVENT_AbortFPM%  ...  \n%EVENT_DeletePoint%  ...  \n%EVENT_FunctionManipulation%  ...  \n%EVENT_Msg%  ...  \n%EVENT_PerformAfterHowManyTimeCycles%  ...  \n%EVENT_StopFPM%  ...  \n%ElapsedTimeIntegrationCycle%  ...  parameter for the real()-function (equation parser) \n%ElapsedTimePointOrganization%  ...  parameter for the real()-function (equation parser) \n%FLIQUID_NbParticles%  ...  parameter for the real()-function (equation parser) \n%FPM_KineticEnergy%  ...  parameter for the real()-function (equation parser) \n%FPM_KineticEnergy_Defect_O2%  ...  parameter for the real()-function (equation parser) \n%FPM_KineticEnergy_Defect_gradPv%  ...  parameter for the real()-function (equation parser) \n%FPM_KineticEnergy_Defect_rhogDv%  ...  parameter for the real()-function (equation parser) \n%FPM_KineticEnergy_DifferenceInOrganize%  ...  parameter for the real()-function (equation parser) \n%FPM_KineticEnergy_DifferenceInOrganize2%  ...  parameter for the real()-function (equation parser) \n%FPM_KineticEnergy_DifferenceInTimeStep%  ...  parameter for the real()-function (equation parser) \n%FPM_VOLUME_ACTUAL%  ...  parameter for the real()-function (equation parser) \n%FPM_VOLUME_DeletedAtMetaplanes%  ...  parameter for the real()-function (equation parser) \n%FPM_VOLUME_TARGET%  ...  parameter for the real()-function (equation parser) \n%GASDYN_Mass%  ...  parameter for the real()-function (equation parser) \n%GASDYN_MassAnalytical%  ...  parameter for the real()-function (equation parser) \n%GASDYN_MassCorrection%  ...  parameter for the real()-function (equation parser) \n%GASDYN_TotalEnergy%  ...  parameter for the real()-function (equation parser) \n%GASDYN_TotalEnergyAnalytical%  ...  parameter for the real()-function (equation parser) \n%GASDYN_TotalEnergyCorrection%  ...  parameter for the real()-function (equation 
parser) \n%GEO_Inside%  ...  \n%GEO_Outside%  ...  \n%GEO_RemoveClusterByIndex%  ...  \n%GEO_RemoveClusterClosestToGivenPoint%  ...  \n%GEO_Tube%  ...  \n%GEO_Vector%  ...  \n%GradtEtaGrad_DirectApproximation%  ...  \n%GradtEtaGrad_Identity%  ...  \n%GradtEtaGrad_StarStencil%  ...  \n%H_constant%  ...  \n%H_linear%  ...  \n%H_radial%  ...  \n%H_ring%  ...  \n%H_spherical%  ...  \n%INTEGRATION_ABSFLUX%  ...  \n%INTEGRATION_ABSFLUX_TIME%  ...  \n%INTEGRATION_BND%  ...  \n%INTEGRATION_BND_DIRECT%  ...  \n%INTEGRATION_BND_DIRECT_Proj_BND%  ...  \n%INTEGRATION_BND_DIRECT_TIME%  ...  \n%INTEGRATION_BND_DIRECT_TIME_Proj_BND%  ...  \n%INTEGRATION_BND_OUTSIDE%  ...  \n%INTEGRATION_BND_TIME%  ...  \n%INTEGRATION_Comment%  ...  comment/remark specifier for intergation statements \n%INTEGRATION_FLUX%  ...  \n%INTEGRATION_FLUX_TIME%  ...  \n%INTEGRATION_Header%  ...  comment/remark specifier for intergation statements \n%INTEGRATION_INT%  ...  \n%INTEGRATION_INT_TIME%  ...  \n%INTEGRATION_Remark%  ...  comment/remark specifier for intergation statements \n%INTEGRATION_Values(1)%  ...  deprecated \n%INTEGRATION_Values(2)%  ...  deprecated \n%INTEGRATION_Values(3)%  ...  deprecated \n%INTEGRATION_Values(4)%  ...  deprecated \n%INTEGRATION_Values(5)%  ...  deprecated \n%MASSFLOW_DROPLETPHASE%  ...  \n%MAXIMUM_BND%  ...  \n%MAXIMUM_INT%  ...  \n%MED_ADBLUE%  ...  \n%MED_BARODESY%  ...  \n%MED_CARREAU%  ...  \n%MED_DOUGH%  ...  \n%MED_GLASS%  ...  \n%MED_HOOK%  ...  \n%MED_HYPOPLAST%  ...  \n%MED_JOHNSON_COOK%  ...  specifier for the Johnson Cook Stress flow stress model \n%MED_JOHNSON_COOK_PROJ%  ...  \n%MED_PUR%  ...  \n%MED_VFT%  ...  \n%MED_WATER%  ...  \n%MED_YIELDSTRESS%  ...  \n%MED_YIELDSTRESS_PROJ%  ...  \n%MED_air%  ...  \n%MED_foam%  ...  \n%MED_fuel%  ...  \n%MED_none%  ...  \n%MEM_STATISTICS_ALLOC%  ...  parameter for the real()-function (equation parser) \n%MEM_STATISTICS_AVAIL%  ...  parameter for the real()-function (equation parser) \n%MINIMUM_BND%  ...  \n%MINIMUM_INT%  ...  \n%MONITORPOINTS_CREATION_AtBoundary%  ...  \n%MONITORPOINTS_CREATION_Inside%  ...  \n%MONITORPOINTS_CREATION_IrreducibleFPMpoint%  ...  \n%MONITORPOINTS_CREATION_PenetrationOfBlindAndEmptyBoundary%  ...  \n%MONITOR_NbParticles%  ...  parameter for the real()-function (equation parser) \n%MOVE_ElasticBeam%  ...  \n%MOVE_InvokeDataCaching%  ...  \n%MOVE_ProjectionOfMovementOfAnotherPart%  ...  \n%MOVE_TowardsPhaseBoundary%  ...  \n%MOVE_TranslationRotation%  ...  \n%MOVE_VirtualRotation%  ...  \n%MOVE_bogen%  ...  \n%MOVE_foam%  ...  \n%MOVE_position%  ...  \n%MOVE_rigid%  ...  \n%MOVE_rigid_noinertia%  ...  \n%MOVE_rotation%  ...  \n%MOVE_velocity%  ...  \n%MOVE_vertuschka%  ...  \n%MPI_NbProcesses%  ...  parameter for the real()-function (equation parser) \n%NumberTimeStepsExecuted%  ...  parameter for the real()-function (equation parser) \n%OMP_NbProcesses%  ...  parameter for the real()-function (equation parser) \n%OR%  ...  \n%ORGANIZE_NbParticles%  ...  parameter for the real()-function (equation parser) \n%PBE_Gaussian_OPMSP%  ...  \n%PBE_Gaussian_OPMSP_diff%  ...  \n%POINT_APPROXIMATE%  ...  \n%POINT_DIRECT%  ...  \n%POSTBND_ENGY%  ...  \n%POSTBND_ENGYint%  ...  \n%POSTBND_FRCE%  ...  \n%POSTBND_FRCEint%  ...  \n%POSTBND_HEAT%  ...  \n%POSTBND_HEATint%  ...  \n%POSTBND_MASS%  ...  \n%POSTBND_MASSint%  ...  \n%POSTBND_MOM%  ...  \n%POSTBND_MOMint%  ...  \n%POSTBND_VOL%  ...  \n%POSTBND_VOLint%  ...  \n%POSTVOL_ENGY%  ...  \n%POSTVOL_MASS%  ...  \n%POSTVOL_MOM%  ...  \n%POSTVOL_VOL%  ...  \n%PUBLICVALUE%  ...  \n%PUBLICVALUE_CLOCKstatistics%  ...  \n%PUBLICVALUE_CPUstatistics%  ...  \n%PUBLICVALUE_SUM%  ...  \n%PUBLICVALUE_TIME%  ...  \n%PUBLICVALUE_xValueOfBNDpoint%  ...  parameter for the real()-function (equation parser) \n%PUBLICVALUE_yValueOfBNDpoint%  ...  parameter for the real()-function (equation parser) \n%PUBLICVALUE_zValueOfBNDpoint%  ...  parameter for the real()-function (equation parser) \n%RESTART_sequence%  ...  \n%RESTART_single%  ...  \n%RealTimeSimulation%  ...  parameter for the real()-function (equation parser) \n%SAVE_
scalar%  ...  \n%SAVE_vector%  ...  \n%SPM_CompressedRowFormat%  ...  \n%TOUCH_always%  ...  \n%TOUCH_geometrical%  ...  \n%TOUCH_liquid%  ...  \n%TOUCH_never%  ...  \n%TOUCH_reflection%  ...  \n%TOUCH_solid%  ...  \n%VMEM_STATISTICS_ALLOC%  ...  parameter for the real()-function (equation parser) \n%VMEM_STATISTICS_AVAIL%  ...  parameter for the real()-function (equation parser) \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.html", 
        "id": 342, 
        "title": "__Constants__"
    }, 
    {
        "body": "\n\n%ind_CG(2)% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.GASDYN.%ind_CG(2)%.html", 
        "id": 343, 
        "title": "%ind_CG(2)%"
    }, 
    {
        "body": "\n\n%ind_CG(3)% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.GASDYN.%ind_CG(3)%.html", 
        "id": 344, 
        "title": "%ind_CG(3)%"
    }, 
    {
        "body": "\n\nFPMdevelopment\n\n\n\n\n\nList of members:\n\n\nCoding  ... Coding\nIndices  ... Indices\n\n\n\n\n\n", 
        "url": "../FPMdevelopment.html", 
        "id": 345, 
        "title": "FPMdevelopment"
    }, 
    {
        "body": "\n\nCoding\n\n\n\n\n\nList of members:\n\n\nRewriting  ...  step by step rewriting of parts of the organization of the point cloud \nCommenting  ... Commenting\nIndices  ... Indices\nRefactoring  ... Refactoring\nConventions  ... Conventions\n\n\n\n\n\n", 
        "url": "../FPMdevelopment.Coding.html", 
        "id": 346, 
        "title": "Coding"
    }, 
    {
        "body": "\n\nIndices\n\n\n\n\n\nList of members:\n\n\nGeneral  ... General\n\n\n\n\n\n", 
        "url": "../FPMdevelopment.Indices.html", 
        "id": 347, 
        "title": "Indices"
    }, 
    {
        "body": "\n\nIndex\n\n\n\n\n\nList of members:\n\n\n %  ...  %\n 1  ...  1\n 2  ...  2\n A  ...  A\n B  ...  B\n C  ...  C\n D  ...  D\n E  ...  E\n F  ...  F\n G  ...  G\n H  ...  H\n I  ...  I\n J  ...  J\n K  ...  K\n L  ...  L\n M  ...  M\n N  ...  N\n O  ...  O\n P  ...  P\n Q  ...  Q\n R  ...  R\n S  ...  S\n T  ...  T\n U  ...  U\n V  ...  V\n W  ...  W\n Y  ...  Y\n _  ...  _\n a  ...  a\n b  ...  b\n c  ...  c\n d  ...  d\n e  ...  e\n f  ...  f\n g  ...  g\n h  ...  h\n i  ...  i\n k  ...  k\n l  ...  l\n m  ...  m\n n  ...  n\n o  ...  o\n p  ...  p\n q  ...  q\n r  ...  r\n s  ...  s\n t  ...  t\n u  ...  u\n v  ...  v\n w  ...  w\n x  ...  x\n\n\n\n\n\n", 
        "url": "../Index.html", 
        "id": 348, 
        "title": "Index"
    }, 
    {
        "body": "\n\n %\n\n\n %ABAQUS_AVMidpointIntplNode%                          ... \n %ABAQUS_AVMidpointShpdNode%                           ... \n %ABAQUS_IntplMidpoint%                                ... \n %ABAQUS_IntplNode%                                    ... \n %ABAQUS_ShpdMidpoint%                                 ... \n %ABAQUS_ShpdMidpointShpdNode%                         ... \n %ABAQUS_ShpdNode%                                     ... \n %ACTIVE_always%                                       ... \n %ACTIVE_init%                                         ... \n %ACTIVE_nofill%                                       ... \n %ACTIVE_nofill_OnBEclusters%                          ... \n %ACTIVE_nofill_OnDiscs%                               ... \n %ACTIVE_nofill_OnDiscsAndBEclusters%                  ... \n %ACTIVE_noinit%                                       ... \n %AND%                                                 ... \n %AVERAGE_BND%                                                    ...  average of a functional based on interior FPM points \n %AVERAGE_BND%                                         ... \n %AVERAGE_INT%                                                    ...  average of a functional based on interior FPM points \n %AVERAGE_INT%                                         ... \n %AVERAGE_XYPLANE%                                     ... \n %BCON_CG%                                             ... \n %BCON_E_tot%                                          ... \n %BCON_Ma%                                             ... \n %BCON_PAMCRASH_CG%                                    ... \n %BCON_PAMCRASH_Mdot%                                  ... \n %BCON_PAMCRASH_RG%                                    ... \n %BCON_PAMCRASH_T%                                     ... \n %BCON_RG%                                             ... \n %BCON_T%                                              ... \n %BCON_T_tot%                                          ... \n %BCON_Vdot%                                            ...  Velocity boundary conditions based on the volume flux \n %BCON_Vdot%                                           ... \n %BCON_contact%                                        ... \n %BCON_explicit%                                       ... \n %BCON_far_field%                                      ... \n %BCON_free%                                           ... \n %BCON_free_NoVisc%                                    ... \n %BCON_implicit%                                       ... \n %BCON_inflow%                                         ... \n %BCON_none%                                           ... \n %BCON_outflow%                                        ... \n %BCON_p%                                              ... \n %BCON_p_tot%                                          ... \n %BCON_rho%                                            ... \n %BCON_rho_va%                                         ... \n %BCON_rho_vb%                                         ... \n %BCON_rho_vn%                                         ... \n %BCON_s%                                              ... \n %BCON_s_ini%                                          ... \n %BCON_slip%                                           ... \n %BCON_va%                                             ... \n %BCON_vb%                                             ... \n %BCON_visc%                                           ... \n %BCON_vn%                                             ... \n %BCON_wall%                                           ... \n %BCON_wall_nosl%                                      ... \n %BND_AVERAGE%                                         ... \n %BND_BNDDOT%                                          ... \n %BND_BlindAndEmpty%                                   ... \n %BND_CAUCHY%                                           ...  Cauchy boundary condition \n %BND_CAUCHY%                                          ... \n %BND_COULOMB_SLIDE%                                   ... \n %BND_COULOMB_SLIP%                                    ... \n %BND_
COULOMB_STICK%                                   ... \n %BND_DIRICH%                                          ... \n %BND_DRYFRICTION%                                     ... \n %BND_DRYFRICTION_InContact%                           ... \n %BND_HEATFLUX%                                        ... \n %BND_HELMHOLTZ%                                       ... \n %BND_IGES%                                            ... \n %BND_IGES_curve%                                      ... \n %BND_IGES_ignore%                                     ... \n %BND_IGES_surface%                                    ... \n %BND_IGES_trafo%                                      ... \n %BND_INTERPHASE%                                      ... \n %BND_INTERPHASE_dfdn%                                 ... \n %BND_INTERPHASE_f%                                    ... \n %BND_LAPLAC%                                          ... \n %BND_Mdot%                                            ... \n %BND_NEUMANN%                                         ... \n %BND_NEUMANN_DIRICHLET%                               ... \n %BND_NUSSEL%                                          ... \n %BND_RADIATION%                                       ... \n %BND_ROBIN%                                            ...  Robin boundary condition \n %BND_ROBIN%                                           ... \n %BND_SYSTUS%                                          ... \n %BND_VONNEU%                                          ... \n %BND_arcl%                                            ... \n %BND_arcs%                                            ... \n %BND_blind%                                           ... \n %BND_contact%                                         ... \n %BND_contact_Explicit%                                ... \n %BND_corner%                                          ... \n %BND_count_BE%                                                   ...  provide the current number of boundary elements that belong to the geometry \n %BND_count_BE%                                        ...  parameter for the real()-function (equation parser) \n %BND_count_NP%                                                   ...  provide the current number of node points belonging to the geometry \n %BND_count_NP%                                        ...  parameter for the real()-function (equation parser) \n %BND_cube%                                            ... \n %BND_cylinder%                                        ... \n %BND_edge%                                            ... \n %BND_far_field%                                       ... \n %BND_fixed%                                           ... \n %BND_free%                                        ...  Direct dynamic pressure boundary conditions at free surface \n %BND_free%                                            ... \n %BND_free_Barodesy%                                   ... \n %BND_free_HypoPlast%                                  ... \n %BND_free_InContact%                                  ... \n %BND_free_InContact_Explicit%                         ... \n %BND_free_NoVisc%                                     ... \n %BND_free_implicit%                               ...  Direct dynamic pressure boundary conditions at free surface \n %BND_free_implicit%                                   ... \n %BND_free_implicit_InContact%                         ... \n %BND_free_implicit_InContact_Explicit%                ... \n %BND_free_implicit_InContact_explicit%            ...  Direct dynamic pressure boundary conditions at phase boundary \n %BND_inflow%                                          ... \n %BND_line%                                            ... \n %BND_node%                                            ... \n %BND_none%                                            ... \n %BND_outflow%                                         ... \n %BND_plane%                                           ... \n %BND_point%                                           ... \n %BND_quad%                                            ... \n %BND_slip%                  
                      ...  Direct dynamic pressure boundary conditions \n %BND_slip%                                             ...  Velocity boundary conditions: slip with viscous friction \n %BND_slip%                                            ... \n %BND_slip_InContact%                                ...  Velocity boundary conditions at interfaces, implicit \n %BND_slip_InContact%                                  ... \n %BND_slip_InContact_Explicit%                       ...  Velocity boundary conditions at interfaces, explicit \n %BND_slip_InContact_Explicit%                         ... \n %BND_tria%                                            ... \n %BND_tria6N%                                          ... \n %BND_void%                                            ... \n %BND_wall%                                        ...  Quasi-stationary dynamic pressure boundary condition \n %BND_wall%                                             ...  Velocity boundary conditions: pure slip \n %BND_wall%                                            ... \n %BND_wall_InContact%                                  ... \n %BND_wall_InContact_Explicit%                         ... \n %BND_wall_NoLayerThickness%                           ... \n %BND_wall_nosl%                                   ...  Quasi-stationary dynamic pressure boundary condition \n %BND_wall_nosl%                                        ...  Velocity boundary conditions: pure noslip \n %BND_wall_nosl%                                       ... \n %BNDpoints_ExtractFromNodes%                          ... \n %BOUNDARYFILLING_Always%                              ... \n %BOUNDARYFILLING_Never%                               ... \n %BOUNDARYFILLING_OnlyIfActiveItself%                  ... \n %BOUNDARYFILLING_OnlyInActiveNeighborhood%            ... \n %CHAMBER_BGK%                                         ... \n %CHAMBER_DROPLETPHASE%                                ... \n %CHAMBER_Euler%                                       ... \n %CHAMBER_EulerExpl%                                   ... \n %CHAMBER_GASDYN%                                      ... \n %CHAMBER_IT_000%                                      ... \n %CHAMBER_IT_tes%                                      ... \n %CHAMBER_IT_v00%                                      ... \n %CHAMBER_IT_vp0%                                      ... \n %CHAMBER_IT_vpT%                                      ... \n %CHAMBER_KEPS%                                        ... \n %CHAMBER_LIQUID%                                      ... \n %CHAMBER_Lagrange%                                    ... \n %CHAMBER_LineUp%                                      ... \n %CHAMBER_NoLineUp%                                    ... \n %CHAMBER_None%                                        ... \n %CHAMBER_PARTICLEPHASE%                               ... \n %CHAMBER_POPBAL%                                      ... \n %CHAMBER_SHALLOWWATER%                                ... \n %CLOCK_STATISTICS_FLIQUID%                                       ...  CLOCK time measured for the execution of the (pure) FPM numerics, CURRENT TIME STEP \n %CLOCK_STATISTICS_FLIQUID%                            ...  parameter for the real()-function (equation parser) \n %CLOCK_STATISTICS_ORGANIZE%                                      ...  CLOCK time measured for the execution of the FPM organization (point cloud management, geometry operations), CURRENT TIME STEP \n %CLOCK_STATISTICS_ORGANIZE%                           ...  parameter for the real()-function (equation parser) \n %CLOCK_STATISTICS_TOTAL_FLIQUID%                      ...  parameter for the real()-function (equation parser) \n %CLOCK_STATISTICS_TOTAL_ORGANIZE%                                ...  Clock time over all particles and the entire simulation time of the liquid solver \n %CLOCK_STATISTICS_TOTAL_ORGANIZE%                     ...  parameter for the real()-function (equation parser) \n %CLOCK_STATISTICS_TOTAL_SAMG%                                    ...  clock statistics for SAMG. BETA! USE WITH CAUTION \n %CLOCK_STATISTICS_
TOTAL_SAMG%                         ...  parameter for the real()-function (equation parser) \n %CODI_explicit%                                       ... \n %CODI_implicit%                                       ... \n %CONSTRUCT_Area%                                                 ... \n %CONSTRUCT_Area%                                      ... \n %CONSTRUCT_BoxMax%                                               ... \n %CONSTRUCT_BoxMax%                                    ... \n %CONSTRUCT_BoxMidPoint%                                          ...  mid point of enclosing box around given alias-entities \n %CONSTRUCT_BoxMidPoint%                               ... \n %CONSTRUCT_BoxMidPoint_Abs%                                      ... \n %CONSTRUCT_BoxMidPoint_Abs%                           ... \n %CONSTRUCT_BoxMin%                                               ... \n %CONSTRUCT_BoxMin%                                    ... \n %CONSTRUCT_COG%                                                  ... \n %CONSTRUCT_COG%                                       ... \n %CONSTRUCT_EstablishCurveVolumeVersusHeight%                     ...  establish a 2-row-curve that provides the height-volume-relation of a closed part of geometry \n %CONSTRUCT_EstablishCurveVolumeVersusHeight%          ... \n %CONSTRUCT_Normal%                                               ... \n %CONSTRUCT_Normal%                                    ... \n %CONSTRUCT_NormalDividedByArea%                                  ... \n %CONSTRUCT_NormalDividedByArea%                       ... \n %CONSTRUCT_PointBasedOnAbsoluteVolume%                           ... \n %CONSTRUCT_PointBasedOnAbsoluteVolume%                ... \n %CONSTRUCT_PointBasedOnRelativeVolume%                           ... \n %CONSTRUCT_PointBasedOnRelativeVolume%                ... \n %CONSTRUCT_Tangent1%                                             ... \n %CONSTRUCT_Tangent1%                                  ... \n %CONSTRUCT_Tangent2%                                             ... \n %CONSTRUCT_Tangent2%                                  ... \n %CONSTRUCT_Volume%                                               ... \n %CONSTRUCT_Volume%                                    ... \n %CONSTRUCT_VolumeForGivenHeight%                                 ...  compute the volume of a closed body restricted by a certain height \n %CONSTRUCT_VolumeForGivenHeight%                      ... \n %COORDTRANS_cone%                                     ... \n %COORDTRANS_linear%                                   ... \n %COORDTRANS_radial%                                   ... \n %COORDTRANS_ring%                                     ... \n %COORDTRANS_spherical%                                ... \n %COUPLE_PAM%                                          ... \n %COUPLE_SYSTUS%                                       ... \n %CPU_STATISTICS_FLIQUID%                                         ...  CPU time measured for the execution of the (pure) FPM numerics, CURRENT TIME STEP \n %CPU_STATISTICS_FLIQUID%                              ...  parameter for the real()-function (equation parser) \n %CPU_STATISTICS_ORGANIZE%                                        ...  CPU time measured for the execution of the FPM organization (point cloud management, geometry operations), CURRENT TIME STEP \n %CPU_STATISTICS_ORGANIZE%                             ...  parameter for the real()-function (equation parser) \n %CPU_STATISTICS_TOTAL_FLIQUID%                        ...  parameter for the real()-function (equation parser) \n %CPU_STATISTICS_TOTAL_ORGANIZE%                                  ...  CPU time over all particles and the entire simulation time of the liquid solver \n %CPU_STATISTICS_TOTAL_ORGANIZE%                       ...  parameter for the real()-function (equation parser) \n %CUMU_INTERVAL%                                       ... \n %CUMU_NONE%                                           ... \n %CUMU_SIMULATION%                                     ... \n %DIFFOP_gradient_DELAUNAY%                            ... \n %DIFFOP_gradient_GASDYN%       
                       ... \n %DIFFOP_gradient_MLS%                                 ... \n %DIFFOP_laplace_GASDYN%                               ... \n %DIFFOP_laplace_LS%                                   ... \n %DIFFOP_laplace_MLS%                                  ... \n %DIFFOP_laplace_optimized%                            ... \n %DIFFOP_laplace_simplex%                              ... \n %EQN_Proj_ALL%                                        ... \n %EQN_Proj_BND%                                        ... \n %EQN_Proj_INT%                                        ... \n %EVENT_AbortFPM%                                      ... \n %EVENT_DeletePoint%                                   ... \n %EVENT_FunctionManipulation%                          ... \n %EVENT_Msg%                                           ... \n %EVENT_PerformAfterHowManyTimeCycles%                 ... \n %EVENT_StopFPM%                                       ... \n %ElapsedTimeIntegrationCycle%                                    ...  elapsed CPU-time for FPM numerical integration \n %ElapsedTimeIntegrationCycle%                         ...  parameter for the real()-function (equation parser) \n %ElapsedTimePointOrganization%                                   ...  elapsed CPU-time for point cloud organization \n %ElapsedTimePointOrganization%                        ...  parameter for the real()-function (equation parser) \n %FLIQUID_NbParticles%                                            ...  current number of ACTIVE FPM points \n %FLIQUID_NbParticles%                                 ...  parameter for the real()-function (equation parser) \n %FPM_KineticEnergy%                                              ...  provide total kinetic energy of a given chamber \n %FPM_KineticEnergy%                                   ...  parameter for the real()-function (equation parser) \n %FPM_KineticEnergy_Defect_O2%                                    ...  second order defect of kinetic energy during time integration \n %FPM_KineticEnergy_Defect_O2%                         ...  parameter for the real()-function (equation parser) \n %FPM_KineticEnergy_Defect_gradPv%                                ...  first order defect of kinetic energy during time integration due to pressure \n %FPM_KineticEnergy_Defect_gradPv%                     ...  parameter for the real()-function (equation parser) \n %FPM_KineticEnergy_Defect_rhogDv%                                ...  first order defect of kinetic energy during time integration due to gravity \n %FPM_KineticEnergy_Defect_rhogDv%                     ...  parameter for the real()-function (equation parser) \n %FPM_KineticEnergy_DifferenceInOrganize%                         ...  change of kinetic energy in some chamber during the organization step of FPM \n %FPM_KineticEnergy_DifferenceInOrganize%              ...  parameter for the real()-function (equation parser) \n %FPM_KineticEnergy_DifferenceInOrganize2%                        ...  change of kinetic energy in some chamber during organizations at the end of the time step (should be strictly zero, just to check) \n %FPM_KineticEnergy_DifferenceInOrganize2%             ...  parameter for the real()-function (equation parser) \n %FPM_KineticEnergy_DifferenceInTimeStep%                         ...  change of kinetic energy in some chamber during the execution of the time step \n %FPM_KineticEnergy_DifferenceInTimeStep%              ...  parameter for the real()-function (equation parser) \n %FPM_VOLUME_ACTUAL%                                              ...  actual value of volume in a given chamber \n %FPM_VOLUME_ACTUAL%                                   ...  parameter for the real()-function (equation parser) \n %FPM_VOLUME_DeletedAtMetaplanes%                                 ...  volume reduced by deletion of FPM points at metaplanes in the current time cycle \n %FPM_VOLUME_DeletedAtMetaplanes%                      ...  parameter for the real()-function (equation parser) \n %FPM_VOLUME_TARGET%                                              ...  target value of volume in a given 
chamber \n %FPM_VOLUME_TARGET%                                   ...  parameter for the real()-function (equation parser) \n %GASDYN_Mass%                                         ...  parameter for the real()-function (equation parser) \n %GASDYN_MassAnalytical%                               ...  parameter for the real()-function (equation parser) \n %GASDYN_MassCorrection%                               ...  parameter for the real()-function (equation parser) \n %GASDYN_TotalEnergy%                                  ...  parameter for the real()-function (equation parser) \n %GASDYN_TotalEnergyAnalytical%                        ...  parameter for the real()-function (equation parser) \n %GASDYN_TotalEnergyCorrection%                        ...  parameter for the real()-function (equation parser) \n %GEO_Inside%                                          ... \n %GEO_Inside%                                           ...  re-orient (parts of) geometry towards its inside \n %GEO_Outside%                                         ... \n %GEO_Outside%                                          ...  re-orient (parts of) geometry towards its outside \n %GEO_RemoveClusterByIndex%_GEO                                   \n %GEO_RemoveClusterByIndex%                            ... \n %GEO_RemoveClusterClosestToGivenPoint%_GEO                       \n %GEO_RemoveClusterClosestToGivenPoint%                ... \n %GEO_Tube%                                                       ...  reorient a part of the geometry in the tube sense \n %GEO_Tube%                                            ... \n %GEO_Vector%                                                     ...  geoemtry reorientation based on a given vector \n %GEO_Vector%                                          ... \n %GradtEtaGrad_DirectApproximation%                    ... \n %GradtEtaGrad_Identity%                               ... \n %GradtEtaGrad_StarStencil%                            ... \n %H_constant%                                                     ...  constant smoothing length, or smoothing length given as equation \n %H_constant%                                          ... \n %H_linear%                                                       ...  constant smoothing length, or smoothing length given as equation \n %H_linear%                                            ... \n %H_radial%                                                       ...  constant smoothing length, or smoothing length given as equation \n %H_radial%                                            ... \n %H_ring%                                                         ...  constant smoothing length, or smoothing length given as equation \n %H_ring%                                              ... \n %H_spherical%                                                    ...  provide a spherical distribution of H around points or geometry elements \n %H_spherical%                                         ... \n %INTEGRATION_ABSFLUX%                                            ...  absolute value of a flux by simply counting the FPM-points that slip over a given control surface in either direction \n %INTEGRATION_ABSFLUX%                                 ... \n %INTEGRATION_ABSFLUX_TIME%                                       ...  time integration of the absolute value of a flux by simply counting the FPM-points that slip over a given control surface i eitehr direction \n %INTEGRATION_ABSFLUX_TIME%                            ... \n %INTEGRATION_BND%                                                ...  Integration of a vector valued function along pieces of boundary \n %INTEGRATION_BND%                                     ... \n %INTEGRATION_BND_DIRECT%                                         ...  Integration of a scalar value along pieces of boundary \n %INTEGRATION_BND_DIRECT%                              ... \n %INTEGRATION_BND_DIRECT_Proj_BND%                     ... \n %INTEGRATION_BND_DIRECT_TIME%                         ... \n %INTEGRATION_BND_DIRECT_TIME_Proj_BND%                ... \n %INTEGRATION_BND_OUTSIDE%        
                     ... \n %INTEGRATION_BND_TIME%                                ... \n %INTEGRATION_Comment%                                 ...  comment/remark specifier for intergation statements \n %INTEGRATION_FLUX%                                               ...  time integration of a flux by simply counting the FPM-points that slip over a given control surface \n %INTEGRATION_FLUX%                                    ... \n %INTEGRATION_FLUX_TIME%                                          ...  time integration of a flux by simply counting the FPM-points that slip over a given control surface \n %INTEGRATION_FLUX_TIME%                               ... \n %INTEGRATION_Header%                                             ...  item to signalize that heade information is given \n %INTEGRATION_Header%                                  ...  comment/remark specifier for intergation statements \n %INTEGRATION_INT%                                                ...  volume integration of a functional over a given material \n %INTEGRATION_INT%                                     ... \n %INTEGRATION_INT_TIME%                                           ...  volume and time integration of a functional over a given material \n %INTEGRATION_INT_TIME%                                ... \n %INTEGRATION_Remark%                                  ...  comment/remark specifier for intergation statements \n %INTEGRATION_Values(1)%                               ...  deprecated \n %INTEGRATION_Values(2)%                               ...  deprecated \n %INTEGRATION_Values(3)%                               ...  deprecated \n %INTEGRATION_Values(4)%                               ...  deprecated \n %INTEGRATION_Values(5)%                               ...  deprecated \n %MASSFLOW_DROPLETPHASE%                               ... \n %MAXIMUM_BND%                                                    ...  maximum of a functional based on boundary FPM points \n %MAXIMUM_BND%                                         ... \n %MAXIMUM_INT%                                                    ...  maximum of a functional based on interior FPM points \n %MAXIMUM_INT%                                         ... \n %MED_ADBLUE%                                          ... \n %MED_BARODESY%                                        ... \n %MED_CARREAU%                                         ... \n %MED_DOUGH%                                           ... \n %MED_GLASS%                                           ... \n %MED_HOOK%                                            ... \n %MED_HYPOPLAST%                                       ... \n %MED_JOHNSON_COOK%                                    ...  specifier for the Johnson Cook Stress flow stress model \n %MED_JOHNSON_COOK_PROJ%                               ... \n %MED_PUR%                                             ... \n %MED_VFT%                                             ... \n %MED_WATER%                                           ... \n %MED_YIELDSTRESS%                                     ... \n %MED_YIELDSTRESS_PROJ%                                ... \n %MED_air%                                             ... \n %MED_foam%                                            ... \n %MED_fuel%                                            ... \n %MED_none%                                            ... \n %MEM_STATISTICS_ALLOC%                                           ...  currently allocated memory \n %MEM_STATISTICS_ALLOC%                                ...  parameter for the real()-function (equation parser) \n %MEM_STATISTICS_AVAIL%                                           ...  currently available memory \n %MEM_STATISTICS_AVAIL%                                ...  parameter for the real()-function (equation parser) \n %MINIMUM_BND%                                                    ...  minimum of a functinal based on boundary FPM points \n %MINIMUM_BND%                                         ... \n %MINIMUM_INT%                                                    ...  minimum of a functinal based on interior 
FPM points \n %MINIMUM_INT%                                         ... \n %MONITORPOINTS_CREATION_AtBoundary%                              ...  create monitor points due given conditions and place it AT BOUNDARY \n %MONITORPOINTS_CREATION_AtBoundary%                   ... \n %MONITORPOINTS_CREATION_Inside%                                  ...  create monitor points due given conditions, but do not attach to boundary \n %MONITORPOINTS_CREATION_Inside%                       ... \n %MONITORPOINTS_CREATION_IrreducibleFPMpoint%                     ...  mark FPM points to be irreducible \n %MONITORPOINTS_CREATION_IrreducibleFPMpoint%          ... \n %MONITORPOINTS_CREATION_PenetrationOfBlindAndEmptyBoundary%      ...  create monitor point if FPM point penetrates BND_BlindAndEmpty boundaries \n %MONITORPOINTS_CREATION_PenetrationOfBlindAndEmptyBoundary%constconstconstconstconstconstconstconstconstconstconstconstconstconstconstconstconstconstconstconstconstconstconstconstconstconstconstconstconstconstconstconstconstconstconstconstconstconstconstconstconstconstconstconstconstconstconstconstRestartconstRestartconstconstconstconstconstconstconstconstconstconstconstconstconstBCONFLIQUIDGASDYNSHWBCONBCON_CNTCT                                          ...  Velocity boundary conditions at interfaces \n %ind_v(2)%                                                       ... \n %ind_v(2)%                                                       ...  y-component of velocity vector \n %ind_v(2)%                                                       ...  velocity of water film, y-component, unit: m/s \n %ind_v(2)%                                                       ...  y-component of velocity vector \n %ind_v(3)%                                                       ... \n %ind_v(3)%                                                       ...  z-component of velocity vector \n %ind_v(3)%                                                       ...  velocity of water film, z-component, unit: m/s \n %ind_v(3)%                                                       ...  z-component of velocity vector \n %ind_v0Darcy(1)%                                                 ...  velocity of the porous basis material, x-component, unit: m/s \n %ind_v0Darcy(2)%                                                 ...  velocity of the porous basis material, y-component, unit: m/s \n %ind_v0Darcy(3)%                                                 ...  velocity of the porous basis material, z-component, unit: m/s \n %ind_v_0(1)%                                                     ...  velocity of the previous time step, x-component \n %ind_v_0(2)%                                                     ...  velocity of the previous time step, y-component \n %ind_v_0(3)%                                                     ...  velocity of the previous time step, z-component \n %ind_v_3d(1)%                                                    ... \n %ind_v_3d(1)%                                                    ... \n %ind_v_3d(2)%                                                    ... \n %ind_v_3d(2)%                                                    ... \n %ind_v_3d(3)%                                                    ... \n %ind_v_3d(3)%                                                    ... \n %ind_v_p(1)%                                                     ...  x-component of the velocity of boundary movement \n %ind_v_p(2)%                                                     ...  x-component of the velocity of boundary movement \n %ind_v_p(3)%                                                     ...  x-component of the velocity of boundary movement \n %ind_v_residual(1)%                                              ...  residual of velocity (x-component) \n %ind_v_residual(2)%                                              ...  absolute of velocity (y-component) \n %ind_v_residual(3)%                                              ...  residual of velocity (z-component) \n %ind_v_tild(1)%                                                  ...  velocity before 
correction, x-component \n %ind_v_tild(2)%                                                  ...  velocity before correction, y-component \n %ind_v_tild(3)%                                                  ...  velocity before correction, z-component \n %ind_v_times_v0%                                                 ...  scalar product (v-v_p)*(v0-v_p) \n %ind_v_trans(1)%                                                 ...  velocity a particle is actually moving with, x-component, unit=m/s \n %ind_v_trans(2)%                                                 ...  velocity a particle is actually moving with, y-component, unit=m/s \n %ind_v_trans(3)%                                                 ...  velocity a particle is actually moving with, z-component, unit=m/s \n %ind_v_uw(1)%                                                    ... \n %ind_v_uw(1)%                                                    ... \n %ind_v_uw(2)%                                                    ... \n %ind_v_uw(2)%                                                    ... \n %ind_v_uw(3)%                                                    ... \n %ind_v_uw(3)%                                                    ... \n %ind_vn_a%                                                       ... \n %ind_vn_b%                                                       ... \n %ind_vn_n%                                                       ... \n %ind_vol%                                                        ...  numerical weight of particle \n %ind_volBubble%                                                  ...  volume of macroscopic bubble \n %ind_vrel(1)%                                                    ... \n %ind_vrel(2)%                                                    ... \n %ind_vrel(3)%                                                    ... \n %ind_vtang(1)%                                                   ... \n %ind_vtang(2)%                                                   ... \n %ind_vtang(3)%                                                   ... \n %ind_vtang_0(1)%                                                 ... \n %ind_vtang_0(2)%                                                 ... \n %ind_vtang_0(3)%                                                 ... \n %ind_x(1)%                                                       ...  x-component of point position, unit=meters \n %ind_x(2)%                                                       ...  y-component of point position \n %ind_x(3)%                                                       ...  z-component of point position \n %ind_x0(1)%                                                      ...  x-component initial particle position, unit=meters \n %ind_x0(2)%                                                      ...  y-component initial particle position \n %ind_x0(3)%                                                      ...  z-component initial particle position \n %ind_xR(1)%                                                      ...  x-component of particle position in real coordinates, unit=meters \n %ind_xR(2)%                                                      ...  y-component of particle position in real coordinates \n %ind_xR(3)%                                                      ...  z-component of particle position in real coordinates \n %ind_x_displaced(1)%                                             ...  x-component of point position before distance to boundary computation, unit = meters \n %ind_x_displaced(2)%                                             ...  y-component of point position before distance to boundary computation, unit = meters \n %ind_x_displaced(3)%                                             ...  z-component of point position before distance to boundary computation, unit = meters \n %ind_x_dot(1)%                                                   ... \n %ind_x_dot(2)%                                                   ... \n %ind_x_dot(3)%                                                   ... \n %ind_x_dot1(1)%                                                  ... 
\n %ind_x_dot1(2)%                                                  ... \n %ind_x_dot1(3)%                                                  ... \n\n\n\n\n", 
        "url": "../Index. %.html", 
        "id": 349, 
        "title": " %"
    }, 
    {
        "body": "\n\n 1\n\n\n 1D_Curves                                                        ...  define curves with one independent variable \n\n\n\n\n", 
        "url": "../Index. 1.html", 
        "id": 350, 
        "title": " 1"
    }, 
    {
        "body": "\n\n%ind_CG(4)% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.GASDYN.%ind_CG(4)%.html", 
        "id": 351, 
        "title": "%ind_CG(4)%"
    }, 
    {
        "body": "\n\n 2\n\n\n 2D_Curves                                                        ...  define curves with two independent variables \n\n\n\n\n", 
        "url": "../Index. 2.html", 
        "id": 352, 
        "title": " 2"
    }, 
    {
        "body": "\n\n A\n\n\n ACTIVE                                                  ... \n ADTV                                                     ...  adaptive smoothing length definition \n ALIAS                                                            ...  alias defintions within a begin_alias-end_alias-block \n AMFPMJ_CommonAdministrationDirectory                             ...  define a directory that FPM uses for synchronization of multiple FPM jobs \n APPROXIMATENEWPOINTS_HowToApproximateKEPS                        ... \n APPROXIMATENEWPOINTS_SeparateInteriorAndBoundaryPoints           ... \n APPROXIMATENEWPOINTS_SeparateInteriorBoundary                    ... \n ASCII                                                            ...  computation results column-wise in an ASCII formatted file \n ASCII                                                  ...  read in already existing point cloud from ascii format \n AbaqusInterpolation                                     ... \n ActivateChamberAtTime                                   ... \n AggregationKernel                                       ... \n Algorithms                                                       \n AliasForGeometryItems                                            ... \n AllInOne                                                ...  compacting all FPMDOCU pages into one huge HTML-file, thus enabling to search for any string by CTRL+F \n AllowContactToChambers                                  ...  NOT USED, but planned \n AlternativeDPA                                                   ...  compute the consistent pressure as a (postprocessing) result to the current velocity field \n\n\n\n\n", 
        "url": "../Index. A.html", 
        "id": 353, 
        "title": " A"
    }, 
    {
        "body": "\n\n B\n\n\n BCGSL_ell                                                        ... \n BCON                                                             ...  general setting of boundary conditions \n BCON_CNTCT                                                       ...  general setting of boundary conditions \n BCON_CNTCT                                              ... \n BCON                                                    ... \n BC_CNTFORCE                                                      ...  force contact between phases \n BC_CNTFORCE                                             ... \n BC_S                                                             ...  Stress tensor boundary conditions \n BC_SUBSON                                               ... \n BC_SUPERSON                                             ... \n BC_S                                                    ... \n BC_T                                                             ...  Temperature boundary conditions \n BC_T                                                    ... \n BC_TearOffCriterion                                              ...  establish a tear-off criterion for release from walls \n BC_TearOffCriterion                                     ... \n BC_WettingAngle                                                  ...  Define the contact angle between free surface \n BC_WettingAngle                                         ... \n BC_eps                                                           ...  Turbulence-epsilon boundary conditions \n BC_eps                                                  ... \n BC_k                                                             ...  Turbulence-k boundary conditions \n BC_k                                                    ... \n BC_p                                                             ...  Pressure boundary conditions \n BC_p                                                    ... \n BC_v                                                             ...  Velocity boundary conditions \n BC_v                                                    ... \n BE_COLLAPSE_collapsebeforeflip                                   ... \n BE_COLLAPSE_specifycollapse                                      ... \n BE_COLLAPSE_tocollapse                                           ... \n BE_COLLAPSE_tolerance                                            ... \n BND_SearchTreeAdministration_NbTimeStepsUntilFirstSkip           ...  skip the construction of the boundary element search tree after this many time cycles \n BND_SearchTreeAdministration_RefreshTreeAfterHowManyCycles       ...  refresh the boundary element search tree after this many time cycles \n BND_alpha                                                        ... \n BND_beta                                                         ... \n BND_cube                                                         ... \n BND_cylinder                                                     ... \n BND_gamma                                                        ... \n BND_line                                                         ...  create an independent line of the grometry \n BND_plane                                                        ... \n BND_point                                                        ...  create an independent point of the geometry \n BND_quad                                                         ... \n BND_tria                                                         ...  create an independent triangle of the geometry \n BND_tria6N                                                       ... \n BNDpoints_ExtractFromNodes{}                                     ...  create BND_points from existing geometry nodes \n BUBBLE_DoTheManagement                                           ...  switch on bubble analysis for a given chamber index \n BUBBLE_DoTheManagement                                  ... \n BUBBLE_EnforceAveragePressure                                    ...  fix average pressure for all bubbles \n BUBBLE_EnforceAveragePressure    
                       ... \n BUBBLE_UseTopologyConstraint                                     ...  use topoly analysis for bubble-volume computation \n BUBBLE_pOffset                                                   ...  define offset pressure for bubble pressure-on-volume analysis \n BUBBLE_pOffset                                          ... \n BlindOutSubstring                                                ...  blinds out a marked substring such that it is not rendered in the html-document \n BoundaryConditions                                               ...  Prescribe physical boundary conditions for partitions of boundary \n BoundaryElements                                                 ...  definition of the boundary elements to be used during simulation \n BreakageKernel                                          ... \n BubbleAlgorithm                                                  ...  Bubble Algorithm in order to capture internal pressure of untrapped air/gas \n\n\n\n\n", 
        "url": "../Index. B.html", 
        "id": 354, 
        "title": " B"
    }, 
    {
        "body": "\n\n C\n\n\n CCC_CuttingDistance                                              ...  distance up to which boundary element nodes are considered to lie on a cutting curve (optional) \n CCC_CuttingDistance                                     ... \n CCC_clusterAllTriangles                                          ...  flag whether or not to determine clusters without given starting points (optional) \n CCC_clusterAllTriangles                                 ... \n CCC_maxSegmentLength                                             ...  maximum segment length for linearization of cutting curves (optional) \n CCC_maxSegmentLength                                    ... \n CCC_minNewEdgeLength                                             ...  minimum absolute length for new triangle edges (optional) \n CCC_minNewEdgeLength                                    ... \n CCC_relativeEdgeLength                                           ...  minimum relative length for new triangle edges (optional) \n CCC_relativeEdgeLength                                  ... \n CCC_seeds                                                        ...  seeds  starting points for CuttingCurveCluster (optional) \n CID()                                                            ...  CuttingCurveCluster ID \n CLUSTER_Size                                                     ... \n CODI                                                             ...  solve additional COnvection-DIffusion-problems (CODI) \n CODI_A                                                  ... \n CODI_D                                                  ... \n CODI_EQ                                                 ... \n CODI_Integration                                        ... \n CODI_Q                                                  ... \n CODI_V                                                  ... \n CODI_Vimplicit                                          ... \n CODI_c                                                  ... \n CODI_eq                                                 ... \n CODI_min_max                                                     ...  set lower and upper bound for any FPM-variable \n CODI_min_max_RejectLinearSolution                                ...  rejection of the solution of a sparse linear system if minimum-maximum criteria are not fulfilled \n CODI_min_max_RejectLinearSolution                       ... \n CODI_min_max                                            ... \n CODI_rho                                                ... \n COEFF_Iopp_Repair                                                ... \n COEFF_dt                                                         ... \n COEFF_dt_Darcy                                                   ... \n COEFF_dt_Darcy                                          ... \n COEFF_dt_SurfaceTension_A                                        ... \n COEFF_dt_SurfaceTension_A                               ... \n COEFF_dt_SurfaceTension_B                                        ... \n COEFF_dt_SurfaceTension_B                               ... \n COEFF_dt_SurfaceTension_C                                        ... \n COEFF_dt_SurfaceTension_C                               ... \n COEFF_dt                                                ... \n COEFF_dt_free                                                    ... \n COEFF_dt_free                                           ... \n COEFF_dt_virt                                                    ... \n COEFF_dt_virt                                           ... \n COEFF_mue                                                        ... \n COEFF_mue                                               ... \n COEFF_p_divV                                                     ... \n COEFF_penalty                                                    ... \n COMP_AddBoundaryParticles                                        ... \n COMP_AddInteriorParticles                                        ... \n COMP_AdjustEtaEff                                                ... \n COMP_
CheckConservationDuringOrganization                         ... \n COMP_CosEdgeAngle                                                ... \n COMP_CosEdgeAngle                                       ... \n COMP_CosOpenEdge                                                 ...  pretent how the boundary continues at an open edge \n COMP_DeflationLevel                                              ... \n COMP_DoOrganizePointsUntil                                       ... \n COMP_DropletphaseWithDisturbance                                 ... \n COMP_DropletphaseWithDisturbance                        ... \n COMP_FastBoundaryRefill                                          ... \n COMP_FillEdges                                                   ... \n COMP_GradtEtaGrad_Version                                        ... \n COMP_HydrostaticPressure                                         ... \n COMP_IsolatedParticles_MinNbOfInteriorNeigh                      ...  minimum number of interior neighbors a particles should have \n COMP_IsolatedParticles_MinNbOfNeigh                              ...  minimum number of neighbors (total) a particles should have \n COMP_MaxSubCycle                                                 ... \n COMP_MemCheck                                                    ... \n COMP_MinSubCycle                                                 ... \n COMP_OppositePoints_NoFreeSurface                                ... \n COMP_RandomizedFilling                                           ... \n COMP_ReduceSn                                                    ... \n COMP_RemeshBoundary                                              ... \n COMP_RemeshBoundary                                     ... \n COMP_RemoveBoundaryParticles                                     ... \n COMP_RemoveInteriorParticles                                     ... \n COMP_SkipHighVelocities                                          ...  for how many consecutive cycles a corrupt solution of velocity is accepted, before FPM stops \n COMP_SortBEintoBoxes_Version                                     ...  version how to organize/prepare boundary elements for efficient computation \n COMP_StressRelaxAtFreeAndSlipSurface                             ... \n COMP_TimeCheck                                                   ...  switch on time measurements for the main tasks of FPM \n COMP_WettingAngleVariante                                        ... \n COMP_WettingAngleWeight                                          ... \n COMP_dt_indep                                                    ... \n COMP_dt_indep                                           ... \n COMP_evoid                                                       ... \n COMP_facSmooth_Eta                                               ... \n COMP_facSmooth_Eta                                      ... \n COMP_nbSmooth_Darcy                                              ... \n COMP_nbSmooth_Eta                                                ... \n COMP_nbSmooth_Eta                                       ... \n COMP_nbSmooth_pCorr                                              ... \n CONS                                                     ...  constant smoothing length defintion \n CONTROL_DirectTesting                                            ...  Instead of launching the computation, FPM goes into a separate testing branch for different tasks \n CONTROL_DirectTesting_Param1                                     ...  additional parameter for the testing environment \n CONTROL_DirectTesting_Param2                                     ...  additional parameter for the testing environment \n CONTROL_StopAfterReadingGeometry                                 ...  stops the FPM program after geometry is read \n CONTROL_writeUcvLines                                            ...  write out the Ucv-lines read during startup (debugging fewature) \n COORDTRANS                                              ... \n ChkNP()                                                          ...  check for attributes of node points of 
boundary elements \n ClassicalDPA                                                     ...  compute the dynamic(consistent) pressure as a (postprocessing) result to the current velocity field \n CoarsenGeometry                                                  ... \n Coding                                                           \n Commenting                                                       \n CompDistToBoundary_Acc                                           ...  threshold of distance until which the distance to different BE is treated as equal \n CompDistToBoundary_EffectiveSearchRadius                         ... \n ComputationalSteering                                            ...  communication with running FPM-job \n ConstructClause                                                  ...  Mathematical construction of scalars and vectors \n ContinuousPhase                                         ... \n Conventions                                                      \n CorrectionPressure                                               ...  compute the correction pressure according to a Chorin-like correction ansatz \n Cray                                                             ...  special version for CRAY architecture, NO computational steering, WITH SAMG \n CreateBEfromGeometry                                             ...  from the already existing geometry, create new boundary elements such as BND_point \n Curves                                                           ...  define curves in the input file \n CuttingCurveCluster                                              ...  define clusters of boundary elements by cutting the geometry along given curves \n\n\n\n\n", 
        "url": "../Index. C.html", 
        "id": 355, 
        "title": " C"
    }, 
    {
        "body": "\n\n D\n\n\n DEBUG_Check_CCOR                                                 ...  generate control writeout for correction pressure \n DEBUG_Check_PDYN                                                 ...  generate control writeout for dynamic pressure \n DEBUG_Check_PHYD                                                 ...  generate control writeout for hydrostatic pressure \n DEBUG_Check_VELO                                                 ...  generate control writeout for velocity \n DEBUG_DefaultRescue                                              ... \n DELT_dt_AddCond                                         ... \n DELT_dt                                                 ... \n DELT_dt_start                                           ... \n DELT_dt_variable                                        ... \n DEL_rel_dist_shuffle                                             ... \n DIFFOP_ConsistentGradient                                        ...  consistent gradient in the sense d/dn = n*grad \n DIFFOP_ConsistentGradient                               ... \n DIFFOP_Neumann_ExcludeBND                                        ...  exclude boundary particles from neighborhood for computation of Neumann operator \n DIFFOP_PPI_Gradient                                              ... \n DIFFOP_PPI_Laplace                                               ... \n DIFFOP_PPI_Neumann                                               ... \n DIFFOP_Version                                                   ... \n DIFFOP_WeightReductionInCaseOfDeactivation                       ...  reduce weight of neighbor particle by this factor in case of deactivation \n DIFFOP_gradient                                                  ... \n DIFFOP_kernel_Gradient                                   ... \n DIFFOP_kernel_Gradient                                  ... \n DIFFOP_kernel_Laplace                                            ... \n DIFFOP_kernel_Laplace                                   ... \n DIFFOP_kernel_Neumann                                            ...  kernel shape parameter for the d/dn-Operators (Neumann-operators) \n DIFFOP_kernel_Neumann                                   ... \n DIFFOP_kernel_Transport                                  ... \n DIFFOP_kernel_Transport                                 ... \n DIFFOP_laplace                                                   ... \n DIFFOP_laplace                                          ... \n DROPLETPHASE                                                     ...  Indices for the droplet and particle phase solver \n DSCR                                                     ...  discrete (locally variable) smoothing length definition \n DarcyBasisVelocity                                      ... \n DarcyConstant                                           ... \n Darcy_PrimaryDirection                                           ... \n Darcy_PrimaryDirectionFactor                                     ... \n DaughterParticleDistribution                            ... \n DaughterParticleProbability                             ... \n DefineRestart                                                    ...  save restart files \n Deprecated                                                       \n DeriveDivergenceOfVelocity                                       ...  how to compute the divergence of velocity from mass conservation \n DerivePoissonEquationForPressure                                 ...  how to compute the pressure from the equation of momentum \n DesiredAndNominalDivergenceOfVelocity                            ...  derive a formulation for the desired divergence of velocity \n DiffLaw                                                 ... \n DovmmUntilTime_DovpmFromTime                            ... \n DovpmFromTime                                           ... \n DruckerPragerModel                                               ...  use the GeneralYieldStress functionality to derive behavior of granular materials \n DtDom()                                                          ...  
compute the distance to a given alias-domain \n DynamicPressure                                                  ...  dynamic pressure derived from momentum equation \n DynamicPressureAlgorithm                                         \n\n\n\n\n", 
        "url": "../Index. D.html", 
        "id": 356, 
        "title": " D"
    }, 
    {
        "body": "\n\n E\n\n\n ELASTOPLASTIC_FadeOut_divS_gradP                                 ... \n ENFORCE_min_max                                                  ...  set lower and upper bound for any FPM-variable \n ENFORCE_min_max_RejectLinearSolution                             ...  rejection of the solution of a sparse linear system if minimum-maximum criteria are not fulfilled \n ENFORCE_min_max_RejectLinearSolution                    ... \n ENFORCE_min_max                                         ... \n ENSIGHT6                                                         ...  computation results in Ensight6 format \n EPS_global                                                       ... \n ERFHDF5                                                          ...  computation results in ESI format ERF-HDF5 \n EVENT                                                            ...  events defined for the point cloud \n EVENT                                                   ... \n EquationsToSolve                                                 ...  differential equations to be solved by FPM \n Equations                                               ...  define functions, equations, and algebraic expressions \n EventMessage                                                     ...  define event message with message code \n EventMessage                                            ... \n ExDom()                                                          ...  check if a point is outside a given CLOSED domain \n ExcludeCriticalNeighbors                                         ...  Exclude critical neighbors from the neighborlists of FPM-points \n ExpressionOfIntegrand                                            ...  Scalar expression to integrate over given partition of boundary \n ExtendSmallGaps                                                  ... \n\n\n\n\n", 
        "url": "../Index. E.html", 
        "id": 357, 
        "title": " E"
    }, 
    {
        "body": "\n\n%ind_CG_dot(1)% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.GASDYN.%ind_CG_dot(1)%.html", 
        "id": 358, 
        "title": "%ind_CG_dot(1)%"
    }, 
    {
        "body": "\n\n%ind_CG_dot(2)% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.GASDYN.%ind_CG_dot(2)%.html", 
        "id": 359, 
        "title": "%ind_CG_dot(2)%"
    }, 
    {
        "body": "\n\n%ind_CG_dot(3)% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.GASDYN.%ind_CG_dot(3)%.html", 
        "id": 360, 
        "title": "%ind_CG_dot(3)%"
    }, 
    {
        "body": "\n\n%ind_CG_dot(4)% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.GASDYN.%ind_CG_dot(4)%.html", 
        "id": 361, 
        "title": "%ind_CG_dot(4)%"
    }, 
    {
        "body": "\n\n%ind_ETA% ...   \n\n\n    \n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.GASDYN.%ind_ETA%.html", 
        "id": 362, 
        "title": "%ind_ETA%"
    }, 
    {
        "body": "\n\n%ind_ETA_p% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.GASDYN.%ind_ETA_p%.html", 
        "id": 363, 
        "title": "%ind_ETA_p%"
    }, 
    {
        "body": "\n\n%ind_ETA_sm% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.GASDYN.%ind_ETA_sm%.html", 
        "id": 364, 
        "title": "%ind_ETA_sm%"
    }, 
    {
        "body": "\n\n%ind_ETA_u% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.GASDYN.%ind_ETA_u%.html", 
        "id": 365, 
        "title": "%ind_ETA_u%"
    }, 
    {
        "body": "\n\n%ind_LAM% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.GASDYN.%ind_LAM%.html", 
        "id": 366, 
        "title": "%ind_LAM%"
    }, 
    {
        "body": "\n\n%ind_MUE% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.GASDYN.%ind_MUE%.html", 
        "id": 367, 
        "title": "%ind_MUE%"
    }, 
    {
        "body": "\n\n%ind_Mdot_virt% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.GASDYN.%ind_Mdot_virt%.html", 
        "id": 368, 
        "title": "%ind_Mdot_virt%"
    }, 
    {
        "body": "\n\n%ind_PHI% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.GASDYN.%ind_PHI%.html", 
        "id": 369, 
        "title": "%ind_PHI%"
    }, 
    {
        "body": "\n\n%ind_PI(1)% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.GASDYN.%ind_PI(1)%.html", 
        "id": 370, 
        "title": "%ind_PI(1)%"
    }, 
    {
        "body": "\n\n%ind_PI(2)% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.GASDYN.%ind_PI(2)%.html", 
        "id": 371, 
        "title": "%ind_PI(2)%"
    }, 
    {
        "body": "\n\n%ind_PI(3)% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.GASDYN.%ind_PI(3)%.html", 
        "id": 372, 
        "title": "%ind_PI(3)%"
    }, 
    {
        "body": "\n\n%ind_PSI% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.GASDYN.%ind_PSI%.html", 
        "id": 373, 
        "title": "%ind_PSI%"
    }, 
    {
        "body": "\n\n%ind_RG_dot% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.GASDYN.%ind_RG_dot%.html", 
        "id": 374, 
        "title": "%ind_RG_dot%"
    }, 
    {
        "body": "\n\n%ind_SIG% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.GASDYN.%ind_SIG%.html", 
        "id": 375, 
        "title": "%ind_SIG%"
    }, 
    {
        "body": "\n\n%ind_n_sm(1)% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.SHALLOWWATER___indices___.%ind_n_sm(1)%.html", 
        "id": 376, 
        "title": "%ind_n_sm(1)%"
    }, 
    {
        "body": "\n\n%ind_n_sm(2)% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.SHALLOWWATER___indices___.%ind_n_sm(2)%.html", 
        "id": 377, 
        "title": "%ind_n_sm(2)%"
    }, 
    {
        "body": "\n\n%ind_n_sm(3)% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.SHALLOWWATER___indices___.%ind_n_sm(3)%.html", 
        "id": 378, 
        "title": "%ind_n_sm(3)%"
    }, 
    {
        "body": "\n\n%ind_p% ...  pressure given due to height of liquid film \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.SHALLOWWATER___indices___.%ind_p%___SHW___.html", 
        "id": 379, 
        "title": "%ind_p%___SHW___"
    }, 
    {
        "body": "\n\n%ind_p_uw% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.SHALLOWWATER___indices___.%ind_p_uw%.html", 
        "id": 380, 
        "title": "%ind_p_uw%"
    }, 
    {
        "body": "\n\n%ind_TurbulentWallLayer% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.GASDYN.%ind_TurbulentWallLayer%.html", 
        "id": 381, 
        "title": "%ind_TurbulentWallLayer%"
    }, 
    {
        "body": "\n\n%ind_XI0% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.GASDYN.%ind_XI0%.html", 
        "id": 382, 
        "title": "%ind_XI0%"
    }, 
    {
        "body": "\n\n%ind_corpnt% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.GASDYN.%ind_corpnt%.html", 
        "id": 383, 
        "title": "%ind_corpnt%"
    }, 
    {
        "body": "\n\n%ind_div% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.GASDYN.%ind_div%.html", 
        "id": 384, 
        "title": "%ind_div%"
    }, 
    {
        "body": "\n\n F\n\n\n FLIQUID                                                          ...  Implicit solver for incompressible and weakly compressible flow phenomena \n FLIQUID_AssignPenalties_EpsilonP                                 ...  vp- coupled linear system: lower bound for ratio between pressure and velocity entries, PRESSURE EQUATION \n FLIQUID_AssignPenalties_EpsilonV                                 ...  vp- coupled linear system: upper bound for ratio between velocity and pressure entries, VELOCITY EQUATION \n FLIQUID_ConsistentPressure_CoeffJOKER                            ...  TEMPORARY: factor to study consistent pressure version 2 \n FLIQUID_ConsistentPressure_CoeffMM                               ...  TEMPORARY: factor to study consistent pressure version 2 \n FLIQUID_ConsistentPressure_CoeffNN                               ...  TEMPORARY: factor to study consistent pressure version 2 \n FLIQUID_ConsistentPressure_CoeffTT                               ...  TEMPORARY: factor to study consistent pressure version 2 \n FLIQUID_ConsistentPressure_CoeffWEIGHT                           ...  TEMPORARY: factor to study consistent pressure version 2 \n FLIQUID_ConsistentPressure_UseDivV                               ...  use numerical approximations of div(v) in direct computation of dynamic pressure (i.e. consistent pressure) \n FLIQUID_ConsistentPressure_Version                               ...  version how to compute the consistent pressure \n FLIQUID_CorrectionPressure_Version                               ...  (Experimental) Choice among different ways to compute correction pressure \n FLIQUID_CorrectionPressure_Version                      ... \n FOFTLIQUID_AdditionalCorrectionLoops                             ... \n FOFTLIQUID_AdditionalCorrectionLoops                    ... \n FPM                                                              ...  Finite Pointset Method \n FPMDOCU                                                          ...  reference based documentation of the FPM code and FPM functionality \n FPMDOCU_AllInOne                                                 ...  compacting all FPMDOCU pages into one huge HTML-file, thus enabling to search for any string by CTRL+F \n FPMDOCU_Index                                                    ...  collection of all keywords used in FPMDOCU by their first letter \n FPMdevelopment                                                   \n ForbidContactToChambers                                 ...  NOT USED, but planned \n Functions                                                        ...  Standard math functions and FPM-specific functions \n\n\n\n\n", 
        "url": "../Index. F.html", 
        "id": 385, 
        "title": " F"
    }, 
    {
        "body": "\n\n%ind_divV_uw% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.GASDYN.%ind_divV_uw%.html", 
        "id": 386, 
        "title": "%ind_divV_uw%"
    }, 
    {
        "body": "\n\n%ind_div_bar% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.GASDYN.%ind_div_bar%.html", 
        "id": 387, 
        "title": "%ind_div_bar%"
    }, 
    {
        "body": "\n\n%ind_ent% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.GASDYN.%ind_ent%.html", 
        "id": 388, 
        "title": "%ind_ent%"
    }, 
    {
        "body": "\n\n%ind_eps% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.GASDYN.%ind_eps%.html", 
        "id": 389, 
        "title": "%ind_eps%"
    }, 
    {
        "body": "\n\n G\n\n\n GASDYN                                                           ...  Indices for the explicit (gasdynamics) solver \n GASDYN                                                           ...  Explicit solver of compressible flow phenomena \n GASDYN_CorrectEnergy                                             ... \n GASDYN_CorrectMass                                               ... \n GASDYN_T_gain                                                    ... \n GASDYN_T_loss                                                    ... \n GASDYN_p_gain                                                    ... \n GASDYN_p_loss                                                    ... \n GASDYN_r_gain                                                    ... \n GASDYN_r_loss                                                    ... \n GLOBAL_N_iterations                                              ... \n GLOBAL_eps_mass                                                  ... \n GLOBAL_eps_momentum                                              ... \n General                                                          \n GeneralRemarks                                                   \n GeneralYieldStress                                               ...  provide a genreal formulation/model of the yield stress \n General                                               ...  FPM indices for general simulation entities \n General                                               \n GenerateBubbleAtInflow                                  ... \n Geometry                                                         \n GeometryBased                                           ...  Exclude critical neighbors based on the given, triangulated geometry \n GeometryManipulations                                            ...  geometrical modifications of boundary elements files read \n GeometryRestrictions                                             \n\n\n\n\n", 
        "url": "../Index. G.html", 
        "id": 390, 
        "title": " G"
    }, 
    {
        "body": "\n\n%ind_r% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.SHALLOWWATER___indices___.%ind_r%.html", 
        "id": 391, 
        "title": "%ind_r%"
    }, 
    {
        "body": "\n\n%ind_v(1)% ...  velocity of water film, x-component, unit: m/s \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.SHALLOWWATER___indices___.%ind_v(1)%.html", 
        "id": 392, 
        "title": "%ind_v(1)%"
    }, 
    {
        "body": "\n\n%ind_v(2)% ...  velocity of water film, y-component, unit: m/s \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.SHALLOWWATER___indices___.%ind_v(2)%.html", 
        "id": 393, 
        "title": "%ind_v(2)%"
    }, 
    {
        "body": "\n\n%ind_v(3)% ...  velocity of water film, z-component, unit: m/s \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.SHALLOWWATER___indices___.%ind_v(3)%.html", 
        "id": 394, 
        "title": "%ind_v(3)%"
    }, 
    {
        "body": "\n\n%ind_v_3d(1)% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.SHALLOWWATER___indices___.%ind_v_3d(1)%.html", 
        "id": 395, 
        "title": "%ind_v_3d(1)%"
    }, 
    {
        "body": "\n\n%ind_v_3d(2)% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.SHALLOWWATER___indices___.%ind_v_3d(2)%.html", 
        "id": 396, 
        "title": "%ind_v_3d(2)%"
    }, 
    {
        "body": "\n\n%ind_v_3d(3)% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.SHALLOWWATER___indices___.%ind_v_3d(3)%.html", 
        "id": 397, 
        "title": "%ind_v_3d(3)%"
    }, 
    {
        "body": "\n\n%ind_v_uw(1)% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.SHALLOWWATER___indices___.%ind_v_uw(1)%.html", 
        "id": 398, 
        "title": "%ind_v_uw(1)%"
    }, 
    {
        "body": "\n\n%ind_v_uw(2)% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.SHALLOWWATER___indices___.%ind_v_uw(2)%.html", 
        "id": 399, 
        "title": "%ind_v_uw(2)%"
    }, 
    {
        "body": "\n\n%ind_v_uw(3)% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.SHALLOWWATER___indices___.%ind_v_uw(3)%.html", 
        "id": 400, 
        "title": "%ind_v_uw(3)%"
    }, 
    {
        "body": "\n\n%ind_vtang(1)% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.SHALLOWWATER___indices___.%ind_vtang(1)%.html", 
        "id": 401, 
        "title": "%ind_vtang(1)%"
    }, 
    {
        "body": "\n\n%ind_vtang(2)% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.SHALLOWWATER___indices___.%ind_vtang(2)%.html", 
        "id": 402, 
        "title": "%ind_vtang(2)%"
    }, 
    {
        "body": "\n\n%ind_vtang(3)% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.SHALLOWWATER___indices___.%ind_vtang(3)%.html", 
        "id": 403, 
        "title": "%ind_vtang(3)%"
    }, 
    {
        "body": "\n\n%ind_vtang_0(1)% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.SHALLOWWATER___indices___.%ind_vtang_0(1)%.html", 
        "id": 404, 
        "title": "%ind_vtang_0(1)%"
    }, 
    {
        "body": "\n\n%ind_vtang_0(2)% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.SHALLOWWATER___indices___.%ind_vtang_0(2)%.html", 
        "id": 405, 
        "title": "%ind_vtang_0(2)%"
    }, 
    {
        "body": "\n\n%ind_vtang_0(3)% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.SHALLOWWATER___indices___.%ind_vtang_0(3)%.html", 
        "id": 406, 
        "title": "%ind_vtang_0(3)%"
    }, 
    {
        "body": "\n\n%ind_gradP_uw(1)% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.GASDYN.%ind_gradP_uw(1)%.html", 
        "id": 407, 
        "title": "%ind_gradP_uw(1)%"
    }, 
    {
        "body": "\n\n%ind_gradP_uw(2)% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.GASDYN.%ind_gradP_uw(2)%.html", 
        "id": 408, 
        "title": "%ind_gradP_uw(2)%"
    }, 
    {
        "body": "\n\n%ind_gradP_uw(3)% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.GASDYN.%ind_gradP_uw(3)%.html", 
        "id": 409, 
        "title": "%ind_gradP_uw(3)%"
    }, 
    {
        "body": "\n\n%ind_p% ...  pressure given due to the gas law \n\n\n  for example   \n \n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.GASDYN.%ind_p%___GASDYN___.html", 
        "id": 410, 
        "title": "%ind_p%___GASDYN___"
    }, 
    {
        "body": "\n\n%ind_p_uw% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.GASDYN.%ind_p_uw%.html", 
        "id": 411, 
        "title": "%ind_p_uw%"
    }, 
    {
        "body": "\n\n%ind_rE_dot% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.GASDYN.%ind_rE_dot%.html", 
        "id": 412, 
        "title": "%ind_rE_dot%"
    }, 
    {
        "body": "\n\n%ind_rE_dot1% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.GASDYN.%ind_rE_dot1%.html", 
        "id": 413, 
        "title": "%ind_rE_dot1%"
    }, 
    {
        "body": "\n\n%ind_r_check% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.GASDYN.%ind_r_check%.html", 
        "id": 414, 
        "title": "%ind_r_check%"
    }, 
    {
        "body": "\n\n%ind_r_dot% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.GASDYN.%ind_r_dot%.html", 
        "id": 415, 
        "title": "%ind_r_dot%"
    }, 
    {
        "body": "\n\n%ind_r_dot1% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.GASDYN.%ind_r_dot1%.html", 
        "id": 416, 
        "title": "%ind_r_dot1%"
    }, 
    {
        "body": "\n\n%ind_r_sm% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.GASDYN.%ind_r_sm%.html", 
        "id": 417, 
        "title": "%ind_r_sm%"
    }, 
    {
        "body": "\n\n%ind_rv(1)% ...  momentum of the gas, x-component \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.GASDYN.%ind_rv(1)%.html", 
        "id": 418, 
        "title": "%ind_rv(1)%"
    }, 
    {
        "body": "\n\n%ind_rv(2)% ...  momentum of the gas, y-component \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.GASDYN.%ind_rv(2)%.html", 
        "id": 419, 
        "title": "%ind_rv(2)%"
    }, 
    {
        "body": "\n\n%ind_rv(3)% ...  momentum of the gas, z-component \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.GASDYN.%ind_rv(3)%.html", 
        "id": 420, 
        "title": "%ind_rv(3)%"
    }, 
    {
        "body": "\n\n%ind_rv_dot(1)% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.GASDYN.%ind_rv_dot(1)%.html", 
        "id": 421, 
        "title": "%ind_rv_dot(1)%"
    }, 
    {
        "body": "\n\n%ind_rv_dot(2)% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.GASDYN.%ind_rv_dot(2)%.html", 
        "id": 422, 
        "title": "%ind_rv_dot(2)%"
    }, 
    {
        "body": "\n\n%ind_rv_dot(3)% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.GASDYN.%ind_rv_dot(3)%.html", 
        "id": 423, 
        "title": "%ind_rv_dot(3)%"
    }, 
    {
        "body": "\n\n%ind_rv_dot1(1)% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.GASDYN.%ind_rv_dot1(1)%.html", 
        "id": 424, 
        "title": "%ind_rv_dot1(1)%"
    }, 
    {
        "body": "\n\n%ind_rv_dot1(2)% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.GASDYN.%ind_rv_dot1(2)%.html", 
        "id": 425, 
        "title": "%ind_rv_dot1(2)%"
    }, 
    {
        "body": "\n\n%ind_rv_dot1(3)% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.GASDYN.%ind_rv_dot1(3)%.html", 
        "id": 426, 
        "title": "%ind_rv_dot1(3)%"
    }, 
    {
        "body": "\n\n%ind_tauW% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.GASDYN.%ind_tauW%.html", 
        "id": 427, 
        "title": "%ind_tauW%"
    }, 
    {
        "body": "\n\n%ind_v(1)% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.GASDYN.%ind_v(1)%.html", 
        "id": 428, 
        "title": "%ind_v(1)%"
    }, 
    {
        "body": "\n\n%ind_v(2)% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.GASDYN.%ind_v(2)%.html", 
        "id": 429, 
        "title": "%ind_v(2)%"
    }, 
    {
        "body": "\n\n%ind_v(3)% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.GASDYN.%ind_v(3)%.html", 
        "id": 430, 
        "title": "%ind_v(3)%"
    }, 
    {
        "body": "\n\n%ind_v_uw(1)% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.GASDYN.%ind_v_uw(1)%.html", 
        "id": 431, 
        "title": "%ind_v_uw(1)%"
    }, 
    {
        "body": "\n\n%ind_v_uw(2)% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.GASDYN.%ind_v_uw(2)%.html", 
        "id": 432, 
        "title": "%ind_v_uw(2)%"
    }, 
    {
        "body": "\n\n%ind_v_uw(3)% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.GASDYN.%ind_v_uw(3)%.html", 
        "id": 433, 
        "title": "%ind_v_uw(3)%"
    }, 
    {
        "body": "\n\n%ind_x_dot(1)% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.GASDYN.%ind_x_dot(1)%.html", 
        "id": 434, 
        "title": "%ind_x_dot(1)%"
    }, 
    {
        "body": "\n\n%ind_x_dot(2)% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.GASDYN.%ind_x_dot(2)%.html", 
        "id": 435, 
        "title": "%ind_x_dot(2)%"
    }, 
    {
        "body": "\n\n%ind_x_dot(3)% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.GASDYN.%ind_x_dot(3)%.html", 
        "id": 436, 
        "title": "%ind_x_dot(3)%"
    }, 
    {
        "body": "\n\n%ind_x_dot1(1)% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.GASDYN.%ind_x_dot1(1)%.html", 
        "id": 437, 
        "title": "%ind_x_dot1(1)%"
    }, 
    {
        "body": "\n\n%ind_x_dot1(2)% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.GASDYN.%ind_x_dot1(2)%.html", 
        "id": 438, 
        "title": "%ind_x_dot1(2)%"
    }, 
    {
        "body": "\n\n%ind_x_dot1(3)% ...   \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPM.Indices.GASDYN.%ind_x_dot1(3)%.html", 
        "id": 439, 
        "title": "%ind_x_dot1(3)%"
    }, 
    {
        "body": "\n\nUSER_common_variables ...  main input file for defining all simulation data, boundary conditions, material parameters, geometrie, etc. \n\n\n\n\n\nList of members:\n\n\nALIAS  ...  alias defintions within a begin_alias-end_alias-block \nBoundaryConditions  ...  Prescribe physical boundary conditions for partitions of boundary \nBoundaryElements  ...  definition of the boundary elements to be used during simulation \nCODI  ...  solve additional COnvection-DIffusion-problems (CODI) \nCurves  ...  define curves in the input file \nEVENT  ...  events defined for the point cloud \nEquations  ...  define functions, equations, and algebraic expressions \nGeneralRemarks  ... GeneralRemarks\nINTEGRATION  ...  Integration of the simulation results \nLoops  ...  loop over a block lines in the input file \nMONITORPOINTS  ...  create monitor points due given conditions \nMOVE  ...  move parts of the boundary by explicit statement \nNumericalControl  ... NumericalControl\nPhysicalProperties  ...  define physical properties like density, viscosity, surface tension, \nRESTART  ... RESTART\nReadInPointCloud  ...  read in already existing point cloud from file \nSaving  ... Saving\nSelection  ...  Switch/Case-type selection statement \nSmoothingLength  ...  define the smoothing length by a set of commands \n__overview_of_syntax_elements__  ...  shows all possible syntax in USER_common_variables.dat \nequn  ...  define functions, equations, and algebraic expressions \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.html", 
        "id": 440, 
        "title": "USER_common_variables"
    }, 
    {
        "body": "\n\nALIAS ...  alias defintions within a begin_alias-end_alias-block \n\n\n  An alias block contains repleacement definitions, i.e. what a certain string occuring in USER_common_variables will \n  be replaced with. \n   \n  begin_alias{} \n    \"alias1\" = \" String to replace &alias1;& \"  \n      ... \n    \"aliasN\" = \" String to replace &aliasN;& \"  \n  end_alias \n   \n  If, during read-in of USER_common_variables, FPM encounters one of the text strings given in the alias block on the left hand side, \n  then they will by replaced by the string given on the right hand side. \n   \n  In order to exclude miss-interpretations, text strings to be replaced have to be put inbetween &...& icons. \n   \n  EXAMPLE: \n   \n  begin_alias{} \n    \"EqunForBC\" = \"[ Y%ind_x(1)%/Y%ind_h% * &Param;& ]\"  \n    \"Param\"     = \"23.452444 * &Scaling;& \"  \n    \"Scaling\"     = \"0.001 \"  \n  end_alias \n   \n  in USER_common_variables: \n  BC_T($TemCond$) = &EqunForBC;& \n   \n  will be replaced by: \n  BC_T($TemCond$) = [ Y%ind_x(1)%/Y%ind_h% * 23.452444 * 0.001 ] \n   \n  All names of geometry parts need to be assigned to special aliases (see AliasForGeometryItems). \n\n\n\n\nList of members:\n\n\nAliasForGeometryItems  ...  \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_alias_definitions.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.ALIAS.html", 
        "id": 441, 
        "title": "ALIAS"
    }, 
    {
        "body": "\n\nAliasForGeometryItems ...  \n\n\n   \n  All names of geometry parts need to be assigned to special aliases. \n   \n  There are multiple options to deal with the name of a geometry part: \n  1. Explicit assignment of properties to full names of geometry parts \n     a) Declare full properties as explained below. \n        Example:  \n       \"car\" = \" BC$BC_box$ ACTIVE$noinit_always$ IDENT%BND_slip% MAT$Mat1$ TOUCH%TOUCH_liquid% MOVE$MOVE_car$ LAYER0 CHAMBER1 \" \n         \n     b) Assign properties of another alias. \n        Example:  \n       \"windshield\" = \"&car;&\" \n         \n  2. Automatical choice of properties based on patterns \n     a) Similar to 1, but matching multiple names with a wildcard. In this case \n        each of the matched names is available in postprocessing. \n        Example:  \n       Names in geometry file: WheelFrontLeft, WheelFrontRight, WheelBackLeft, WheelBackRight \n   \n       In USER_common_variables.dat: \n       \"Wheel*\" = \"&car;&\" \n       \"*\" = \" BC$BC_box$ ACTIVE$noinit_always$ IDENT%BND_slip% MAT$Mat1$ TOUCH%TOUCH_liquid% MOVE$NO_MOVE$ LAYER0 CHAMBER1 \" \n         \n     b) Using default properties for any names not specified via the options above. All these \n        names will be replaced by 'default'. \n        Example:  \n       \"default\" = \"&car;&\" \n         \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_GIF_line.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.ALIAS.AliasForGeometryItems.html", 
        "id": 442, 
        "title": "AliasForGeometryItems"
    }, 
    {
        "body": "\n\nBoundaryConditions ...  Prescribe physical boundary conditions for partitions of boundary \n\n\n  In the alias section (AliasSection), all partitions of boundary are marked with the BC-flag: \n   \n   \n   begin_alias{} \n      \"BoundaryName\" = \" ...MOVE$MOVEindex$ ... BC$BCindex$  ... SMOOTH_LENGTH$Hindex$ ... \"  \n   end_alias \n   \n   \n  For this partition of boundary, boundary conditions for all relevant variables can be defined by \n   \n  BCON( $BCindex$ ,%ind_Var%) = (...) \n   \n\n\n\n\nList of members:\n\n\nBCON  ...  general setting of boundary conditions \nBCON_CNTCT  ...  general setting of boundary conditions \nBC_CNTFORCE  ...  force contact between phases \nBC_S  ...  Stress tensor boundary conditions \nBC_T  ...  Temperature boundary conditions \nBC_TearOffCriterion  ...  establish a tear-off criterion for release from walls \nBC_WettingAngle  ...  Define the contact angle between free surface\nBC_eps  ...  Turbulence-epsilon boundary conditions \nBC_k  ...  Turbulence-k boundary conditions \nBC_p  ...  Pressure boundary conditions \nBC_v  ...  Velocity boundary conditions \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_boundary_conditions_LIQUID_3.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryConditions.html", 
        "id": 443, 
        "title": "BoundaryConditions"
    }, 
    {
        "body": "\n\nBCON ...  general setting of boundary conditions \n\n\n  Set boundary conditions for any variable (see Indices) for which a partial differential equation (PDE) has to be solved. \n  The general syntax is \n   \n  BCON($BCflag$,%ind_Variable%) = RightHandSideExpression \n   \n  This is especially important in the framework of CODI. For all variables used in a CODI-environment, this boundary condition \n  feature is important and completes the setup of the PDE. \n   \n  CODI_D($MAT$,%ind_addvar(1)%) = 10000 \n  CODI_Q($MAT$,%ind_addvar(1)%) = 1 \n  BCON($BND1$,%ind_addvar(1)%) = (%BND_DIRICH%, 0 ) \n  BCON($BND2$,%ind_addvar(1)%) = (%BND_NEUMANN%, 0 ) \n   \n   \n  However, this is a general function. The convenience functions BC_ are shortcuts to BCON, such as \n  BC_v($BND$) -> BCON($BND$,%ind_v(1)%) \n  BC_p($BND$) -> BCON($BND$,%ind_p%) \n  BC_T($BND$) -> BCON($BND$,%ind_T%) \n  ... \n\n\n\n\nList of members:\n\n\n%ind_c%  ...  Correction pressure boundary conditions \n%ind_p_dyn%  ...  Dynamic Pressure boundary conditions \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_boundary_conditions_LIQUID_3.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryConditions.BCON.html", 
        "id": 444, 
        "title": "BCON"
    }, 
    {
        "body": "\n\n%ind_c% ...  Correction pressure boundary conditions \n\n\n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryConditions.BCON.%ind_c%___BCON___.html", 
        "id": 445, 
        "title": "%ind_c%___BCON___"
    }, 
    {
        "body": "\n\n%ind_p_dyn% ...  Dynamic Pressure boundary conditions \n\n\n   \n  BCON($BCindex$,%ind_p_dyn%) = ( %BND_slip% ) \n  BCON($BCindex$,%ind_p_dyn%) = ( %BND_wall% ) \n  BCON($BCindex$,%ind_p_dyn%) = ( %BND_wall_nosl% ) \n  BCON($BCindex$,%ind_p_dyn%) = ( %BND_NEUMANN%, Value ) \n  BCON($BCindex$,%ind_p_dyn%) = ( %BND_VONNEU%, Value )  # legacy only \n  BCON($BCindex$,%ind_p_dyn%) = ( %BND_DIRICH%, Value ) \n  BCON($BCindex$,%ind_p_dyn%) = ( %BND_free_implicit% ) \n  BCON($BCindex$,%ind_p_dyn%) = ( %BND_free% ) \n  BCON($BCindex$,%ind_p_dyn%) = ( %BND_AVERAGE% ) \n\n\n\n\nList of members:\n\n\n%BND_wall_nosl%  ...  Quasi-stationary dynamic pressure boundary condition \n%BND_wall%  ...  Quasi-stationary dynamic pressure boundary condition \n%BND_slip%  ...  Direct dynamic pressure boundary conditions \n%BND_free%  ...  Direct dynamic pressure boundary conditions at free surface \n%BND_free_implicit%  ...  Direct dynamic pressure boundary conditions at free surface \n%BND_free_implicit_InContact_explicit%  ...  Direct dynamic pressure boundary conditions at phase boundary \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_boundary_conditions_LIQUID_3.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryConditions.BCON.%ind_p_dyn%___BCON___.html", 
        "id": 446, 
        "title": "%ind_p_dyn%___BCON___"
    }, 
    {
        "body": "\n\n%BND_wall_nosl% ...  Quasi-stationary dynamic pressure boundary condition \n\n\n  We remember the BC defined in %BND_wall% \n  The term \n   \n  represents the centrifugal acceleration of a sliding particle along a curved wall. \n  So, this term is replaced by \n   \n  where the kappa is the local curvature of the geometry. \n   \n   \n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_boundary_conditions_LIQUID_3.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryConditions.BCON.%ind_p_dyn%___BCON___.%BND_wall_nosl%___BC_p_corr___.html", 
        "id": 447, 
        "title": "%BND_wall_nosl%___BC_p_corr___"
    }, 
    {
        "body": "\n\n%BND_wall% ...  Quasi-stationary dynamic pressure boundary condition \n\n\n   \n  BCON($BCindex$,%ind_p_dyn%) = ( %BND_wall% ) \n  BCON($BCindex$,%ind_p_dyn%) = ( %BND_wall%, RegularizationParameter ) \n   \n  The Regularization is a small value, something like 1.0e-4. In order to regularize the boundary condition, \n  the classical Neumann-type condition \n   \n  is turned into a Nusselt-type condition \n   \n  where h is the local smoothing length at the boundary particle. \n   \n   \n   \n  From the Momentum equation \n     \n  the boundary conditions can be derived by multiplying the boundary normal from left \n     \n  We assume quasi-stationary conditions. Moreover, since the BC for the hydrostatic part are already taken care of, \n  the remaining BC for dynamic pressure are \n     \n   \n  The numerical computation of the term \n   \n  is straight forward, as the velocity is already given. For the evalaution, we map to a system where the observer has speed of wall travel. \n   \n  which, written by differentiation in n,a,b-directions, is consequently \n   \n   \n         \n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_boundary_conditions_LIQUID_3.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryConditions.BCON.%ind_p_dyn%___BCON___.%BND_wall%___BC_p_corr___.html", 
        "id": 448, 
        "title": "%BND_wall%___BC_p_corr___"
    }, 
    {
        "body": "\n\n%BND_slip% ...  Direct dynamic pressure boundary conditions \n\n\n   \n  From the Momentum equation \n     \n  the boundary conditions can be derived by multiplying from left with the boundary normal \n     \n  Since the BC for the hydrostatic part are already taken care of, the remaining equation for dynamic pressure is \n     \n  which finally leads to \n     \n   \n  The term \n   can numerically be approximated by \n   \n   \n      \n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_boundary_conditions_LIQUID_3.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryConditions.BCON.%ind_p_dyn%___BCON___.%BND_slip%___BC_p_corr___.html", 
        "id": 449, 
        "title": "%BND_slip%___BC_p_corr___"
    }, 
    {
        "body": "\n\n%BND_free% ...  Direct dynamic pressure boundary conditions at free surface \n\n\n   \n  BCON($BCindex$,%ind_p_dyn%) = ( %BND_free% ) \n  BCON($BCindex$,%ind_p_dyn%) = ( %BND_free%, OuterDynamicPressure ) \n  BCON($BCindex$,%ind_p_dyn%) = ( %BND_free%, OuterDynamicPressure, RelaxationFactor ) \n   \n  Free surface condition. The pressure at the free surface is given by the dynamic, viscous stretch of the free surface. The general conditions is \n   \n  but again, the hydrostatic partition is already taken care of, such that the remaining part for the dynamic pressure is \n   \n   \n  If the realxation factor is used, we have the constraint \n   \n  This will only be applied, if the v-- solver is active for the present boundary particle \n   \n   \n   \n   \n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_boundary_conditions_LIQUID_3.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryConditions.BCON.%ind_p_dyn%___BCON___.%BND_free%___BC_p_corr___.html", 
        "id": 450, 
        "title": "%BND_free%___BC_p_corr___"
    }, 
    {
        "body": "\n\n%BND_free_implicit% ...  Direct dynamic pressure boundary conditions at free surface \n\n\n   \n  BCON($BCindex$,%ind_p_dyn%) = ( %BND_free_implicit% ) \n  BCON($BCindex$,%ind_p_dyn%) = ( %BND_free_implicit%, OuterDynamicPressure ) \n   \n  Free surface condition. The pressure at the free surface is given by the dynamic, viscous stretch of the free surface. The general conditions is \n   \n  but again, the hydrostatic partition is already taken care of, such that the remaining part for the dynamic pressure is \n   \n   \n  \n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_boundary_conditions_LIQUID_3.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryConditions.BCON.%ind_p_dyn%___BCON___.%BND_free_implicit%___BC_p_corr___.html", 
        "id": 451, 
        "title": "%BND_free_implicit%___BC_p_corr___"
    }, 
    {
        "body": "\n\n%BND_free_implicit_InContact_explicit% ...  Direct dynamic pressure boundary conditions at phase boundary \n\n\n   \n  BCON($BCindex$,%ind_p_dyn%) = ( %BND_free_implicit_InContact_Explicit% ) \n   \n  Pressure condition on phase boundaries. \n   \n   \n \n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_boundary_conditions_LIQUID_3.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryConditions.BCON.%ind_p_dyn%___BCON___.%BND_free_implicit_InContact_explicit%___BC_p_corr___.html", 
        "id": 452, 
        "title": "%BND_free_implicit_InContact_explicit%___BC_p_corr___"
    }, 
    {
        "body": "\n\nBCON_CNTCT ...  general setting of boundary conditions \n\n\n  This feature rules the contact conditions (interphase conditions) between contacting phases. \n  The general syntax is \n   \n  BCON_CNTCT($BCflag$,%ind_Variable%) = RightHandSideExpression \n   \n  Contact can appear between regular boundaries of two chambers or free surface points of two chambers. \n  Contact cannot appear between a free surface point of one chamber with a regular boundary point of another chamber. \n  Contact is detected only if \n\n\n\n\nList of members:\n\n\n%ind_v(1)%  ...  Velocity boundary conditions at interfaces \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_boundary_conditions_LIQUID_3.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryConditions.BCON_CNTCT.html", 
        "id": 453, 
        "title": "BCON_CNTCT"
    }, 
    {
        "body": "\n\n%ind_v(1)% ...  Velocity boundary conditions at interfaces \n\n\n  BCON_CNTCT($BCindex$,%ind_v(1)%) = ( %BND_ \n\n\n\n\nList of members:\n\n\n%BND_slip_InContact%  ...  Velocity boundary conditions at interfaces, implicit \n%BND_slip_InContact_Explicit%  ...  Velocity boundary conditions at interfaces, explicit \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_boundary_conditions_LIQUID_3.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryConditions.BCON_CNTCT.%ind_v(1)%___BCON_CNTCT___.html", 
        "id": 454, 
        "title": "%ind_v(1)%___BCON_CNTCT___"
    }, 
    {
        "body": "\n\n%BND_slip_InContact% ...  Velocity boundary conditions at interfaces, implicit \n\n\n  The opposite phase is seen as (moving) wall, along which a slip conditin is realized. In all other aspects, this boundary condition is very similar to %BND_slip%. \n   \n  BCON_CNTCT($BCindex$,%ind_v(1)%) = ( %BND_slip_InContact%, FrictionCoefficient, ControlThicknessMomentum ) \n   \n  FrictionCoefficient:      viscous friction in the sense \n                             \n                            Here, alpha is the FrictionCoefficient, alpha=0 would lead to pure slip, alpha => infinity would lead to pure no-slip. \n                            If the turbulence model is in action, the effective friction coefficient is given by \n                             where  \n                             is the local velocity of the opposite phase (contact phase) at the current time level. \n  ControlThicknessMomentum: Incorporation of the momentum balance into the boundary condition, especially important for big Re-numbers. \n                            The thickness of the momentum control cell is ControlThicknessMomentum*H (smoothing length) \n   \n   \n    \n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_boundary_conditions_LIQUID_3.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryConditions.BCON_CNTCT.%ind_v(1)%___BCON_CNTCT___.%BND_slip_InContact%___CNTCT_v___.html", 
        "id": 455, 
        "title": "%BND_slip_InContact%___CNTCT_v___"
    }, 
    {
        "body": "\n\n%BND_slip_InContact_Explicit% ...  Velocity boundary conditions at interfaces, explicit \n\n\n  The opposite phase is seen as (moving) wall, along which a slip conditin is realized. \n   \n  BCON_CNTCT($BCindex$,%ind_v(1)%) = ( %BND_slip_InContact_Explicit%, FrictionCoefficient, ControlThicknessMomentum ) \n   \n  FrictionCoefficient:      viscous friction in the sense \n                             \n                            Here, alpha is the FrictionCoefficient, alpha=0 would lead to pure slip, alpha => infinity would lead to pure no-slip. \n                            If the turbulence model is in action, the effective friction coefficient is given by \n                             where  \n                             is the local velocity of the opposite phase (contact phase) at the current time level. \n  ControlThicknessMomentum: Incorporation of the momentum balance into the boundary condition, especially important for big Re-numbers. \n                            The thickness of the momentum control cell is ControlThicknessMomentum*H (smoothing length) \n   \n   \n    \n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_boundary_conditions_LIQUID_3.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryConditions.BCON_CNTCT.%ind_v(1)%___BCON_CNTCT___.%BND_slip_InContact_Explicit%___CNTCT_v___.html", 
        "id": 456, 
        "title": "%BND_slip_InContact_Explicit%___CNTCT_v___"
    }, 
    {
        "body": "\n\nBC_CNTFORCE ...  force contact between phases \n\n\n   \n  BC_CNTFORCE($BCindex$) = 1.0 \n   \n  default: BC_CNTFORCE($BCindex$) = 0.0 \n   \n  Force the contact \n   \n   \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Core/PointcloudOrganization/ORGANIZE/ORGANIZE_OppositePointPriority.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryConditions.BC_CNTFORCE.html", 
        "id": 457, 
        "title": "BC_CNTFORCE"
    }, 
    {
        "body": "\n\nBC_S ...  Stress tensor boundary conditions \n\n\n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryConditions.BC_S.html", 
        "id": 458, 
        "title": "BC_S"
    }, 
    {
        "body": "\n\nBC_T ...  Temperature boundary conditions \n\n\n   \n  BC_T($xyz$) = ( %BND_inflow%  , inflow boundary condition) \n  BC_T($xyz$) = ( %BND_outflow% , outflow boundary condition) \n   \n   \n   \n  BC_T($xyz$) = ( %BND_ROBIN%   , alpha, T_opp) \n  BC_T($xyz$) = ( %BND_CAUCHY%  , alpha, T_opp)        # see %BND_ROBIN% \n   \n   \n   \n\n\n\n\nList of members:\n\n\n%BND_ROBIN%  ...  Robin boundary condition \n%BND_CAUCHY%  ...  Cauchy boundary condition \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_boundary_conditions_LIQUID_3.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryConditions.BC_T.html", 
        "id": 459, 
        "title": "BC_T"
    }, 
    {
        "body": "\n\n%BND_ROBIN% ...  Robin boundary condition \n\n\n  In general, a Robin boundary condition is a linear combination of a Dirichlet boundary condition (%BND_DIRICH%) \n  and a Neumann boundary condition (%BND_NEUMANN%) of the form \n     \n   \n  For the temperature T, this can be used to describe how the convective heat flux across the \n  boundary/interface depends on the difference between the temperature of the material at the \n  boundary/interface and the temperature on the opposite side \n     \n  where lambda is the heat conductivity of the material, alpha is a proportionality coefficient \n  for the convective heat flux across the boundary/interface and T_opp is the temperature \n  on the opposite side. \n   \n  Usage: \n   \n  BC_T($xyz$)  = (%BND_ROBIN%, alpha, T_opp) \n   \n   \n  Example: \n   \n  BC_T($wall$) = (%BND_ROBIN%, 10.0, 500.0) \n   \n   \n  Note: This type of boundary condition is sometimes known as 'Cauchy boundary condition', but the name is ambiguous. \n  For backward compatibility, the flag %BND_CAUCHY% has the same effect as %BND_ROBIN% . \n    \n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_boundary_conditions_LIQUID_3.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryConditions.BC_T.%BND_ROBIN%___BC_T___.html", 
        "id": 460, 
        "title": "%BND_ROBIN%___BC_T___"
    }, 
    {
        "body": "\n\n%BND_CAUCHY% ...  Cauchy boundary condition \n\n\n  See %BND_ROBIN% . \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_boundary_conditions_LIQUID_3.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryConditions.BC_T.%BND_CAUCHY%___BC_T___.html", 
        "id": 461, 
        "title": "%BND_CAUCHY%___BC_T___"
    }, 
    {
        "body": "\n\nBC_TearOffCriterion ...  establish a tear-off criterion for release from walls \n\n\n   \n   \n  BC_TearOffCriterion($BC_name$) = ( Expression1, Experssion2, ... ) \n   \n   \n  An FPM-particle, attached to a wall, can be released from the wall and turned into a free surface particle, \n  if all the given expressions on the right hand side are positive. The expressions are of \n  the form RightHandSideExpression, the typical standard. \n   \n  $BC_name$ is the boundary-condition-flag to be given in the ALIAS definition of the boundary, i.e. \n   \n  begin_alias{} \n   \"AliasName\" = \" ... BC$BC_name$ ... \"  \n  end_alias \n   \n  Example: \n   \n  BC_TearOffCriterion($wall$) = ( [(Y%ind_TearOff%-0.5)] ,  equn{$EQN_TearOff$} ) \n   \n  begin_equation{$EQN_TearOff$} \n  (-7)*Y%ind_p_dyn%/Y%ind_r% - (Y%ind_v(1)%-Y%ind_v_p(1)%)^2 - (Y%ind_v(2)%-Y%ind_v_p(2)%)^2 - (Y%ind_v(3)%-Y%ind_v_p(3)%)^2 - 1000.0/Y%ind_r% # threshold \n  end_equation \n   \n  This criterion stems from the theoretical ansatz given  here  \n  The last term \"1000.0/Y%ind_r%\" is a threshold of 1000 Pa in order to avoid release of wall particles due to numerical noises. \n  The condition \"[(Y%ind_TearOff%-0.5)]\" chooses only those boundary particles which are adjacent to a free surface. \n   \n  The tear off criterion also works for free surface particles that are in contact with other phases. \n  In this case, if the tear-off expressions are positive, the contact to the other phase is canceled, \n  i.e. the index of opposite particle (value in %ind_iopp%) is set to zero. \n   \n  Also see the %ind_TearOff% variable. \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_TearOffCriterion.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryConditions.BC_TearOffCriterion.html", 
        "id": 462, 
        "title": "BC_TearOffCriterion"
    }, 
    {
        "body": "\n\nBC_WettingAngle ...  Define the contact angle between free surface\n\n\n   \n  BC_WettingAngle($BCindex$) = ( WettingAngle_in_radiants ) \n   \n  The contact angle is defined between the solid wall and the free surface as shown in the picture below: \n   \n   \n  The angle is to be given in radiants, i.e. a value of  (180 degrees) leads to absolutely hydrophobic (water-repellent) behavior. \n  A value of 0 leads to absolutely hydrophilic behavior of the liquid material towards the wall. \n \n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_WettingAngle.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryConditions.BC_WettingAngle.html", 
        "id": 463, 
        "title": "BC_WettingAngle"
    }, 
    {
        "body": "\n\nBC_eps ...  Turbulence-epsilon boundary conditions \n\n\n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryConditions.BC_eps.html", 
        "id": 464, 
        "title": "BC_eps"
    }, 
    {
        "body": "\n\nBC_k ...  Turbulence-k boundary conditions \n\n\n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryConditions.BC_k.html", 
        "id": 465, 
        "title": "BC_k"
    }, 
    {
        "body": "\n\nBC_p ...  Pressure boundary conditions \n\n\n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryConditions.BC_p.html", 
        "id": 466, 
        "title": "BC_p"
    }, 
    {
        "body": "\n\nBC_v ...  Velocity boundary conditions \n\n\n   \n  BC_v($BCindex$) = ( %BND_inflow%, v_n, v_a, v_b ) \n  BC_v($BCindex$) = ( %BND_wall%, Parameter ) \n  BC_v($BCindex$) = ( %BND_wall_nosl% ) \n  BC_v($BCindex$) = ( %BND_slip%, FrictionCoefficient, ControlThicknessMomentum, vPenetration, uBoundary, vBoundary, wBoundary ) \n  BC_v($BCindex$) = ( %BCON_Vdot%, Vdot_n, Vdot_a, Vdot_b, BubbleVdot, BubbleRadius, FileNumber ) \n   \n   \n  Also the syntax  \n  BCON($BCindex$,%ind_v(1)%) = ( ... ) \n   is possible. \n   \n  references to CODI and CODI_min_max \n   \n\n\n\n\nList of members:\n\n\n%BND_slip%  ...  Velocity boundary conditions: slip with viscous friction \n%BND_wall%  ...  Velocity boundary conditions: pure slip \n%BND_wall_nosl%  ...  Velocity boundary conditions: pure noslip \n%BCON_Vdot%  ...  Velocity boundary conditions based on the volume flux \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_boundary_conditions_LIQUID_3.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryConditions.BC_v.html", 
        "id": 467, 
        "title": "BC_v"
    }, 
    {
        "body": "\n\n%BND_slip% ...  Velocity boundary conditions: slip with viscous friction \n\n\n   \n  BC_v($BCindex$) = ( %BND_slip%, FrictionCoefficient, ControlThicknessMomentum, vPenetration, uBoundary, vBoundary, wBoundary ) \n   \n   \n  FrictionCoefficient:      viscous friction in the sense \n                             \n                            Here, alpha is the FrictionCoefficient, alpha=0 would lead to pure slip, alpha=> infinity would lead to pure no-slip. \n                            If the turbulence model is in action, the effective friction coefficient is given by \n                             where  \n  ControlThicknessMomentum: Incorporation of the momentum balance into the boundary condition, especially important for big Re-numbers. \n                            The thickness of the momentum control cell is ControlThicknessMomentum*H (smoothing length) \n                             For current scientific reasons: by putting a  minus  in front of ControlThicknessMomentum, a special tear-off criterion \n                            is launched. In fact, an additional component is locally added to the gradient of pressure in tangential direction, if \n                              - the point is marked as tear-off-point (see %ind_TearOff%) \n                              - the point is in a local suction regime (pressure decreases from the free surface towards the interior \n                            This additional pressure component might provoke tear-off, as it forces the tear-off-point to move away from the free surface  \n  vPenetration:             Force the normal component of the flow to penetrate through the wall, i.e. \n                             \n  {u,v,w}Boundary:          Usually, FPM checks the appropriate wall and applies the movement of this wall as the basis wall velocity \n                             \n                            Optionally, the user is able to define the velocity on their own, in fact {u,v,w}Boundary define the components of the velocity of the wall movement. \n   \n   \n   \n     \n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_boundary_conditions_LIQUID_3.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryConditions.BC_v.%BND_slip%___BC_v___.html", 
        "id": 468, 
        "title": "%BND_slip%___BC_v___"
    }, 
    {
        "body": "\n\n%BND_wall% ...  Velocity boundary conditions: pure slip \n\n\n   \n  BC_v($BCindex$) = ( %BND_wall% ) \n   \n  FPM determines the velocity of the boundary element the particle is attached to. \n  This velocity is a Drichlet condition on the normal component of the velocity and a Neumann condition on the tangential components. \n  As an option, we can set \n   \n  BC_v($BCindex$) = ( %BND_wall%, 1 ) \n   \n  In this case, FPM tries to interpolate the velocities from the neighborhood of the given particle from the previous time step. \n  The advantage is here, that in this case only Dirichlet conditions are set forth to the velocity (much better conditioning of the linear system). \n  The disadvantage is, that it is an explicit boundary condition within an implicit numerical framework. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_boundary_conditions_LIQUID_3.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryConditions.BC_v.%BND_wall%___BC_v___.html", 
        "id": 469, 
        "title": "%BND_wall%___BC_v___"
    }, 
    {
        "body": "\n\n%BND_wall_nosl% ...  Velocity boundary conditions: pure noslip \n\n\n   \n  BC_v($BCindex$) = ( %BND_wall_nosl% ) \n   \n  FPM determines the velocity of the boundary element the particle is attached to. \n  This velocity is prescribed as a Drichlet boundary condition to the FPM point. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_boundary_conditions_LIQUID_3.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryConditions.BC_v.%BND_wall_nosl%___BC_v___.html", 
        "id": 470, 
        "title": "%BND_wall_nosl%___BC_v___"
    }, 
    {
        "body": "\n\n%BCON_Vdot% ...  Velocity boundary conditions based on the volume flux \n\n\n   \n  BC_v($BCindex$) = ( %BCON_Vdot%, Vdot_n, Vdot_a, Vdot_b, BubbleVdot, BubbleRadius, FileNumber ) \n   \n  BCON_Vdot computes the velocity inflow conditions based on the given volume fluxes in normal direction of the boundary element -Vdot_n- and \n  in the tangential directions of the boundary element -Vdot_a and Vdot_b-. The parameters Vdot_n, Vdot_a and Vdot_b are obligatory.  If the \n  parameters BubbleVdot and BubbleRadius are given, the bubbly inflow algorithms is being activated with a fractional (!) bubble volume flux \n  VdotBubble and the expected bubble radius RadiusBubble. The algorithm will create bubbles at random positions at the boundary element with a \n  random size with expectation value RadiusBubble. \n  The positions and sizes are saved in the files BUBBLYINFLOW_Centers00000.dat BUBBLYINFLOW_Areas00000.dat in the result folder. \n  If in addition the last parameter FileNumber is given, FPM expects the files BUBBLYINFLOW_CentersFileNumber.dat and BUBBLYINFLOW_AreasFilenumber.dat to be present \n  at the path where FPM is executed and reads sizes and positions from those files instead of creating them by random. The files have to named \n  according to the following convention: \n  FileNumber=0  BUBBLYINFLOW_Centers00000.dat BUBBLYINFLOW_Areas00000.dat; \n  FileNumber=10 BUBBLYINFLOW_Centers00010.dat, BUBBLYINFLOW_Areas00010.dat etc ... \n\n\n\n\nThis item is referenced in:\n\n\nBC_v  ...  Velocity boundary conditions \n%BCON_Vdot%  ...  Velocity boundary conditions based on the volume flux \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_boundary_conditions_LIQUID_3.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryConditions.BC_v.%BCON_Vdot%___BC_v___.html", 
        "id": 471, 
        "title": "%BCON_Vdot%___BC_v___"
    }, 
    {
        "body": "\n\nBoundaryElements ...  definition of the boundary elements to be used during simulation \n\n\n   \n  The boundary element section is embedded in the following structure \n   \n  begin_boundary_elements{} \n  ... \n  end_boundary_elements \n   \n   \n  First, there is the option to read in geometry files by the include clause ( include{File} ). \n  Second, additionally define points, planes, lines, triangles, and simple bodies like cylinders and cubes (PlainBoundaryElements). \n   \n  Sometimes, it is also necessary to make GeometryManipulations dependent on previsously read or defined boundary elements. \n  With the ConstructClause, there is the chance to construct scalars or vectors that can be used to manipulate geometries. \n  In that aspect, it is necessary to keep a certain sequence: read in a subset of files, establish a sequence of the ConstructClause items, \n  apply the results of the ConstructClause items in a subsequent read-of-file. I.e. \n   \n   \n  begin_boundary_elements{} \n     ... \n     include{FileNameA}                             # contains (at least) geometry part \"inflow\" \n     ... \n  end_boundary_elements \n   \n  begin_construct{} \n     \"xMeanInflow\" = CONSTRUCT( %CONSTRUCT_BoxMidPoint%, 0.5, \"inflow\" ) \n  end_construct \n   \n  begin_boundary_elements{} \n     ... \n     include{FileNameB} offset{&xMeanInflow;&}       # contains other geometry parts \n     ... \n  end_boundary_elements \n   \n   \n  Note: begin_boundary_elements and begin_construct blocks are read sequentially. \n  Geometry parts used in a construct statement need to be defined beforehand. \n\n\n\n\nList of members:\n\n\ninclude{File}  ...  definition a geometry file to be read by FPM \nCuttingCurveCluster  ...  define clusters of boundary elements by cutting the geometry along given curves \nmanipulate{Alias}  ...  manipulate (move, rotate, ...) the geometry belonging to an alias-group \ndelete{Alias}  ...  delete all the geometry belonging to a given alias-group \nCreateBEfromGeometry  ...  from the already existing geometry, create new boundary elements such as BND_point \nConstructClause  ...  Mathematical construction of scalars and vectors \nplainBoundaryElements  ...  definition a geometry file to be read by FPM \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_BE_definitions.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryElements.html", 
        "id": 472, 
        "title": "BoundaryElements"
    }, 
    {
        "body": "\n\ninclude{File} ...  definition a geometry file to be read by FPM \n\n\n   \n  Reading a geometry file is done in the following way \n   \n  begin_boundary_elements{} \n     ... \n     include{FileName} \n     ... \n  end_boundary_elements \n   \n  No need to put the file name in double quotes (\"). \n   \n  A geometry file usually provides a set of node points as well as a set of topological connections of the node points \n  in order to create triangles, quads, but also points and lines. \n  Currently, FPM supports PAMCRASH, STL, MSH, OBJ, FDNEUT, NASTRAN formats. \n   \n   \n  IGES is supported as well, right now there is no standard way to use this format. \n  FPM has a special implementation in order to mesh the surface given by IGES, \n  i.e. construct six-node-triangles and generate a FDNEUT-file out of it. \n  There is an additional feature working only for IGES: defining multiple geometry files separated by \"|\", i.e. \n  #frame \n  include{FileName1|Filename2|...|...} \n  frame# \n  This is possible only if the remeshing of the boundary is switched on by COMP_RemeshBoundary = 1. In this case, \n  each IGES-file is processed and remeshed sequentially. \n   \n   \n  Sometimes, it is necessary to geometrically modify the geometry entities. That can be done by \n  #frame \n  begin_boundary_elements{} \n     ... \n     include{FileName}    GeometryManipulations   GeometryRestrictions   exportGeometry{} \n     ... \n  end_boundary_elements \n  frame# \n   \n  The categories GeometryManipulations, GeometryRestrictions, exportGeometry{} are not compulsory. None, a choice of them, or even all \n  of them in the same statement/line are accepted. \n   \n   \n   \n   \n   \n\n\n\n\nList of members:\n\n\nGeometryManipulations  ...  geometrical modifications of boundary elements files read \nGeometryRestrictions  ... GeometryRestrictions\nexportGeometry{}  ...  export the actually imported geometry file in STL or OBJ format \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_boundary_file.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryElements.include{File}.html", 
        "id": 473, 
        "title": "include{File}"
    }, 
    {
        "body": "\n\nGeometryManipulations ...  geometrical modifications of boundary elements files read \n\n\n   \n  Sometimes, it is necessary to geometrically modify the geoemtry entities. That can be done by \n   \n  begin_boundary_elements{} \n     ... \n     include{FileName}    GeometryManipulations \n     ... \n  end_boundary_elements \n   \n   \n  GeometryManipulations can be a list. It will be executed in the order as they appear. \n  Actions like scale, offset etc. can even be repeatedly be applied. \n   \n  Example: \n   \n  begin_boundary_elements{} \n     ... \n     include{FileName}    scale{...} offset{...} scale{...} rotate{...} offset{...} \n     ... \n  end_boundary_elements \n   \n   \n  The geometry manipulations are applied to the node points. The topology connections describing the elements are not touched. \n   \n   \n\n\n\n\nList of members:\n\n\nremoveCluster{}  ...  removes cluster(s) of the current geometry subset due to given conditions \nscale{}  ...  scale some geometry about the origin \noffset{}  ...  shift the given geometry by a vector \nrotate{}  ...  rotate the given geometry about a point with a rotation axis and angle \nmirror{}  ...  Generalised mirroring across a plane \nreorientation{}  ...  reorientation (inside/outside) of the geometry during read-in \nduplicate{}  ...   \nturn_6nodeTriangles_into_3NodeTriangles{}  ...   \nrevOrient{}  ...   \napplyAlias{}  ...   \nthickenexp{}  ...   \nthickenabs{}  ...   \nremoveOuterShell{}  ...   \nremoveTinyClusters{}  ...   \nremoveIsolatedClusters{}  ...   \nsymmetryfaceByCluster{}  ...  automatic distribution of SYMMETRYFACE-flags to geometry components \nlayerByCluster{}  ...   \nremoveTJunctions{}  ...   \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_BE_definitions_PerformActionSequenceToNP_V2.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryElements.include{File}.GeometryManipulations.html", 
        "id": 474, 
        "title": "GeometryManipulations"
    }, 
    {
        "body": "\n\nremoveCluster{} ...  removes cluster(s) of the current geometry subset due to given conditions \n\n\n   \n  manipulate{\"Alias1\", ..., \"AliasN\"} removeCluster{ %GEO_RemoveClusterByIndex%_GEO, iIndex } \n  manipulate{\"Alias1\", ..., \"AliasN\"} removeCluster{ %GEO_RemoveClusterClosestToGivenPoint%_GEO, x, y, z } \n   \n\n\n\n\nList of members:\n\n\n%GEO_RemoveClusterByIndex%_GEO  ... %GEO_RemoveClusterByIndex%_GEO\n%GEO_RemoveClusterClosestToGivenPoint%_GEO  ... %GEO_RemoveClusterClosestToGivenPoint%_GEO\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Core/BoundaryElementOrganization/BE_RemoveClusterByGivenConditions.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryElements.include{File}.GeometryManipulations.removeCluster{}.html", 
        "id": 475, 
        "title": "removeCluster{}"
    }, 
    {
        "body": "\n\n%GEO_RemoveClusterByIndex%_GEO\n\n\n   \n   \n  manipulate{\"Alias1\", ..., \"AliasN\"} removeCluster{ %GEO_RemoveClusterByIndex%_GEO, iIndex} \n   \n  remove the cluster with the index iIndex. This function is difficult to use, as FPM distributes the cluster indices automatically in the order as it finds them. \n  So, the way to use is to \n  - first let the simulation run with the SimCut functionality \n  - by postprocessing, check the cluster index FPM has given to the particular partitions of the geometry \n  - add the statement in the frame above to the end of the inpuit file, i.e. add the lines \n    begin_boundary_elements{} \n       mamipulate{\"Alias1\", ..., \"AliasN\"} removeCluster{ %GEO_RemoveClusterByIndex%_GEO, iIndex} \n    end_boundary_elements \n  where iIndex is now the dedicated cluster index found. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Core/BoundaryElementOrganization/BE_RemoveClusterByGivenConditions.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryElements.include{File}.GeometryManipulations.removeCluster{}.%GEO_RemoveClusterByIndex%_GEO.html", 
        "id": 476, 
        "title": "%GEO_RemoveClusterByIndex%_GEO"
    }, 
    {
        "body": "\n\n%GEO_RemoveClusterClosestToGivenPoint%_GEO\n\n\n   \n   \n  manipulate{\"Alias1\", ..., \"AliasN\"} removeCluster{ %GEO_RemoveClusterClosestToGivenPoint%_GEO, x, y, z} \n   \n  remove the cluster which is closest to the point with the coordinates (x,y,z). \n   OPTION IS NOT ACTIVE YET!!!  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Core/BoundaryElementOrganization/BE_RemoveClusterByGivenConditions.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryElements.include{File}.GeometryManipulations.removeCluster{}.%GEO_RemoveClusterClosestToGivenPoint%_GEO.html", 
        "id": 477, 
        "title": "%GEO_RemoveClusterClosestToGivenPoint%_GEO"
    }, 
    {
        "body": "\n\nscale{} ...  scale some geometry about the origin \n\n\n  The geometry is scaled about the origin. Either a global factor is given, that scales the geometry evenly in all main directions, \n  or three factors are given, representing the stretching in the three main directions (x,y,z). \n   \n  include{File} ... scale{Factor} ... \n   \n  OR \n   \n  include{File} ... scale{Factor_x, Factor_y, Factor_z} ... \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_BE_definitions_PerformActionSequenceToNP_V2.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryElements.include{File}.GeometryManipulations.scale{}.html", 
        "id": 478, 
        "title": "scale{}"
    }, 
    {
        "body": "\n\noffset{} ...  shift the given geometry by a vector \n\n\n  The geometry is shifted by the given vector (shift_x, shift_y, shift_z,  OPTIONAL: ShiftDistance  ). \n   \n  include{File} ... offset{shift_x, shift_y, shift_z} ... \n   \n   \n   If the optional parameter  ShiftDistance  is given, then the vector  (shift_x, shift_y, shift_z)  only \n  represents the shifting direction, into which the object is shifted by the given distance  ShiftDistance . \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_BE_definitions_PerformActionSequenceToNP_V2.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryElements.include{File}.GeometryManipulations.offset{}.html", 
        "id": 479, 
        "title": "offset{}"
    }, 
    {
        "body": "\n\nrotate{} ...  rotate the given geometry about a point with a rotation axis and angle \n\n\n  The geometry is rotated about the point (O_x, O_y, O_z) with the rotation vector (Phi_x, Phi_y, Phi_z). \n   \n  include{File} ... rotate{O_x, O_y, O_z, Phi_x, Phi_y, Phi_z,  OPTIONAL: RotationAngle  } ... \n   \n  The vector (Phi_x,Phi_y,Phi_z) provides the rotation axis, if  RotationAngle  is NOT given, then \n  the length of the vector (Phi_x,Phi_y,Phi_z) provides the angle of rotation in radians. \n   \n   If RotationAngle is given, then the length of (Phi_x,Phi_y,Phi_z) does not play any role. FPM will (internally) normalize \n  this vector and apply the rotation angle given in the optional variable RotationAngle. \n   \n  WARNING: of course, if the length of the vector (Phi_x,Phi_y,Phi_z) provided is zero, no rotation can be effected. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_BE_definitions_PerformActionSequenceToNP_V2.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryElements.include{File}.GeometryManipulations.rotate{}.html", 
        "id": 480, 
        "title": "rotate{}"
    }, 
    {
        "body": "\n\nmirror{} ...  Generalised mirroring across a plane \n\n\n  Given a point (X,Y,Z) and a unit normal (NormalX, NormalY, NormalZ) \n  or a normal (NormalX, NormalY, NormalZ) that is scaled to length 1, \n  this operation mirrors the geometry across the plane through (X,Y,Z), \n  perpendicular to its normal (NormalX, NormalY, NormalZ). \n   \n  include{File} ... mirror{X,Y,Z, NormalX, NormalY, NormalZ,  OPTIONAL: NormalLength  } ... \n   \n   \n  Examples: \n   \n  include{File} ... mirror{0,0,0, 1,0,0} ... \n  include{File} ... mirror{1.5,2.0,0.5, 1,1,1, 1.0 } ... \n   \n   \n  The generalized behaviour for non-unit length  of the normal \n  would move each node  of the geometry to . \n   \n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_BE_definitions_PerformActionSequenceToNP_V2.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryElements.include{File}.GeometryManipulations.mirror{}.html", 
        "id": 481, 
        "title": "mirror{}"
    }, 
    {
        "body": "\n\nreorientation{} ...  reorientation (inside/outside) of the geometry during read-in \n\n\n   \n\n\n\n\nList of members:\n\n\n%GEO_Vector%  ...  geoemtry reorientation based on a given vector \n%GEO_Tube%  ...  reorient a part of the geometry in the tube sense \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_BE_definitions_PerformActionSequenceToNP_V2.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryElements.include{File}.GeometryManipulations.reorientation{}.html", 
        "id": 482, 
        "title": "reorientation{}"
    }, 
    {
        "body": "\n\n%GEO_Vector% ...  geoemtry reorientation based on a given vector \n\n\n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_BE_definitions_PerformActionSequenceToNP_V2.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryElements.include{File}.GeometryManipulations.reorientation{}.%GEO_Vector%.html", 
        "id": 483, 
        "title": "%GEO_Vector%"
    }, 
    {
        "body": "\n\n%GEO_Tube% ...  reorient a part of the geometry in the tube sense \n\n\n   \n  begin_boundary_elements{} \n    include{FileName}, ..., reorientation{ %GEO_Tube%, %GEO_Inside%  [, optional: RatioForInteralParts]  ) \n    include{FileName}, ..., reorientation{ %GEO_Tube%, %GEO_Outside%  [, optional: RatioForInteralParts]  ) \n  end_boundary_elements \n   \n  The geometrical part should topologically be connected, i.e. triangles share the same nodes in order to provide geometrical connectivity. \n   \n  The inside/outside orientation definition is given in the following sense: \n  1.) define the normal direction of the i-th triangle formed by the points  in the sense \n   \n  where the area of the triangle is \n   \n   \n  2.) define an infinitessimal displacement of the j-th node point by \n   \n   \n   \n   \n  3.) The geometry is inside oriented, if \n   \n   \n  4.)  RatioForInteralParts : If the geometry is a closed chamber (such as a tank) that contains internal parts, then these parts will be oriented in the opposite direction, \n  however only if thse parts fulfill the criterion \n   \n        \n\n\n\nList of members:\n\n\n%GEO_Inside%  ...  re-orient (parts of) geometry towards its inside \n%GEO_Outside%  ...  re-orient (parts of) geometry towards its outside \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_BE_definitions_PerformActionSequenceToNP_V2.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryElements.include{File}.GeometryManipulations.reorientation{}.%GEO_Tube%.html", 
        "id": 484, 
        "title": "%GEO_Tube%"
    }, 
    {
        "body": "", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryElements.include{File}.GeometryManipulations.reorientation{}.%GEO_Tube%.%GEO_Inside%___tube___.html", 
        "id": 485, 
        "title": "%GEO_Inside%___tube___"
    }, 
    {
        "body": "", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryElements.include{File}.GeometryManipulations.reorientation{}.%GEO_Tube%.%GEO_Outside%___tube___.html", 
        "id": 486, 
        "title": "%GEO_Outside%___tube___"
    }, 
    {
        "body": "\n\nduplicate{} ...   \n\n\n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_BE_definitions_PerformActionSequenceToNP_V2.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryElements.include{File}.GeometryManipulations.duplicate{}.html", 
        "id": 487, 
        "title": "duplicate{}"
    }, 
    {
        "body": "\n\nturn_6nodeTriangles_into_3NodeTriangles{} ...   \n\n\n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_BE_definitions_PerformActionSequenceToNP_V2.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryElements.include{File}.GeometryManipulations.turn_6nodeTriangles_into_3NodeTriangles{}.html", 
        "id": 488, 
        "title": "turn_6nodeTriangles_into_3NodeTriangles{}"
    }, 
    {
        "body": "\n\nrevOrient{} ...   \n\n\n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_BE_definitions_PerformActionSequenceToNP_V2.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryElements.include{File}.GeometryManipulations.revOrient{}.html", 
        "id": 489, 
        "title": "revOrient{}"
    }, 
    {
        "body": "\n\napplyAlias{} ...   \n\n\n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_BE_definitions_PerformActionSequenceToNP_V2.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryElements.include{File}.GeometryManipulations.applyAlias{}.html", 
        "id": 490, 
        "title": "applyAlias{}"
    }, 
    {
        "body": "\n\nthickenexp{} ...   \n\n\n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_BE_definitions_PerformActionSequenceToNP_V2.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryElements.include{File}.GeometryManipulations.thickenexp{}.html", 
        "id": 491, 
        "title": "thickenexp{}"
    }, 
    {
        "body": "\n\nthickenabs{} ...   \n\n\n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_BE_definitions_PerformActionSequenceToNP_V2.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryElements.include{File}.GeometryManipulations.thickenabs{}.html", 
        "id": 492, 
        "title": "thickenabs{}"
    }, 
    {
        "body": "\n\nremoveOuterShell{} ...   \n\n\n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_BE_definitions_PerformActionSequenceToNP_V2.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryElements.include{File}.GeometryManipulations.removeOuterShell{}.html", 
        "id": 493, 
        "title": "removeOuterShell{}"
    }, 
    {
        "body": "\n\nremoveTinyClusters{} ...   \n\n\n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_BE_definitions_PerformActionSequenceToNP_V2.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryElements.include{File}.GeometryManipulations.removeTinyClusters{}.html", 
        "id": 494, 
        "title": "removeTinyClusters{}"
    }, 
    {
        "body": "\n\nremoveIsolatedClusters{} ...   \n\n\n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_BE_definitions_PerformActionSequenceToNP_V2.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryElements.include{File}.GeometryManipulations.removeIsolatedClusters{}.html", 
        "id": 495, 
        "title": "removeIsolatedClusters{}"
    }, 
    {
        "body": "\n\nsymmetryfaceByCluster{} ...  automatic distribution of SYMMETRYFACE-flags to geometry components \n\n\n   \n   \n  begin_boundary_elements{} \n    include{FileName}, ..., symmetryfaceByCluster{} \n  end_boundary_elements \n   \n  The geometry partc might contain separated components or clusters. FPM fill set set the SYMMETRYFACE-flag (see ALIAS) \n  by the automatically given cluster indices. It will overwritew all cluster flags provided by the ALIAS-constraints. \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_BE_definitions_PerformActionSequenceToNP_V2.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryElements.include{File}.GeometryManipulations.symmetryfaceByCluster{}.html", 
        "id": 496, 
        "title": "symmetryfaceByCluster{}"
    }, 
    {
        "body": "\n\nlayerByCluster{} ...   \n\n\n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_BE_definitions_PerformActionSequenceToNP_V2.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryElements.include{File}.GeometryManipulations.layerByCluster{}.html", 
        "id": 497, 
        "title": "layerByCluster{}"
    }, 
    {
        "body": "\n\nremoveTJunctions{} ...   \n\n\n   \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_BE_definitions_PerformActionSequenceToNP_V2.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryElements.include{File}.GeometryManipulations.removeTJunctions{}.html", 
        "id": 498, 
        "title": "removeTJunctions{}"
    }, 
    {
        "body": "\n\nGeometryRestrictions\n\n\n\n\n\nList of members:\n\n\nonly{}  ...  read onle elements of a given alias from file \nignore{}  ...  ignore listed aliases from a geometry file \nsloppy{}  ...  do not stop program if geometry file contains an undefined alias \n\n\n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryElements.include{File}.GeometryRestrictions.html", 
        "id": 499, 
        "title": "GeometryRestrictions"
    }, 
    {
        "body": "\n\nonly{} ...  read onle elements of a given alias from file \n\n\n  Read only the boundary elements from FileName, if they belong to one of the given alias names. \n   \n  begin_boundary_elements{} \n     ... \n     include{FileName}  only{\"alias1\", \"alias2\", ...} \n     ... \n  end_boundary_elements \n   \n   \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_BE_definitions.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryElements.include{File}.GeometryRestrictions.only{}.html", 
        "id": 500, 
        "title": "only{}"
    }, 
    {
        "body": "\n\nignore{} ...  ignore listed aliases from a geometry file \n\n\n   \n  Do not read a boundary element from file, if it belongs to one of the given alias names. \n   \n  begin_boundary_elements{} \n     ... \n     include{FileName}  ignore{\"alias1\", \"alias2\", ...} \n     ... \n  end_boundary_elements \n   \n   \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_BE_definitions.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryElements.include{File}.GeometryRestrictions.ignore{}.html", 
        "id": 501, 
        "title": "ignore{}"
    }, 
    {
        "body": "\n\nsloppy{} ...  do not stop program if geometry file contains an undefined alias \n\n\n   \n   \n  begin_boundary_elements{} \n     ... \n     include{FileName}  ... sloppy{} ... \n     ... \n  end_boundary_elements \n   \n  sloppy{} avoids that the program stops execution if some of the alias given in the file does not exist. \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_BE_definitions.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryElements.include{File}.GeometryRestrictions.sloppy{}.html", 
        "id": 502, 
        "title": "sloppy{}"
    }, 
    {
        "body": "\n\nexportGeometry{} ...  export the actually imported geometry file in STL or OBJ format \n\n\n  Export the currently read geometry in STL or OBJ format. These format can be directly visualized by paraview. \n  Export is done either before or aftzer GeometryManipulations are executed, or both. \n   \n  begin_boundary_elements{} \n     ... \n     include{FileName}  ... exportGeometry{ARGUMENTS} ... \n     ... \n  end_boundary_elements \n   \n   \n  ARGUMENTS can be one or a subset of \n  OBJ: export in obj format \n  STL: export in stl format \n  BEFORE or BeforeGeometryTransformations: export the goemetry exactly as discribed in the original file FileName. \n  AFTER or AfterGeometryTransformations: export the geometry after all manipulations have been executed. \n   \n  Example: \n   \n  begin_boundary_elements{} \n     ... \n     include{FileName}  ... exportGeometry{STL, BEFORE, AFTER} ... \n     ... \n  end_boundary_elements \n   \n   \n  Exports the geometry before and after the GeometryManipulations have been taken effect. In this way, most preferably \n  together with the option CONTROL_StopAfterReadingGeometry , one is able to quick-check the consistence of the GeometryManipulations. \n   \n  Currently, also the keyword exportFile{...} works in the same way as exportGeometry{}. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_BE_definitions.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryElements.include{File}.exportGeometry{}.html", 
        "id": 503, 
        "title": "exportGeometry{}"
    }, 
    {
        "body": "\n\nCuttingCurveCluster ...  define clusters of boundary elements by cutting the geometry along given curves \n\n\n  To cut the boundary geometry by cutting curves given in the IGES file FileName \n  and to determine the CuttingCurveCluster IDs, use \n   \n  include_CCC_curves{FileName} \n   \n   \n  The IDs can then be used, for example in Equations and INTEGRATION statements, \n  via the functions CID() and isCID(), such as \n   \n  SAVE_ITEM  = ( %SAVE_scalar%, [CID(0)], \"CCCID\" ) \n   \n   \n  See below for further optional parameters that can be set. \n\n\n\n\nList of members:\n\n\ninclude_CCC_curves  ...  define the geometry file containing cutting curves for clustering \nCCC_maxSegmentLength  ...  maximum segment length for linearization of cutting curves (optional) \nCCC_minNewEdgeLength  ...  minimum absolute length for new triangle edges (optional) \nCCC_relativeEdgeLength  ...  minimum relative length for new triangle edges (optional) \nCCC_CuttingDistance  ...  distance up to which boundary element nodes are considered to lie on a cutting curve (optional) \nCCC_clusterAllTriangles  ...  flag whether or not to determine clusters without given starting points (optional) \nCCC_seeds  ...  seeds  starting points for CuttingCurveCluster (optional) \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/CuttingCurves/CuttingCurves_ClusterByCuttingCurves.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryElements.CuttingCurveCluster.html", 
        "id": 504, 
        "title": "CuttingCurveCluster"
    }, 
    {
        "body": "\n\ninclude_CCC_curves ...  define the geometry file containing cutting curves for clustering \n\n\n  To add the geometry file containing cutting curves and determine the CuttingCurveCluster IDs, use \n   \n  include_CCC_curves{FileName} \n   \n  So far, only a single IGES file can be included. Non-curve elements in the file will be ignored. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/CuttingCurves/InOutput/USER_ScanCCC_Curves.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryElements.CuttingCurveCluster.include_CCC_curves.html", 
        "id": 505, 
        "title": "include_CCC_curves"
    }, 
    {
        "body": "\n\nCCC_maxSegmentLength ...  maximum segment length for linearization of cutting curves (optional) \n\n\n  Set this parameter to define the maximum segment length for the linearization of the cutting curves \n  used for CuttingCurveCluster. \n  Example: \n   \n  CCC_maxSegmentLength = 0.01 \n   \n  This parameter is optional. If it is not given or if the value is not greater than zero, \n  a default will be computed from the characteristics of the geometry triangulization. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/CuttingCurves/InOutput/USER_ScanCCC_Other.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryElements.CuttingCurveCluster.CCC_maxSegmentLength.html", 
        "id": 506, 
        "title": "CCC_maxSegmentLength"
    }, 
    {
        "body": "\n\nCODI ...  solve additional COnvection-DIffusion-problems (CODI) \n\n\n  Suppose there is a scalar item PHI and there exists an FPM-index for PHI, such as %ind_PHI% \n  The general type of equations to be solved is \n   \n   \n   \n  In USER_common_variables.dat, the definition would look like \n   \n  CODI_Vimplicit($Material$,%ind_PHI%) = (vImp_x, vImp_y, vImp_z) \n  CODI_V($Material$,%ind_PHI%)         = (v_x, v_y, v_z) \n  CODI_A($Material$,%ind_PHI%)         = A \n  CODI_rho($Material$,%ind_PHI%)       = rho \n  CODI_D($Material$,%ind_PHI%)         = D \n  CODI_Q($Material$,%ind_PHI%)         = Q \n   \n   \n  These items are optional. Therefore, for instance by the reduced set \n   \n  CODI_A($Material$,%ind_PHI%)         = A \n  CODI_Q($Material$,%ind_PHI%)         = Q \n   \n  one would be able to solve an ODE for each particle of the form  \n   \n  In order to assure some minimum and maximum conditions, one is able to restrict the solution to PHI by \n   \n  CODI_min_max ($Material$,%ind_PHI%)   = (min_PHI, max_PHI,  OPTIONAL: allowed_slope_PHI  ) \n   \n  FPM-simply cuts the solution of PHI after solving the differential equation. \n  If the allowd_slope_PHI is given, then the solution is adapted such that \n  allowd_slope_PHI, naturally, has to be positive. \n   \n  Besides differential equations, one can also just assign a value to PHI by an algebraic equation \n   \n  CODI_eq($Material$,%ind_PHI%)         = RightHandSideExpression \n   \n   \n  Usually, one does not want to provide additional PDE for items like velocity, pressure etc. \n  because they are already solved by FPM in the most efficient way. In order to construct a new, \n  additional variable, one would use the %ind_addvar% index. \n   \n  See also CODI_min_max and CODI_min_max_RejectLinearSolution \n   \n\n\n\nList of members:\n\n\nCODI_min_max  ...  set lower and upper bound for any FPM-variable \nCODI_min_max_RejectLinearSolution  ...  rejection of the solution of a sparse linear system if minimum-maximum criteria are not fulfilled \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/GT_CoDi.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.CODI.html", 
        "id": 507, 
        "title": "CODI"
    }, 
    {
        "body": "\n\nCCC_minNewEdgeLength ...  minimum absolute length for new triangle edges (optional) \n\n\n  Set this parameter to define minimum length for new triangle edges when cutting the geometry \n  along cutting curves to determine CuttingCurveCluster. \n  Example: \n   \n  CCC_minNewEdgeLength = 0.001 \n   \n  This parameter is optional. If it is not given or if the value is not greater than zero, \n  a default will be computed from the characteristics of the geometry triangulization. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/CuttingCurves/InOutput/USER_ScanCCC_Other.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryElements.CuttingCurveCluster.CCC_minNewEdgeLength.html", 
        "id": 508, 
        "title": "CCC_minNewEdgeLength"
    }, 
    {
        "body": "\n\nCCC_relativeEdgeLength ...  minimum relative length for new triangle edges (optional) \n\n\n  Set this parameter to a minimum relative tolerance (between 0 and 0.5) for cutting triangle edges \n  when cutting the geometry along cutting curves to determine CuttingCurveCluster. \n   \n  Example: \n   \n  CCC_minNewEdgeLength = 0.1 \n   \n  An edge will not be cut if either of the new edges would be shorter than \n  . \n  If it is not given or if the value is not greater than zero, a default value will be set. \n \n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/CuttingCurves/InOutput/USER_ScanCCC_Other.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryElements.CuttingCurveCluster.CCC_relativeEdgeLength.html", 
        "id": 509, 
        "title": "CCC_relativeEdgeLength"
    }, 
    {
        "body": "\n\nCCC_CuttingDistance ...  distance up to which boundary element nodes are considered to lie on a cutting curve (optional) \n\n\n  This parameter is used to determine initial CuttingCurveCluster, which are then increased up to the cutting curves. \n  In some cases, changing this value can improve the accuracy of the clustering algorithm. \n   \n  Example: \n   \n  CCC_CuttingDistance = 2.0 \n   \n  If it is not given or if the value is not greater than zero, a default value will be computed \n  from the characteristics of the geometry triangulization and cutting curve linearization. \n   \n  If the clustering algorithm detects that several cluster starting points define the same cluster, \n  then it will automatically try to make them unique by increasing this parameter. \n   \n  See also CCC_seeds. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/CuttingCurves/InOutput/USER_ScanCCC_Other.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryElements.CuttingCurveCluster.CCC_CuttingDistance.html", 
        "id": 510, 
        "title": "CCC_CuttingDistance"
    }, 
    {
        "body": "\n\nCCC_clusterAllTriangles ...  flag whether or not to determine clusters without given starting points (optional) \n\n\n  If set to true, all boundary triangles will be assigned to clusters, irrespective of whether or not \n  that cluster can be reached from any of the CCC_seeds. \n   \n  Examples: \n   \n  CCC_clusterAllTriangles = 0 \n  CCC_clusterAllTriangles = 1 \n   \n  If it is not given or if the value is invalid, the following defaults will be used: \n    - 0 if at least one cluster starting point is given, \n    - 1 if no cluster starting point is given. \n   \n  See also CCC_seeds. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/CuttingCurves/InOutput/USER_ScanCCC_Other.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryElements.CuttingCurveCluster.CCC_clusterAllTriangles.html", 
        "id": 511, 
        "title": "CCC_clusterAllTriangles"
    }, 
    {
        "body": "\n\nCCC_seeds ...  seeds  starting points for CuttingCurveCluster (optional) \n\n\n  Seeds are points near boundary elements or rays pointing into the geometry \n  that are used to assign certain IDs to specific CuttingCurveCluster, \n  so that these clusters can be addressed in integration statements. \n   \n  The cluster IDs are defined in the order in which the different \n  types of CCC_seeds appear in USER_common_variables.dat. \n   \n  The different ways in which seeds can be defined are given below. \n   \n  See also CCC_clusterAllTriangles. \n\n\n\n\nList of members:\n\n\nbegin_CCC_seeds2D  ...  add 2D seeds for CuttingCurveCluster (optional) \nbegin_CCC_seeds3D  ...  add 3D seeds for CuttingCurveCluster (optional) \nbegin_CCC_seeds6D  ...  add 6D seeds for CuttingCurveCluster (optional) \ninclude_CCC_seeds2D  ...  include 2D seeds for CuttingCurveCluster from file (optional) \ninclude_CCC_seeds3D  ...  include 3D seeds for CuttingCurveCluster from file (optional) \ninclude_CCC_seeds6D  ...  include 6D seeds for CuttingCurveCluster from file (optional) \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/CuttingCurves/InOutput/USER_ScanCCC_Other.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryElements.CuttingCurveCluster.CCC_seeds.html", 
        "id": 512, 
        "title": "CCC_seeds"
    }, 
    {
        "body": "\n\nbegin_CCC_seeds2D ...  add 2D seeds for CuttingCurveCluster (optional) \n\n\n  Seeds are used to specify the IDs of certain CuttingCurveCluster. \n  A 2D seed defines a point on a 2D plane at one face of the box \n  enveloping the cutting curves. \n   \n   \n  begin_CCC_seeds2D{dim, end} \n    x  y \n    ... \n  end_CCC_seeds2D{} \n   \n   \n  The parameter dim is an integer (1,2,3) which determines the dimension \n  held constant in the plane. The parameter end is either 'min' or 'max' \n  and determines whether the minimal or maximal value of the enclosing \n  box for that dimension is supposed to be used. \n   \n  The first triangle that is hit by the ray starting in the determined point \n  and directed perpendicular to the plane into the box is used to seed the cluster. \n   \n  Example: \n   \n  begin_CCC_seeds2D{3, min} \n    1.0      2.0 \n  end_CCC_seeds2D{} \n  begin_CCC_seeds2D{1, max} \n    10.0     0.0 \n  end_CCC_seeds2D{} \n   \n   \n  The cluster IDs are defined in the order in which the different \n  types of CCC_seeds appear in USER_common_variables.dat. \n   \n  See also CCC_seeds. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/CuttingCurves/InOutput/USER_ScanCCC_Other.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryElements.CuttingCurveCluster.CCC_seeds.begin_CCC_seeds2D.html", 
        "id": 513, 
        "title": "begin_CCC_seeds2D"
    }, 
    {
        "body": "\n\nbegin_CCC_seeds3D ...  add 3D seeds for CuttingCurveCluster (optional) \n\n\n  Seeds are used to specify the IDs of certain CuttingCurveCluster. \n  A 3D seed defines a point in the coordinate system of the cutting curves. \n   \n   \n  begin_CCC_seeds3D{} \n    x  y  z \n    ... \n  end_CCC_seeds3D{} \n   \n   \n  The nearest boundary triangle to the point (x,y,z) is used to build the cluster. \n   \n  The cluster IDs are defined in the order in which the different \n  types of CCC_seeds appear in USER_common_variables.dat. \n   \n  See also CCC_seeds. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/CuttingCurves/InOutput/USER_ScanCCC_Other.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryElements.CuttingCurveCluster.CCC_seeds.begin_CCC_seeds3D.html", 
        "id": 514, 
        "title": "begin_CCC_seeds3D"
    }, 
    {
        "body": "\n\nbegin_CCC_seeds6D ...  add 6D seeds for CuttingCurveCluster (optional) \n\n\n  Seeds are used to specify the IDs of certain CuttingCurveCluster. \n  A 6D seed defines a point and a direction from that point towards the geometry \n  in the coordinate system of the cutting curves. \n   \n   \n  begin_CCC_seeds6D{} \n    x  y  z  dx dy dz \n    ... \n  end_CCC_seeds6D{} \n   \n   \n  The first triangle that is hit by the ray starting in point (x,y,z) \n  and going into direction (dx,dy,dz) is used to build the cluster. \n   \n  The cluster IDs are defined in the order in which the different \n  types of CCC_seeds appear in USER_common_variables.dat. \n   \n  See also CCC_seeds. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/CuttingCurves/InOutput/USER_ScanCCC_Other.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryElements.CuttingCurveCluster.CCC_seeds.begin_CCC_seeds6D.html", 
        "id": 515, 
        "title": "begin_CCC_seeds6D"
    }, 
    {
        "body": "\n\ninclude_CCC_seeds2D ...  include 2D seeds for CuttingCurveCluster from file (optional) \n\n\n  The command \n   \n  include_CCC_seeds2D{dim, end, FileName} \n   \n  is equivalent to \n   \n  begin_CCC_seeds2D{dim, end} \n    [contents of file FileName] \n  end_CCC_seeds2D{} \n   \n  See also CCC_seeds. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/CuttingCurves/InOutput/USER_ScanCCC_Other.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryElements.CuttingCurveCluster.CCC_seeds.include_CCC_seeds2D.html", 
        "id": 516, 
        "title": "include_CCC_seeds2D"
    }, 
    {
        "body": "\n\ninclude_CCC_seeds3D ...  include 3D seeds for CuttingCurveCluster from file (optional) \n\n\n  The command \n   \n  include_CCC_seeds3D{FileName} \n   \n  is equivalent to \n   \n  begin_CCC_seeds3D{} \n    [contents of file FileName] \n  end_CCC_seeds3D{} \n   \n  See also CCC_seeds. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/CuttingCurves/InOutput/USER_ScanCCC_Other.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryElements.CuttingCurveCluster.CCC_seeds.include_CCC_seeds3D.html", 
        "id": 517, 
        "title": "include_CCC_seeds3D"
    }, 
    {
        "body": "\n\ninclude_CCC_seeds6D ...  include 6D seeds for CuttingCurveCluster from file (optional) \n\n\n  The command \n   \n  include_CCC_seeds6D{FileName} \n   \n  is equivalent to \n   \n  begin_CCC_seeds6D{} \n    [contents of file FileName] \n  end_CCC_seeds6D{} \n   \n  See also CCC_seeds. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/CuttingCurves/InOutput/USER_ScanCCC_Other.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryElements.CuttingCurveCluster.CCC_seeds.include_CCC_seeds6D.html", 
        "id": 518, 
        "title": "include_CCC_seeds6D"
    }, 
    {
        "body": "\n\nmanipulate{Alias} ...  manipulate (move, rotate, ...) the geometry belonging to an alias-group \n\n\n   \n  begin_boundary_elements{} \n     ... \n     manipulate{\"Alias1\",\"Alias2\",\"Alias3\",...}  ListOfGeometryManipulations  \n     ... \n  end_boundary_elements \n   \n   \n  The  ListOfGeometryManipulations  might contain all valid elements from GeometryManipulations . \n   \n  The working schedule of FPM with respect to the boundary elements is sequential, manipulation can be done only if the appropriate \n  geometry elements will have been read in from file. Consider the following situation: \n   \n  begin_alias{} \n    \"AliasA\" = \" ...\" \n  end_alias \n  begin_boundary_elements{} \n     manipulate{\"AliasA\"} offset{1,1,0} rotate{0,0,0,3.14,0,0} \n     include{File1Containing_AliasA_} \n  end_boundary_elements \n   \n   \n  This is the wrong order, correct it bould be \n   \n   \n  begin_alias{} \n    \"AliasA\" = \" ...\" \n  end_alias \n  begin_boundary_elements{} \n     include{File1Containing_AliasA_} \n     manipulate{\"AliasA\"} offset{1,1,0} rotate{0,0,0,3.14,0,0} \n  end_boundary_elements \n   \n   \n  The true advantage comes in together with the construct statement (ConstructClause) \n   \n  begin_alias{} \n \"AliasA\" = \" ...\" \n  end_alias \n   \n  begin_boundary_elements{} \n     include{File1Containing_AliasA_}                                                               # read in geometry  \n  end_boundary_elements \n   \n  begin_construct{} \n     \"xMidPoint\" = CONSTRUCT( %CONSTRUCT_BoxMidPoint%, 0.5, \"AliasA\" )                              # determine the mid point of the geometry  \n  end_construct \n   \n  begin_boundary_elements{} \n     manipulate{\"AliasA\"} rotate{ &xMidPoint;(1)& , &xMidPoint;(2)&, &xMidPoint;(3)&, 2.1, 3.3, 0.1}   # rotate about the mid point of the geometry  \n  end_boundary_elements \n   \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_BE_definitions.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryElements.manipulate{Alias}.html", 
        "id": 519, 
        "title": "manipulate{Alias}"
    }, 
    {
        "body": "\n\ndelete{Alias} ...  delete all the geometry belonging to a given alias-group \n\n\n   \n  begin_boundary_elements{} \n     ... \n     delete{\"Alias1\",\"Alias2\",\"Alias3\",...} \n     ... \n  end_boundary_elements \n   \n  All geometry elements who belong to the given alias \"Alias1\",\"Alias2\",\"Alias3\" will be deleted, and the program will try to shring the boundary element arrays, if possible. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_BE_definitions.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryElements.delete{Alias}.html", 
        "id": 520, 
        "title": "delete{Alias}"
    }, 
    {
        "body": "\n\nCreateBEfromGeometry ...  from the already existing geometry, create new boundary elements such as BND_point \n\n\n  With the create statement, one is able to create new boundary elements from already existing geometry. \n   \n  A create statement has to embedded in the boundary element environment, i.e. \n   \n  begin_boundary_elements{} \n     ... \n      CreateStatement comes here  \n     ... \n  end_boundary_elements \n   \n\n\n\n\nList of members:\n\n\nBNDpoints_ExtractFromNodes{}  ...  create BND_points from existing geometry nodes \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_CreateBEfromGeometry.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryElements.CreateBEfromGeometry.html", 
        "id": 521, 
        "title": "CreateBEfromGeometry"
    }, 
    {
        "body": "\n\nBNDpoints_ExtractFromNodes{} ...  create BND_points from existing geometry nodes \n\n\n   \n   \n  begin_boundary_elements{} \n     ... \n     BNDpoints_ExtractFromNodes{ [Eqn], \"AliasTheNewPointsAreSupposedToTake\", \"FirstAliasOfGeometryTheNodesAreTakenFrom\", \"SecondAliasOfGeometryTheNodesAreTakenFrom\", ... } \n     ... \n  end_boundary_elements \n   \n   \n  FPM goes through all existing boundary elements whose alias is ohne of the given \"FirstAliasOfGeometryTheNodesAreTakenFrom\", \"SecondAliasOfGeometryTheNodesAreTakenFrom\", ... \n  From their nodes, new elements of BND_point are created, who take the alias \"AliasTheNewPointsAreSupposedToTake\". The aliases have to exist, i.e. in the current example, \n  there need to be \n   \n  begin_alias{} \n     ... \n     \"AliasTheNewPointsAreSupposedToTake\" = \" ... \" \n     \"FirstAliasOfGeometryTheNodesAreTakenFrom\" = \" ... \" \n     \"SecondAliasOfGeometryTheNodesAreTakenFrom\" = \" ... \" \n     ... \n  end_alias \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_CreateBEfromGeometry.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryElements.CreateBEfromGeometry.BNDpoints_ExtractFromNodes{}.html", 
        "id": 522, 
        "title": "BNDpoints_ExtractFromNodes{}"
    }, 
    {
        "body": "\n\nConstructClause ...  Mathematical construction of scalars and vectors \n\n\n  One can directly construct offset, scaling, rotation etc. entities by a construct statement. \n   \n  begin_boundary_elements{} \n     include{FileName} offset{ CONSTRUCT(%CONSTRUCT_...%, , , , ) } \n  end_boundary_elements \n   \n   \n  If the construct result is to be used at several occasions, it is worthwhile putting it into a construct environment \n   \n  begin_construct{} \n     \"xMeanInflow\" = CONSTRUCT( %CONSTRUCT_...%, , , , ) \n  end_construct \n   \n   \n  Note: begin_boundary_elements and begin_construct blocks are read sequentially. \n  Geometry parts used in a construct statement need to be defined beforehand. \n\n\n\n\nList of members:\n\n\n%CONSTRUCT_Area%  ...  \n%CONSTRUCT_BoxMax%  ...  \n%CONSTRUCT_BoxMidPoint%  ...  mid point of enclosing box around given alias-entities \n%CONSTRUCT_BoxMidPoint_Abs%  ...  \n%CONSTRUCT_BoxMin%  ...  \n%CONSTRUCT_COG%  ...  \n%CONSTRUCT_EstablishCurveVolumeVersusHeight%  ...  establish a 2-row-curve that provides the height-volume-relation of a closed part of geometry \n%CONSTRUCT_Normal%  ...  \n%CONSTRUCT_NormalDividedByArea%  ...  \n%CONSTRUCT_PointBasedOnAbsoluteVolume%  ...  \n%CONSTRUCT_PointBasedOnRelativeVolume%  ...  \n%CONSTRUCT_Tangent1%  ...  \n%CONSTRUCT_Tangent2%  ...  \n%CONSTRUCT_Volume%  ...  \n%CONSTRUCT_VolumeForGivenHeight%  ...  compute the volume of a closed body restricted by a certain height \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_parse_Construct.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryElements.ConstructClause.html", 
        "id": 523, 
        "title": "ConstructClause"
    }, 
    {
        "body": "\n\n%CONSTRUCT_Area% ...  \n\n\n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_parse_Construct.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryElements.ConstructClause.%CONSTRUCT_Area%.html", 
        "id": 524, 
        "title": "%CONSTRUCT_Area%"
    }, 
    {
        "body": "\n\n%CONSTRUCT_BoxMax% ...  \n\n\n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_parse_Construct.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryElements.ConstructClause.%CONSTRUCT_BoxMax%.html", 
        "id": 525, 
        "title": "%CONSTRUCT_BoxMax%"
    }, 
    {
        "body": "\n\n%CONSTRUCT_BoxMidPoint% ...  mid point of enclosing box around given alias-entities \n\n\n   \n  CONSTRUCT( %CONSTRUCT_BoxMidPoint%, RelativePosition, \"alias1\", \"alias2\", ... ) \n   \n   \n  Constructs an enclosing box around the geometry elements belonging to the given list of aliases. \n   \n  Setting RelativePosition=0 will return the lower left corner of this box. \n  Setting RelativePosition=1 will return the upper right corner of this box. \n  Setting RelativePosition=0.5 will return the box mid point. \n   \n  Any value is allowed for RelativePosition. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_parse_Construct.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryElements.ConstructClause.%CONSTRUCT_BoxMidPoint%.html", 
        "id": 526, 
        "title": "%CONSTRUCT_BoxMidPoint%"
    }, 
    {
        "body": "\n\n%CONSTRUCT_BoxMidPoint_Abs% ...  \n\n\n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_parse_Construct.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryElements.ConstructClause.%CONSTRUCT_BoxMidPoint_Abs%.html", 
        "id": 527, 
        "title": "%CONSTRUCT_BoxMidPoint_Abs%"
    }, 
    {
        "body": "\n\n%CONSTRUCT_BoxMin% ...  \n\n\n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_parse_Construct.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryElements.ConstructClause.%CONSTRUCT_BoxMin%.html", 
        "id": 528, 
        "title": "%CONSTRUCT_BoxMin%"
    }, 
    {
        "body": "\n\n%CONSTRUCT_COG% ...  \n\n\n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_parse_Construct.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryElements.ConstructClause.%CONSTRUCT_COG%.html", 
        "id": 529, 
        "title": "%CONSTRUCT_COG%"
    }, 
    {
        "body": "\n\n%CONSTRUCT_EstablishCurveVolumeVersusHeight% ...  establish a 2-row-curve that provides the height-volume-relation of a closed part of geometry \n\n\n   \n  begin_construct{} \n     \"Curve\" = CONSTRUCT( %CONSTRUCT_EstablishCurveVolumeVersusHeight%, nRef_x, nRef_y, nRef_z, pRef_x, pRef_y, pRef_z, nTicks, \"Alias1\", \"Alias2\", ...) \n  end_construct \n   \n  begin_curve{\"CurveName\"} \n     &Curve;& \n  end_curve \n   \n  The text item \"Curve\" is really a curve, i.e. it will constain carriage-return and line-feed characters, such that it can be used in a curve definition \n  without problems \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_parse_Construct.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryElements.ConstructClause.%CONSTRUCT_EstablishCurveVolumeVersusHeight%.html", 
        "id": 530, 
        "title": "%CONSTRUCT_EstablishCurveVolumeVersusHeight%"
    }, 
    {
        "body": "\n\n%CONSTRUCT_Normal% ...  \n\n\n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_parse_Construct.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryElements.ConstructClause.%CONSTRUCT_Normal%.html", 
        "id": 531, 
        "title": "%CONSTRUCT_Normal%"
    }, 
    {
        "body": "\n\n%CONSTRUCT_NormalDividedByArea% ...  \n\n\n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_parse_Construct.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryElements.ConstructClause.%CONSTRUCT_NormalDividedByArea%.html", 
        "id": 532, 
        "title": "%CONSTRUCT_NormalDividedByArea%"
    }, 
    {
        "body": "\n\n%CONSTRUCT_PointBasedOnAbsoluteVolume% ...  \n\n\n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_parse_Construct.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryElements.ConstructClause.%CONSTRUCT_PointBasedOnAbsoluteVolume%.html", 
        "id": 533, 
        "title": "%CONSTRUCT_PointBasedOnAbsoluteVolume%"
    }, 
    {
        "body": "\n\n%CONSTRUCT_PointBasedOnRelativeVolume% ...  \n\n\n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_parse_Construct.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryElements.ConstructClause.%CONSTRUCT_PointBasedOnRelativeVolume%.html", 
        "id": 534, 
        "title": "%CONSTRUCT_PointBasedOnRelativeVolume%"
    }, 
    {
        "body": "\n\n%CONSTRUCT_Tangent1% ...  \n\n\n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_parse_Construct.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryElements.ConstructClause.%CONSTRUCT_Tangent1%.html", 
        "id": 535, 
        "title": "%CONSTRUCT_Tangent1%"
    }, 
    {
        "body": "\n\n%CONSTRUCT_Tangent2% ...  \n\n\n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_parse_Construct.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryElements.ConstructClause.%CONSTRUCT_Tangent2%.html", 
        "id": 536, 
        "title": "%CONSTRUCT_Tangent2%"
    }, 
    {
        "body": "\n\n%CONSTRUCT_Volume% ...  \n\n\n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_parse_Construct.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryElements.ConstructClause.%CONSTRUCT_Volume%.html", 
        "id": 537, 
        "title": "%CONSTRUCT_Volume%"
    }, 
    {
        "body": "\n\n%CONSTRUCT_VolumeForGivenHeight% ...  compute the volume of a closed body restricted by a certain height \n\n\n   \n  begin_construct{} \n     \"VolumeVariable\" = CONSTRUCT( %CONSTRUCT_VolumeForGivenHeight%, nRef_x, nRef_y, nRef_z, pRef_x, pRef_y, pRef_z, height, \"Alias1\", \"Alias2\", ...) \n  end_construct \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_parse_Construct.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryElements.ConstructClause.%CONSTRUCT_VolumeForGivenHeight%.html", 
        "id": 538, 
        "title": "%CONSTRUCT_VolumeForGivenHeight%"
    }, 
    {
        "body": "\n\nplainBoundaryElements ...  definition a geometry file to be read by FPM \n\n\n   \n   \n   \n  begin_boundary_elements{} \n     ... \n     BND_entity &AliasName;&    coordinates    GeometryManipulations \n     ... \n  end_boundary_elements \n   \n   \n\n\n\n\nList of members:\n\n\nBND_point  ...  create an independent point of the geometry \nBND_line  ...  create an independent line of the grometry \nBND_tria  ...  create an independent triangle of the geometry \nBND_tria6N  ...  \nBND_quad  ...  \nBND_cube  ...  \nBND_cylinder  ...  \nBND_plane  ...  \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_GIF_line.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryElements.plainBoundaryElements.html", 
        "id": 539, 
        "title": "plainBoundaryElements"
    }, 
    {
        "body": "\n\nBND_point ...  create an independent point of the geometry \n\n\n  A BND_point can be used to trigger \n  - SMOOTH_LENGTH definitions. \n  - ... \n   \n   \n  BND_point &AliasName;&    x y z    GeometryManipulations \n   \n  BND_point &AliasName;&    ip    GeometryManipulations \n   \n   \n  (x,y,z) :: are the initial coordinates of the point. \n   \n             Alternatively, the point can be defined by \n  ip      :: the node index used   \n   \n             If (x,y,z) is used, FPM created automatically a new node point as a basis for the BND_point. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_GIF_line.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryElements.plainBoundaryElements.BND_point.html", 
        "id": 540, 
        "title": "BND_point"
    }, 
    {
        "body": "\n\nBND_line ...  create an independent line of the grometry \n\n\n   \n   \n  BND_line &AliasName;&    x1 y1 z1  x2 y2 z2    GeometryManipulations \n   \n  BND_line &AliasName;&    ip1 ip2    GeometryManipulations  \n   \n  (x1,y1,z1) :: are the initial coordinates of the starting point of the line \n  (x2,y2,z2) :: are the initial coordinates of the ending point of the line \n   \n                Alternatively, the BND_line can be defined by \n  ip1        :: the node index for the startingpoint (has to be an existing node) \n  ip2        :: the node index for the ending point (has to be an existing node)  \n   \n                If (x1,y1,z1) (x2,y2,z2) are used, FPM creates automatically new node points as a basis of the BND_line. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_GIF_line.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryElements.plainBoundaryElements.BND_line.html", 
        "id": 541, 
        "title": "BND_line"
    }, 
    {
        "body": "\n\nBND_tria ...  create an independent triangle of the geometry \n\n\n   \n   \n  BND_tria   &AliasName;&    x1 y1 z1  x2 y2 z2   x3 y3 z3  GeometryManipulations \n   \n  BND_tria   &AliasName;&    ip1 ip2 ip3     GeometryManipulations  \n   \n  (x1,y1,z1), (x2,y2,z2), (x3,y3,z3) :: respectively, the coordinates of the three corners of the triangle. \n                                        The cross product (x2-x1,y2-y1,z2-z1)x(x3-x1,y3-y1,z3-z1) forms theinward pointing direction of the triangle \n   \n                                        Alternatively, the BND_tria can be defined by \n  (ip1, ip2, ip3)                    :: respectively, the node indices of the three  corner points of the triangle.  \n   \n                                        If (x1,y1,z1) (x2,y2,z2), (x3,y3,z3) are used, FPM creates automatically new node points as a basis of the BND_tria. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_GIF_line.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryElements.plainBoundaryElements.BND_tria.html", 
        "id": 542, 
        "title": "BND_tria"
    }, 
    {
        "body": "\n\nBND_tria6N ...  \n\n\n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_GIF_line.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryElements.plainBoundaryElements.BND_tria6N.html", 
        "id": 543, 
        "title": "BND_tria6N"
    }, 
    {
        "body": "\n\nBND_quad ...  \n\n\n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_GIF_line.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryElements.plainBoundaryElements.BND_quad.html", 
        "id": 544, 
        "title": "BND_quad"
    }, 
    {
        "body": "\n\nBND_cube ...  \n\n\n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_GIF_line.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryElements.plainBoundaryElements.BND_cube.html", 
        "id": 545, 
        "title": "BND_cube"
    }, 
    {
        "body": "\n\nBND_cylinder ...  \n\n\n   \n  BND_cylinder &aliasDefinition;&    x0 y0 z0    nx ny nz   height  radisA radiusB  optional: numberOfSegmentsInCircle  \n   \n  The cylinder is given by the point (x0,y0,z0), the direction of the axis (nx,ny,nz), the height and the two radii on bottom and top, such that \n  even a truncated cone a possible. \n   optionally, the number of discretization ticks for the circle can be defined.  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_GIF_line.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryElements.plainBoundaryElements.BND_cylinder.html", 
        "id": 546, 
        "title": "BND_cylinder"
    }, 
    {
        "body": "\n\nBND_plane ...  \n\n\n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_GIF_line.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.BoundaryElements.plainBoundaryElements.BND_plane.html", 
        "id": 547, 
        "title": "BND_plane"
    }, 
    {
        "body": "\n\nCODI_min_max ...  set lower and upper bound for any FPM-variable \n\n\n  Equivalent to ENFORCE_min_max. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/GT_CoDi.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.CODI.CODI_min_max.html", 
        "id": 548, 
        "title": "CODI_min_max"
    }, 
    {
        "body": "\n\nCODI_min_max_RejectLinearSolution ...  rejection of the solution of a sparse linear system if minimum-maximum criteria are not fulfilled \n\n\n  Equivalent to ENFORCE_min_max_RejectLinearSolution  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/GT_CoDi.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.CODI.CODI_min_max_RejectLinearSolution.html", 
        "id": 549, 
        "title": "CODI_min_max_RejectLinearSolution"
    }, 
    {
        "body": "\n\nCurves ...  define curves in the input file \n\n\n  curves are tables of values that can be used to assign any physical or geometrical quantity, \n  such as density depending on pressure or viscosity depending on temperature. A curve definition \n  starts with  begin_curve{\"CurveName\"}   and ends with  end_curve . \n   \n  We distinguish between 1D_Curves and 2D_Curves. See there. \n   \n\n\n\n\nList of members:\n\n\n1D_Curves  ...  define curves with one independent variable \n2D_Curves  ...  define curves with two independent variables \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_curves_definitions.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Curves.html", 
        "id": 550, 
        "title": "Curves"
    }, 
    {
        "body": "\n\n1D_Curves ...  define curves with one independent variable \n\n\n  1D curves are characterized by one independent variable and several dependent variables. In any case, \n  the first column of the curve is the independent variable. The independent variable column \n  has to be sorted ascendingly. \n   \n  Example: density depending on temperature (ONE depending variable) \n   \n  begin_curve{\"DensityOnTemperature\"} depvar_default{%ind_T%} \n   -273.15  1100 \n   0        1000 \n   4        1050 \n   100       990 \n  end_curve \n   \n   \n  Example: gravity components depending on time (SEVERAL depending variables) \n   \n  begin_curve{\"GravityOnTime\"} depvar_default{%ind_time%} nb_functions{3} \n   0       0 0 -9.81 \n   1       0 0 -9.81 \n   1.01    0 0  9.81 \n   10      0 0  9.81 \n  end_curve \n   \n   \n   \n   \n   \n\n\n\n\nList of members:\n\n\nnb_functions  ...  defines the number of dependent variables in 1D curves \ndepvar_default  ...  defines the index for the independent variable in 1D curves \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_curves_definitions.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Curves.1D_Curves.html", 
        "id": 551, 
        "title": "1D_Curves"
    }, 
    {
        "body": "\n\nnb_functions ...  defines the number of dependent variables in 1D curves \n\n\n   \n   \n   \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_curves_definitions.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Curves.1D_Curves.nb_functions.html", 
        "id": 552, 
        "title": "nb_functions"
    }, 
    {
        "body": "\n\ndepvar_default ...  defines the index for the independent variable in 1D curves \n\n\n   \n  The are two options: \n  Option 1: Definition based on existing FPM-variables (see Indices): in this case, only type the index enclosed by %-signs, for example \n   \n  begin_curve{...} depvar_default{%ind_T%} \n   \n   \n  Option 2: Definition based on Equations: in this case, put the equation name enclosed by brackets, for example \n   \n  begin_curve{...} depvar_default{equn{$EQN_radius$}} \n    ... \n  end_curve \n   \n  begin_equation{\"EQN_radius\"} \n    sqrt( Y%ind_x(1)%^2 + Y%ind_x(2)%^2 + Y%ind_x(3)%^2 ) \n  end_equation \n   \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_curves_definitions.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Curves.1D_Curves.depvar_default.html", 
        "id": 553, 
        "title": "depvar_default"
    }, 
    {
        "body": "\n\n2D_Curves ...  define curves with two independent variables \n\n\n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_curves_definitions.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Curves.2D_Curves.html", 
        "id": 554, 
        "title": "2D_Curves"
    }, 
    {
        "body": "\n\nEVENT ...  events defined for the point cloud \n\n\n  Types of events are: \n  1) Function manipulation (can be used e.g. for the rotation of points hitting a certain part of the boundary geometry) \n  2) Deletion of points (can be used for \"metageometries\") \n  3) Stop FPM and exit cleanly \n  4) Abort FPM with an error \n  4) Display of an event message \n  Events 3 and 4 can be used for further stopping criteria besides time. \n   \n  In USER_common_variables.dat the definition of an event looks as follows: \n    \n  EVENT(n) = ( event_trigger_expression, %EVENT_FunctionManipulation%, %ind_xyz%, expression_xyz [,%ind_abc%, expression_abc ...] ) \n  EVENT(n) = ( event_trigger_expression, %EVENT_DeletePoint% ) \n  EVENT(n) = ( event_trigger_expression, %EVENT_StopFPM%,  optional: MessageCode ) \n  EVENT(n) = ( event_trigger_expression, %EVENT_AbortFPM%, optional: MessageCode ) \n  EVENT(n) = ( event_trigger_expression, %EVENT_Msg%, MessageCode ) \n    \n  For each FPM point the event_trigger_expression is evaluated. If it is larger than zero for the considered point, the event is triggered. \n   \n  This means e.g. that for the given indices (%ind_xyz%,%ind_abc%,...) the defined function manipulations (expression_xyz, expression_abc,...) are executed. \n  The event_trigger_expression as well as the manipulations for the indices are defined by Equations. \n   \n  The optional MessageCode is a non-negative integer, that associates the event with an EventMessage, \n  which is printed once if that event has been triggered, e.g.: \n  In this way, the user can check which of several stopping events were triggered. \n   \n   \n   Additional feature:  force the event handler to execute the particular event (index n) only every N_CycEvent time cycles, i.e. \n   \n  EVENT(n) = (  %EVENT_PerformAfterHowManyTimeCycles%, N_CycEvent,  event_trigger_expression, %EVENT_...%, ... ) \n   \n  Here, the two additinal, optional features have to come at the beginning of the RightHandSideExpression. \n   \n\n\n\n\nList of members:\n\n\nEventMessage  ...  define event message with message code \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Core/PointcloudOrganization/ORGANIZE/ORGANIZE_Events.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.EVENT.html", 
        "id": 555, 
        "title": "EVENT"
    }, 
    {
        "body": "\n\nEventMessage ...  define event message with message code \n\n\n  Define an event message for a message code that can be used in EVENT statements. \n   \n    EventMessage(MessageCode)=\"MessageText\" \n   \n   \n  Example: \n   \n    EventMessage(12345)=\"FPM was stopped due to an event.\" \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/FPMLOG/EVENT_Message_DefineAll.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.EVENT.EventMessage.html", 
        "id": 556, 
        "title": "EventMessage"
    }, 
    {
        "body": "\n\nEquations ...  define functions, equations, and algebraic expressions \n\n\n   Equations can be defined and invoked in the following two ways \n   \n   1.) definition-useByReference \n   \n   begin_equation{$EquationName$} \n      BodyOfEquation \n   end_equation \n   \n   The example to compute the kinetic energy of a particle would be \n    \n   begin_equation{$KineticEnergy$} \n      0.5*Y%ind_r%*( Y%ind_v(1)%^2 + Y%ind_v(2)%^2 + Y%ind_v(3)%^2 ) \n   end_equation \n    \n   1.1.) This equation can now be referenced on the right hand sides of statements (see also RightHandSideExpression), i.e. \n    \n   BC_T($...$) = (%BND_DIRICH%, equn{$EquationName$}) \n    \n   \n   1.2.) This equation can also be used inside of curve definitions, i.e. \n    \n   begin_curve{$CurveName$} \n   0 equn{$EquationName$} \n   1 2 \n   3 87.5 \n   end_curve \n    \n   \n   1.3.) This equation can finally be used in another equation definition, i.e. \n    \n   begin_equation{$AnotherEquation$} \n   ... equn($EquationName$) ... \n   end_equation \n    \n   \n   2.) Direct built-in by using an equation direcly inside of expressions \n   usually on the right hand sides of entities and definitions, such as \n    \n   BC_T($...$) = (%BND_DIRICH%, [BodyOfEquation]) \n    \n   For the BodyOfEquation, Operators as well as Functions can be used. \n\n\n\n\nList of members:\n\n\nFunctions  ...  Standard math functions and FPM-specific functions \nOperators  ...  Standard math operators \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/equation_parser.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.html", 
        "id": 557, 
        "title": "Equations___Ucv___"
    }, 
    {
        "body": "\n\nFunctions ...  Standard math functions and FPM-specific functions \n\n\n\n\n\nList of members:\n\n\nCID()  ...  CuttingCurveCluster ID \nChkNP()  ...  check for attributes of node points of boundary elements \nDtDom()  ...  compute the distance to a given alias-domain \nExDom()  ...  check if a point is outside a given CLOSED domain \nInDom()  ...  check if a point is inside a given CLOSED domain \nRasterCircleX  ...  computes a rectangular raster of squares of size r1*r1  of a circle that has radius r2 and returns the X coordinate of a random midpoint of one of the squares that is fully contained in the circle \nY0()  ...  FPM-entity \nYopp()  ...  FPM-entity of the opposite particle of contact problems \nabs()  ...  absolute value \nacos()  ...  inverse cosine \nasin()  ...  inverse sine \natan()  ...  inverse tangent \nbinA()  ...  step function for alias \ncompareY()  ...  compare function values between two given chambers \ncos()  ...  cosine  \ncosh()  ...  hyperbolic cosine  \ncurve()  ...  incorporate curves in an equation \ndYdn()  ...  normal-derivative of FPM-entity \ndYdx()  ...  x-derivative of FPM-entity \ndYdy()  ...  y-derivative of FPM-entity \ndYdz()  ...  z-derivative of FPM-entity \ndcurv()  ...  derivative of a given curve \ndequn()  ...  derivative of a given equation \ndtBND()  ...  closest distance to boundary (free surface or regular) in the neighborhood \nequn()  ...  incorporate existing equations \nexp()  ...  exponential \nfabnd()  ...   \nif-then-else  ...  incorporate logical branching in the equation \nint()  ...  integer part of real value \ninteg()  ...  incorporate integration results in an equation \nisCID()  ...  characteristic function for a CuttingCurveCluster \nlenA()  ...  length of alias string \nlog()  ...  natural logarithm \nlog10()  ...  logarithms basis 10 \nmax()  ...  maximum of two or more arguments \nmin()  ...  minimum of two or more arguments \nphix()  ...  \nphiy()  ...  \nphiz()  ...  \npmin()  ...  minimum of all strictly positive values \nprojY()  ...  Projection of FPM-entity by smooth, least-squares  approximation \nrand()  ...  random numer generator \nreal()  ...  incorporate standard FPM-postprocessing and statistics \nrot()  ...  components of rotated vector \nsin()  ...  sine  \nsinh()  ...  hyperbolic sine  \nsqrt()  ...  square root \nstep()  ...  step function \ntan()  ...  tangent  \ntanh()  ...  hyperbolic tangent  \nvcog()  ...  \nxcog()  ...  \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/equation_parser.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.html", 
        "id": 558, 
        "title": "Functions"
    }, 
    {
        "body": "\n\nCID() ...  CuttingCurveCluster ID \n\n\n  [CID(0)] returns the CuttingCurveCluster ID for points on the boundary and 0 elsewhere. \n  Some input is necessary for parsing the equation, but it is not evaluated. \n   \n  Example (equation definition): \n   \n  begin_equation{$EqunName$} \n     ... CID(0) ... \n  end_equation \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/equation_parser.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.CID().html", 
        "id": 559, 
        "title": "CID()"
    }, 
    {
        "body": "\n\nChkNP() ...  check for attributes of node points of boundary elements \n\n\n  With the help of this function different attributes of the node points of the boundary elements belonging to a given alias can be checked. \n   \n  Example (equation definition): \n   \n  begin_equation{$EqunName$} \n     ... ChkNP(\"AliasName\",attribute,component,type) ... \n  end_equation \n   \n  where \n  \"AliasName\" - specifies to which alias the boundary elements belong \n  attribute - specifies which attribute should be considered \n     =1: position (X_BND) \n     =2: velocity (V_BND) \n     =3: acceleration (Vdot_BND) \n  component - specifies which component of the given attribute should be considered \n     =1: x-coordinate \n     =2: y-coordinate \n     =3. z-coordinate \n  type - specifies which type of check should be done \n     =1: average wrt. the number of node points matching the given alias \n     =2: minimum \n     =3: maximum \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/equation_parser.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.ChkNP().html", 
        "id": 560, 
        "title": "ChkNP()"
    }, 
    {
        "body": "\n\nDtDom() ...  compute the distance to a given alias-domain \n\n\n   \n  begin_equation{$EqunName$} \n     ... DtDom(\"AliasName\") ... \n  end_equation \n   \n   \n  FPM will compute the distance of a given point to the boundary \n  elements (BE) attached to the alias \"AliasName\". \n  Also the orientation of the BE plays a role, such that the distance can become negative, \n  if the point is logically outside of the domain. \n   \n  Optionally, instead of computing the distance to the given point, compute the distance to \n  any given coordinates, i.e. \n   \n  begin_equation{$EqunName$} \n     ... DtDom(\"AliasName\", x, y, z) ... \n  end_equation \n   \n  where the distance is computed with respect to the point (x,y,z). In that sense, \n  DtDom(\"AliasName\") and DtDom(\"AliasName\", Y%ind_x(1)%, Y%ind_x(2)%, Y%ind_x(2)%) \n  are equivalent. \n   \n  The algorithm is expensive, FPM compares the point with each BE given by \"AliasName\". \n  So, use this function with caution. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/equation_parser.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.DtDom().html", 
        "id": 561, 
        "title": "DtDom()"
    }, 
    {
        "body": "\n\nExDom() ...  check if a point is outside a given CLOSED domain \n\n\n  Returns the opposite of InDom(), i.e. 0 if inside, 1 if outside. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/equation_parser.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.ExDom().html", 
        "id": 562, 
        "title": "ExDom()"
    }, 
    {
        "body": "\n\nInDom() ...  check if a point is inside a given CLOSED domain \n\n\n   \n  begin_equation{$EqunName$} \n     ... InDom(\"AliasName\") ... \n  end_equation \n   \n   \n  RETURN: 1 if inside, 0 if outside. \n   \n  FPM will check if the given particle is inside of a closed domain formed by the boundary \n  elements (BE) attached to the alias \"AliasName\" \n  In order to do this, FPM sends a ray from the point. If the ray cuts an even number of times \n  the boundary, the point is outside, otherwise inside. \n   \n  Optionally, instead of checking the particle given, check any given coordinates, i.e. \n   \n  begin_equation{$EqunName$} \n     ... InDom(\"AliasName\", x, y, z) ... \n  end_equation \n   \n  where the inside-check is performed with respect to the point (x,y,z). \n   \n  See also ExDom(). \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/equation_parser.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.InDom().html", 
        "id": 563, 
        "title": "InDom()"
    }, 
    {
        "body": "\n\nRasterCircleX ...  computes a rectangular raster of squares of size r1*r1  of a circle that has radius r2 and returns the X coordinate of a random midpoint of one of the squares that is fully contained in the circle \n\n\n  [RasterCircleX(r1,r2)]   \n  [RasterCircleX(r1,r2)]   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/equation_parser.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.RasterCircleX.html", 
        "id": 564, 
        "title": "RasterCircleX"
    }, 
    {
        "body": "\n\nY0() ...  FPM-entity \n\n\n  [ ... Y0(%ind_NameOfEntity%) ... ]   \n  this is an equivalent to [ ... Y%ind_NameOfEntity% ... ]  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/equation_parser.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.Y0().html", 
        "id": 565, 
        "title": "Y0()"
    }, 
    {
        "body": "\n\nYopp() ...  FPM-entity of the opposite particle of contact problems \n\n\n  [Yopp(%ind_NameOfEntity%)]   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/equation_parser.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.Yopp().html", 
        "id": 566, 
        "title": "Yopp()"
    }, 
    {
        "body": "\n\nabs() ...  absolute value \n\n\n  [abs(a)] Computes the absolute value of 'a'.  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/equation_parser.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.abs().html", 
        "id": 567, 
        "title": "abs()"
    }, 
    {
        "body": "\n\nacos() ...  inverse cosine \n\n\n  [acos(a)] Computes the inverse cosine of 'a'. The result is in radians.  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/equation_parser.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.acos().html", 
        "id": 568, 
        "title": "acos()"
    }, 
    {
        "body": "\n\nasin() ...  inverse sine \n\n\n  [asin(a)] Computes the inverse sine of 'a'. The result is in radians.  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/equation_parser.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.asin().html", 
        "id": 569, 
        "title": "asin()"
    }, 
    {
        "body": "\n\natan() ...  inverse tangent \n\n\n  [atan(a)] Computes the inverse tangent of 'a'. The result is in radians.  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/equation_parser.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.atan().html", 
        "id": 570, 
        "title": "atan()"
    }, 
    {
        "body": "\n\nbinA() ...  step function for alias \n\n\n  binA(\"alias\") delivers 1 if boundary element of point corresponds to the given alias \n  binA(\"alias\") delivers 0 if boundary element of point does not correspond to the given alias \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/equation_parser.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.binA().html", 
        "id": 571, 
        "title": "binA()"
    }, 
    {
        "body": "\n\ncompareY() ...  compare function values between two given chambers \n\n\n   \n  begin_equation{$EqunName$} \n     ... compareY(%ind_f%, iChamber1, iChamber2) ... \n  end_equation \n   \n  This feature compares the function values represented by %ind_f% between the two chambers iChamber1 and iChamber2, \n  that means it computes the difference  Y(%ind_f%,iChamber1) - Y(%ind_f%,iChamber2) \n  %ind_f% : existing FPM function index, see Indices \n  iChamber1 : index of first chamber, same as given by the CHAMBER-flag \n  iChamber2 : index of second chamber, same as given by the CHAMBER-flag \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/equation_parser.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.compareY().html", 
        "id": 572, 
        "title": "compareY()"
    }, 
    {
        "body": "\n\ncos() ...  cosine  \n\n\n  [cos(a)] Computes the cosine of 'a' given in radians.  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/equation_parser.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.cos().html", 
        "id": 573, 
        "title": "cos()"
    }, 
    {
        "body": "\n\ncosh() ...  hyperbolic cosine  \n\n\n  [cosh(a)] Computes the hyperbolic cosine of 'a'.  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/equation_parser.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.cosh().html", 
        "id": 574, 
        "title": "cosh()"
    }, 
    {
        "body": "\n\ncurve() ...  incorporate curves in an equation \n\n\n  If a curve is defined by \n   \n  begin_curve{$CrvName$}, depvar_default{%ind_Var%} \n     BodyOfCurve \n  end_curve \n   \n  the result of this curve is used in an equation/arithmetic expression by \n   \n  [ ... curve($CrvName$) ... ] \n   \n  It is especially important to give the depvar_default{}-information in order to define how to \n  interprete the left column of the curve. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/equation_parser.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.curve().html", 
        "id": 575, 
        "title": "curve()"
    }, 
    {
        "body": "\n\ndYdn() ...  normal-derivative of FPM-entity \n\n\n  derivative in direction of boundary normal by the actually installed differential operators. Only valid for boundary particles.   \n  [ ... dYdn(%ind_NameOfEntity%) ... ]   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/equation_parser.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.dYdn().html", 
        "id": 576, 
        "title": "dYdn()"
    }, 
    {
        "body": "\n\ndYdx() ...  x-derivative of FPM-entity \n\n\n  x-derivative by the actually installed differential operators  \n  [ ... dYdx(%ind_NameOfEntity%) ... ]   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/equation_parser.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.dYdx().html", 
        "id": 577, 
        "title": "dYdx()"
    }, 
    {
        "body": "\n\ndYdy() ...  y-derivative of FPM-entity \n\n\n  y-derivative by the actually installed differential operators  \n  [ ... dYdy(%ind_NameOfEntity%) ... ]   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/equation_parser.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.dYdy().html", 
        "id": 578, 
        "title": "dYdy()"
    }, 
    {
        "body": "\n\ndYdz() ...  z-derivative of FPM-entity \n\n\n  z-derivative by the actually installed differential operators  \n  [ ... dYdz(%ind_NameOfEntity%) ... ]   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/equation_parser.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.dYdz().html", 
        "id": 579, 
        "title": "dYdz()"
    }, 
    {
        "body": "\n\ndcurv() ...  derivative of a given curve \n\n\n  This function numerically computes the derivative of a curve by a central difference. \n  The curve has to have the depvar_default-option. \n  The numerical differentiation is performed with respect to exactly this variable: \n   \n  begin_equation{$EqunName$} \n     ... dcurv( $CurveName$, ind_FPMvariable, OPTIONAL: SizeOfInterval ) ... \n  end_equation \n  begin_curve{\"CurveName\"}, depvar_default{...} \n   ... \n  end_curve \n   \n  ind_FPMvariable: if given a positive value for ind_FPMvariable, (i.e. an item out of Indices), \n                   then the curve is numerically derived with respect to this variable. The regular case, however, is \n                   to set ind_FPMvariable=-1. In this case, the curve is derived with respect to the default \n                   variable, given in the depvar_default{...}-clause . \n  SizeOfInterval:  specifies the half-width of the central difference. The default value is 1.0e-4. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/equation_parser.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.dcurv().html", 
        "id": 580, 
        "title": "dcurv()"
    }, 
    {
        "body": "\n\ndequn() ...  derivative of a given equation \n\n\n  This function numerically computes the derivative of an equation by a central difference. \n  The numerical differentiation is performed with respect to a given FPM-variable: \n   \n  begin_equation{$EqunName$} \n     ... dequn( $OtherEqunName$, %ind_FPMvariable%, OPTIONAL: SizeOfInterval ) ... \n  end_equation \n  begin_equation{\"OtherEqunName\"} \n   ... \n  end_equation \n   \n  SizeOfInterval specifies the half-width of the central difference. The default value is 1.0e-4. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/equation_parser.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.dequn().html", 
        "id": 581, 
        "title": "dequn()"
    }, 
    {
        "body": "\n\ndtBND() ...  closest distance to boundary (free surface or regular) in the neighborhood \n\n\n   \n  begin_equation{$EqunName$} \n     ... dtBND(0) ... \n  end_equation \n   \n  The distance is computed using least squares approximation of the distance functional: \n  - points at the boundary have distance 0 and a gradient of 1 pointing in normal direction \n  - points in the interior are ignore for version 0 and 1 (see below) \n  the argument inside of the function is used as follows: \n  dtBND(0) => distance to free surface \n  dtBND(1) => distance to regular boundary based on the boundary points only \n  dtBND(2) => distance to regular boundary based on the information in %ind_dtb% \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/equation_parser.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.dtBND().html", 
        "id": 582, 
        "title": "dtBND()"
    }, 
    {
        "body": "\n\nequn() ...  incorporate existing equations \n\n\n  If an equation is defined by \n   \n  begin_equation{$EqnName$} \n     BodyOfEquation \n  end_equation \n   \n  the result of this equation is used in another equation/arithmetic expression by \n   \n  [ ... equn($EqnName$) ... ] \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/equation_parser.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.equn().html", 
        "id": 583, 
        "title": "equn()"
    }, 
    {
        "body": "\n\nexp() ...  exponential \n\n\n  [exp(a)] Computes   \n \n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/equation_parser.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.exp().html", 
        "id": 584, 
        "title": "exp()"
    }, 
    {
        "body": "\n\nfabnd() ...   \n\n\n  FPMDOCUTODO  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/equation_parser.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.fabnd().html", 
        "id": 585, 
        "title": "fabnd()"
    }, 
    {
        "body": "\n\nif-then-else ...  incorporate logical branching in the equation \n\n\n   \n  begin_equation{\"abs\"} \n     if(aaa) :: mathexpression1 \n     elseif(bbb) :: mathexpression2 \n     elseif(ccc) :: mathexpression3 \n     else :: mathexpression4 \n     endif \n  end_equation \n   \n   \n  The logical expressions aaa, bbb, ccc can be established using the logical operator \">\", \"<\", \"!\", \"=\". \n  So, if a condition is to be set upon the x-component of the particle position, it would look like this: \n   \n   \n  begin_equation{\"abs\"} \n     if ( Y%ind_x(1)% > 0 )        :: mathexpression1 \n     elseif ( Y%ind_x(1)% > -0.5 ) :: mathexpression2 \n     else                          :: mathexpression4 \n     endif \n  end_equation \n   \n   \n  Also nesting is allowed: \n   \n   \n  begin_equation{\"abs\"} \n     if(aaa) :: \n        if(ddd) :: mathexpression4 \n        else    :: mathexpression5 \n        endif \n     elseif(bbb) :: mathexpression2 \n     elseif(ccc) :: mathexpression3 \n     else :: \n        if(ddd) :: mathexpression6 \n        else    :: mathexpression7 \n        endif \n     endif \n  end_equation \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/equation_parser.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.if-then-else.html", 
        "id": 586, 
        "title": "if-then-else"
    }, 
    {
        "body": "\n\nint() ...  integer part of real value \n\n\n   \n  begin_equation{$EqunName$} \n     ... int(SomeNumber) ... \n  end_equation \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/equation_parser.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.int().html", 
        "id": 587, 
        "title": "int()"
    }, 
    {
        "body": "\n\ninteg() ...  incorporate integration results in an equation \n\n\n  If an integration is defined by \n   \n  INTEGRATION(n) = ( %INTEGRATION_...%, ........) \n   \n  then the result of this particular integration can be used inside of an \n  equation by \n   \n  [ ... integ(n) ... ] \n   \n  of course replacing \"n\" by the true index of the integration. \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/equation_parser.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.integ().html", 
        "id": 588, 
        "title": "integ()"
    }, 
    {
        "body": "\n\nisCID() ...  characteristic function for a CuttingCurveCluster \n\n\n  [isCID(i)] returns 1 for all points on part of the boundary \n  with CuttingCurveCluster ID equal to i and 0 elsewhere. \n   \n  Example (equation definition): \n   \n  begin_equation{$EqunName$} \n     ... isCID(3) ... \n  end_equation \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/equation_parser.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.isCID().html", 
        "id": 589, 
        "title": "isCID()"
    }, 
    {
        "body": "\n\nlenA() ...  length of alias string \n\n\n  Remark: lenA(\" \") delivers 0. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/equation_parser.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.lenA().html", 
        "id": 590, 
        "title": "lenA()"
    }, 
    {
        "body": "\n\nlog() ...  natural logarithm \n\n\n  [log(a)] Computes the natural logarithm of 'a'.  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/equation_parser.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.log().html", 
        "id": 591, 
        "title": "log()"
    }, 
    {
        "body": "\n\nlog10() ...  logarithms basis 10 \n\n\n  [log10(a)] Computes the base 10 logarithm of 'a'.  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/equation_parser.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.log10().html", 
        "id": 592, 
        "title": "log10()"
    }, 
    {
        "body": "\n\nmax() ...  maximum of two or more arguments \n\n\n  [ ... max(arg1, arg2, ..., argn) ... ]  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/equation_parser.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.max().html", 
        "id": 593, 
        "title": "max()"
    }, 
    {
        "body": "\n\nmin() ...  minimum of two or more arguments \n\n\n  [ ... min(arg1, arg2, ..., argn) ... ]  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/equation_parser.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.min().html", 
        "id": 594, 
        "title": "min()"
    }, 
    {
        "body": "\n\nphix() ...  \n\n\n  FPMDOCUTODO  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/equation_parser.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.phix().html", 
        "id": 595, 
        "title": "phix()"
    }, 
    {
        "body": "\n\nphiy() ...  \n\n\n  FPMDOCUTODO  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/equation_parser.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.phiy().html", 
        "id": 596, 
        "title": "phiy()"
    }, 
    {
        "body": "\n\nphiz() ...  \n\n\n  FPMDOCUTODO  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/equation_parser.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.phiz().html", 
        "id": 597, 
        "title": "phiz()"
    }, 
    {
        "body": "\n\npmin() ...  minimum of all strictly positive values \n\n\n  The algorithm selects all strictly positive numbers and forms their minimum. \n   \n  begin_equation{\"EqunName\"} \n     pmin( -0.0001, 10, -5, 0.1, -80, 6, ... ) \n  end_equation \n   \n  The example above yields 0.1. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/equation_parser.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.pmin().html", 
        "id": 598, 
        "title": "pmin()"
    }, 
    {
        "body": "\n\nprojY() ...  Projection of FPM-entity by smooth, least-squares  approximation \n\n\n  [y0(%ind_NameOfEntity%)]   \n  Possible variants:   \n  [ ... projY(%ind_Entity%) ... ]                                     project the values of the entity %ind_Entity%   \n  [ ... projY(iChamber, %ind_Entity%) ... ]                           project the values of the entity %ind_Entity% from the chamber with index iChamber   \n  [ ... projY(iChamber, %ind_Entity%, %EQN_Proj_INT% ) ... ]          additionally force projection using only interior points   \n  [ ... projY(iChamber, %ind_Entity%, %EQN_Proj_BND% ) ... ]          additionally force projection using only boundary points   \n  [ ... projY(iChamber, %ind_Entity%, %EQN_Proj_ALL% ) ... ]          additionally force projection using all point types (interior AND boundary)   \n  [ ... projY(iChamber, %ind_Entity%, %EQN_Proj_ALL%, Kernel ) ... ]  additionally force the shape of the interpolation kernel to be W_ij = exp( -Kernel*r_ij )   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/equation_parser.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.projY().html", 
        "id": 599, 
        "title": "projY()"
    }, 
    {
        "body": "\n\nrand() ...  random numer generator \n\n\n  [ ... rand(1) ... ] -> this will produce a random number between 0 and 1 \n  [ ... rand(a) ... ] -> this will produce a random number between 0 and a (a is a real number) \n  [ ... rand(-a) ... ] -> this will produce a random number between -a and a (a is a real number) \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/equation_parser.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.rand().html", 
        "id": 600, 
        "title": "rand()"
    }, 
    {
        "body": "\n\nreal() ...  incorporate standard FPM-postprocessing and statistics \n\n\n  [ ... real(%FPM_Variable%) ... ] \n  [ ... real(%FPM_Variable%,Argument) ... ] \n  The function takes either one or two arguments. \n\n\n\n\nList of members:\n\n\nOneArgument  ...  real function in FPM-equations with ONE parameter/argument \nTwoArguments  ...  real function in FPM-equations with TWO parameter/argument \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/equation_parser.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.real().html", 
        "id": 601, 
        "title": "real()"
    }, 
    {
        "body": "\n\nOneArgument ...  real function in FPM-equations with ONE parameter/argument \n\n\n\n\n\nList of members:\n\n\n%BND_count_BE%  ...  provide the current number of boundary elements that belong to the geometry \n%BND_count_NP%  ...  provide the current number of node points belonging to the geometry \n%CLOCK_STATISTICS_TOTAL_ORGANIZE%  ...  Clock time over all particles and the entire simulation time of the liquid solver \n%CLOCK_STATISTICS_TOTAL_SAMG%  ...  clock statistics for SAMG. BETA! USE WITH CAUTION \n%CPU_STATISTICS_TOTAL_ORGANIZE%  ...  CPU time over all particles and the entire simulation time of the liquid solver \n%ElapsedTimeIntegrationCycle%  ...  elapsed CPU-time for FPM numerical integration \n%ElapsedTimePointOrganization%  ...  elapsed CPU-time for point cloud organization \n%FLIQUID_NbParticles%  ...  current number of ACTIVE FPM points \n%MEM_STATISTICS_ALLOC%  ...  currently allocated memory \n%MEM_STATISTICS_AVAIL%  ...  currently available memory \n%MONITOR_NbParticles%  ...  current number of FPM monitor points \n%MPI_NbProcesses%  ...  current number MPI processes \n%NumberTimeStepsExecuted%  ...  gives the current number of time cycles executed in general \n%OMP_NbProcesses%  ...  current number of openMP threads \n%ORGANIZE_NbParticles%  ...  current number of ALL FPM points (inactive+active) \n%RealTimeSimulation%  ...  real simulation time \n%VMEM_STATISTICS_ALLOC%  ...  currently allocated virtual memory   \n%VMEM_STATISTICS_AVAIL%  ...  currently available virtual memory   \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/FPM_PublicValues.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.real().OneArgument.html", 
        "id": 602, 
        "title": "OneArgument"
    }, 
    {
        "body": "\n\n%BND_count_BE% ...  provide the current number of boundary elements that belong to the geometry \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/FPM_PublicValues.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.real().OneArgument.%BND_count_BE%.html", 
        "id": 603, 
        "title": "%BND_count_BE%"
    }, 
    {
        "body": "\n\n%BND_count_NP% ...  provide the current number of node points belonging to the geometry \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/FPM_PublicValues.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.real().OneArgument.%BND_count_NP%.html", 
        "id": 604, 
        "title": "%BND_count_NP%"
    }, 
    {
        "body": "\n\n%CLOCK_STATISTICS_TOTAL_ORGANIZE% ...  Clock time over all particles and the entire simulation time of the liquid solver \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/FPM_PublicValues.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.real().OneArgument.%CLOCK_STATISTICS_TOTAL_ORGANIZE%.html", 
        "id": 605, 
        "title": "%CLOCK_STATISTICS_TOTAL_ORGANIZE%"
    }, 
    {
        "body": "\n\n%CLOCK_STATISTICS_TOTAL_SAMG% ...  clock statistics for SAMG. BETA! USE WITH CAUTION \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/FPM_PublicValues.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.real().OneArgument.%CLOCK_STATISTICS_TOTAL_SAMG%.html", 
        "id": 606, 
        "title": "%CLOCK_STATISTICS_TOTAL_SAMG%"
    }, 
    {
        "body": "\n\n%CPU_STATISTICS_TOTAL_ORGANIZE% ...  CPU time over all particles and the entire simulation time of the liquid solver \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/FPM_PublicValues.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.real().OneArgument.%CPU_STATISTICS_TOTAL_ORGANIZE%.html", 
        "id": 607, 
        "title": "%CPU_STATISTICS_TOTAL_ORGANIZE%"
    }, 
    {
        "body": "\n\n%ElapsedTimeIntegrationCycle% ...  elapsed CPU-time for FPM numerical integration \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/FPM_PublicValues.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.real().OneArgument.%ElapsedTimeIntegrationCycle%.html", 
        "id": 608, 
        "title": "%ElapsedTimeIntegrationCycle%"
    }, 
    {
        "body": "\n\n%ElapsedTimePointOrganization% ...  elapsed CPU-time for point cloud organization \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/FPM_PublicValues.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.real().OneArgument.%ElapsedTimePointOrganization%.html", 
        "id": 609, 
        "title": "%ElapsedTimePointOrganization%"
    }, 
    {
        "body": "\n\n%FLIQUID_NbParticles% ...  current number of ACTIVE FPM points \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/FPM_PublicValues.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.real().OneArgument.%FLIQUID_NbParticles%.html", 
        "id": 610, 
        "title": "%FLIQUID_NbParticles%"
    }, 
    {
        "body": "\n\n%MEM_STATISTICS_ALLOC% ...  currently allocated memory \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/FPM_PublicValues.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.real().OneArgument.%MEM_STATISTICS_ALLOC%.html", 
        "id": 611, 
        "title": "%MEM_STATISTICS_ALLOC%"
    }, 
    {
        "body": "\n\n%MEM_STATISTICS_AVAIL% ...  currently available memory \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/FPM_PublicValues.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.real().OneArgument.%MEM_STATISTICS_AVAIL%.html", 
        "id": 612, 
        "title": "%MEM_STATISTICS_AVAIL%"
    }, 
    {
        "body": "\n\n%MONITOR_NbParticles% ...  current number of FPM monitor points \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/FPM_PublicValues.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.real().OneArgument.%MONITOR_NbParticles%.html", 
        "id": 613, 
        "title": "%MONITOR_NbParticles%"
    }, 
    {
        "body": "\n\n%MPI_NbProcesses% ...  current number MPI processes \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/FPM_PublicValues.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.real().OneArgument.%MPI_NbProcesses%.html", 
        "id": 614, 
        "title": "%MPI_NbProcesses%"
    }, 
    {
        "body": "\n\n%NumberTimeStepsExecuted% ...  gives the current number of time cycles executed in general \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/FPM_PublicValues.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.real().OneArgument.%NumberTimeStepsExecuted%.html", 
        "id": 615, 
        "title": "%NumberTimeStepsExecuted%"
    }, 
    {
        "body": "\n\n%OMP_NbProcesses% ...  current number of openMP threads \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/FPM_PublicValues.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.real().OneArgument.%OMP_NbProcesses%.html", 
        "id": 616, 
        "title": "%OMP_NbProcesses%"
    }, 
    {
        "body": "\n\n%ORGANIZE_NbParticles% ...  current number of ALL FPM points (inactive+active) \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/FPM_PublicValues.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.real().OneArgument.%ORGANIZE_NbParticles%.html", 
        "id": 617, 
        "title": "%ORGANIZE_NbParticles%"
    }, 
    {
        "body": "\n\n%RealTimeSimulation% ...  real simulation time \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/FPM_PublicValues.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.real().OneArgument.%RealTimeSimulation%.html", 
        "id": 618, 
        "title": "%RealTimeSimulation%"
    }, 
    {
        "body": "\n\n%VMEM_STATISTICS_ALLOC% ...  currently allocated virtual memory   \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/FPM_PublicValues.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.real().OneArgument.%VMEM_STATISTICS_ALLOC%.html", 
        "id": 619, 
        "title": "%VMEM_STATISTICS_ALLOC%"
    }, 
    {
        "body": "\n\n%VMEM_STATISTICS_AVAIL% ...  currently available virtual memory   \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/FPM_PublicValues.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.real().OneArgument.%VMEM_STATISTICS_AVAIL%.html", 
        "id": 620, 
        "title": "%VMEM_STATISTICS_AVAIL%"
    }, 
    {
        "body": "\n\nTwoArguments ...  real function in FPM-equations with TWO parameter/argument \n\n\n   \n  begin_equation{$Name$} \n     real( %FPM_Variable%, Argument ) \n  end_equation \n   \n   \n  The following items will match in the place of %FPM_Variable%: \n   \n   \n\n\n\n\nList of members:\n\n\n%PUBLICVALUE_xValueOfBNDpoint%  ...  x-coordinate of the BND_point which carries a certain POSTROCESS-flag \n%PUBLICVALUE_yValueOfBNDpoint%  ...  y-coordinate of the BND_point which carries a certain POSTROCESS-flag \n%PUBLICVALUE_zValueOfBNDpoint%  ...  z-coordinate of the BND_point which carries a certain POSTROCESS-flag \n%CPU_STATISTICS_FLIQUID%  ...  CPU time measured for the execution of the (pure) FPM numerics, CURRENT TIME STEP \n%CLOCK_STATISTICS_FLIQUID%  ...  CLOCK time measured for the execution of the (pure) FPM numerics, CURRENT TIME STEP \n%CPU_STATISTICS_ORGANIZE%  ...  CPU time measured for the execution of the FPM organization (point cloud management, geometry operations), CURRENT TIME STEP \n%CLOCK_STATISTICS_ORGANIZE%  ...  CLOCK time measured for the execution of the FPM organization (point cloud management, geometry operations), CURRENT TIME STEP \n%FPM_VOLUME_TARGET%  ...  target value of volume in a given chamber \n%FPM_VOLUME_ACTUAL%  ...  actual value of volume in a given chamber \n%FPM_VOLUME_DeletedAtMetaplanes%  ...  volume reduced by deletion of FPM points at metaplanes in the current time cycle \n%FPM_KineticEnergy_DifferenceInOrganize%  ...  change of kinetic energy in some chamber during the organization step of FPM \n%FPM_KineticEnergy_DifferenceInOrganize2%  ...  change of kinetic energy in some chamber during organizations at the end of the time step (should be strictly zero, just to check) \n%FPM_KineticEnergy_DifferenceInTimeStep%  ...  change of kinetic energy in some chamber during the execution of the time step \n%FPM_KineticEnergy%  ...  provide total kinetic energy of a given chamber \n%FPM_KineticEnergy_Defect_gradPv%  ...  first order defect of kinetic energy during time integration due to pressure \n%FPM_KineticEnergy_Defect_rhogDv%  ...  first order defect of kinetic energy during time integration due to gravity \n%FPM_KineticEnergy_Defect_O2%  ...  second order defect of kinetic energy during time integration \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/FPM_PublicValues2.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.real().TwoArguments.html", 
        "id": 621, 
        "title": "TwoArguments"
    }, 
    {
        "body": "\n\n%PUBLICVALUE_xValueOfBNDpoint% ...  x-coordinate of the BND_point which carries a certain POSTROCESS-flag \n\n\n   \n  [ ... real( %PUBLICVALUE_xValueOfBNDpoint%, $POSTPROCESS_flag$ ) ... ] \n   \n  $POSTPROCESS_flag$ has to be given at the definition level of the BND_point \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/FPM_PublicValues2.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.real().TwoArguments.%PUBLICVALUE_xValueOfBNDpoint%.html", 
        "id": 622, 
        "title": "%PUBLICVALUE_xValueOfBNDpoint%"
    }, 
    {
        "body": "\n\n%PUBLICVALUE_yValueOfBNDpoint% ...  y-coordinate of the BND_point which carries a certain POSTROCESS-flag \n\n\n   \n  [ ... real( %PUBLICVALUE_yValueOfBNDpoint%, $POSTPROCESS_flag$ ) ... ] \n   \n  $POSTPROCESS_flag$ has to be given at the definition level of the BND_point \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/FPM_PublicValues2.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.real().TwoArguments.%PUBLICVALUE_yValueOfBNDpoint%.html", 
        "id": 623, 
        "title": "%PUBLICVALUE_yValueOfBNDpoint%"
    }, 
    {
        "body": "\n\n%PUBLICVALUE_zValueOfBNDpoint% ...  z-coordinate of the BND_point which carries a certain POSTROCESS-flag \n\n\n   \n  [ ... real( %PUBLICVALUE_zValueOfBNDpoint%, $POSTPROCESS_flag$ ) ... ] \n   \n  $POSTPROCESS_flag$ has to be given at the definition level of the BND_point \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/FPM_PublicValues2.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.real().TwoArguments.%PUBLICVALUE_zValueOfBNDpoint%.html", 
        "id": 624, 
        "title": "%PUBLICVALUE_zValueOfBNDpoint%"
    }, 
    {
        "body": "\n\n%CPU_STATISTICS_FLIQUID% ...  CPU time measured for the execution of the (pure) FPM numerics, CURRENT TIME STEP \n\n\n   \n  [ ... real(%CPU_STATISTICS_FLIQUID%, Argument) ... ] \n   \n  Argument==1: per particle average CPU time over all MPI processes \n  Argument==2: number of MPI processes times MINIMUM CPU time of elapsed at some MPI process, devided by global number of FPM-points \n  Argument==3: number of MPI processes times MAXIMUM CPU time of elapsed at some MPI process, devided by global number of FPM-points \n  Argument==4: sum CPU time over all MPI processes \n  Argument==5: number of MPI processes times MINIMUM CPU time of elapsed at some MPI process \n  Argument==6: number of MPI processes times MAXIMUM CPU time of elapsed at some MPI process \n   \n   ALL TIMES GIVEN FOR THE CURRENT TIME CYCLE  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/FPM_PublicValues2.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.real().TwoArguments.%CPU_STATISTICS_FLIQUID%.html", 
        "id": 625, 
        "title": "%CPU_STATISTICS_FLIQUID%"
    }, 
    {
        "body": "\n\n%CLOCK_STATISTICS_FLIQUID% ...  CLOCK time measured for the execution of the (pure) FPM numerics, CURRENT TIME STEP \n\n\n   \n  [ ... real(%CLOCK_STATISTICS_FLIQUID%, Argument) ... ] \n   \n  Argument==1: per-particle-average CLOCK time, measured over all MPI processes \n  Argument==2: number of MPI processes times MINIMUM CLOCK time elapsed at some MPI process, devided by global number of FPM-points \n  Argument==3: number of MPI processes times MAXIMUM CLOCK time elapsed at some MPI process, devided by global number of FPM-points \n  Argument==4: SUM of CLOCK time over all MPI processes \n  Argument==5: number of MPI processes times MINIMUM CLOCK time elapsed at some MPI process \n  Argument==6: number of MPI processes times MAXIMUM CLOCK time elapsed at some MPI process \n   \n   ALL TIMES GIVEN FOR THE CURRENT TIME CYCLE  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/FPM_PublicValues2.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.real().TwoArguments.%CLOCK_STATISTICS_FLIQUID%.html", 
        "id": 626, 
        "title": "%CLOCK_STATISTICS_FLIQUID%"
    }, 
    {
        "body": "\n\n%CPU_STATISTICS_ORGANIZE% ...  CPU time measured for the execution of the FPM organization (point cloud management, geometry operations), CURRENT TIME STEP \n\n\n   \n  [ ... real(%CPU_STATISTICS_ORGANIZE%, Argument) ... ] \n   \n  Argument==1: per-particle-average of CPU time over all MPI processes \n  Argument==2: number of MPI processes times MINIMUM CPU time elapsed at some MPI process, devided by global number of FPM-points \n  Argument==3: number of MPI processes times MAXIMUM CPU time elapsed at some MPI process, devided by global number of FPM-points \n  Argument==4: SUM of CPU time over all MPI processes \n  Argument==5: number of MPI processes times MINIMUM CPU time of elapsed at some MPI process \n  Argument==6: number of MPI processes times MAXIMUM CPU time of elapsed at some MPI process \n   \n   ALL TIMES GIVEN FOR THE CURRENT TIME CYCLE  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/FPM_PublicValues2.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.real().TwoArguments.%CPU_STATISTICS_ORGANIZE%.html", 
        "id": 627, 
        "title": "%CPU_STATISTICS_ORGANIZE%"
    }, 
    {
        "body": "\n\n%CLOCK_STATISTICS_ORGANIZE% ...  CLOCK time measured for the execution of the FPM organization (point cloud management, geometry operations), CURRENT TIME STEP \n\n\n   \n  [ ... real(%CLOCK_STATISTICS_ORGANIZE%, Argument) ... ] \n   \n  Argument==1: per-perticle-average of CLOCK time over all MPI processes \n  Argument==2: number of MPI processes times MINIMUM CLOCK time elapsed at some MPI process, devided by global number of FPM-points \n  Argument==3: number of MPI processes times MAXIMUM CLOCK time elapsed at some MPI process, devided by global number of FPM-points \n  Argument==4: SUM of CLOCK time over all MPI processes \n  Argument==5: number of MPI processes times MINIMUM CLOCK time of elapsed at some MPI process \n  Argument==6: number of MPI processes times MAXIMUM CLOCK time of elapsed at some MPI process \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/FPM_PublicValues2.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.real().TwoArguments.%CLOCK_STATISTICS_ORGANIZE%.html", 
        "id": 628, 
        "title": "%CLOCK_STATISTICS_ORGANIZE%"
    }, 
    {
        "body": "\n\n%FPM_VOLUME_TARGET% ...  target value of volume in a given chamber \n\n\n   \n  [ ... real(%FPM_VOLUME_TARGET%, Argument) ... ] \n   \n  Argument = chamber index as given for example in KOP() or as specified by the CHAMBER-flag in the alias statements \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/FPM_PublicValues2.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.real().TwoArguments.%FPM_VOLUME_TARGET%.html", 
        "id": 629, 
        "title": "%FPM_VOLUME_TARGET%"
    }, 
    {
        "body": "\n\n%FPM_VOLUME_ACTUAL% ...  actual value of volume in a given chamber \n\n\n   \n  [ ... real(%FPM_VOLUME_ACTUAL%, Argument) ... ] \n   \n  Argument = chamber index as given for example in KOP() or as specified by the CHAMBER-flag in the alias statements \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/FPM_PublicValues2.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.real().TwoArguments.%FPM_VOLUME_ACTUAL%.html", 
        "id": 630, 
        "title": "%FPM_VOLUME_ACTUAL%"
    }, 
    {
        "body": "\n\n%FPM_VOLUME_DeletedAtMetaplanes% ...  volume reduced by deletion of FPM points at metaplanes in the current time cycle \n\n\n   \n  [ ... real(%FPM_VOLUME_DeletedAtMetaplanes%, Argument) ... ] \n   \n  Argument = chamber index as given for example in KOP() or as specified by the CHAMBER-flag in the alias statements \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/FPM_PublicValues2.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.real().TwoArguments.%FPM_VOLUME_DeletedAtMetaplanes%.html", 
        "id": 631, 
        "title": "%FPM_VOLUME_DeletedAtMetaplanes%"
    }, 
    {
        "body": "\n\n%FPM_KineticEnergy_DifferenceInOrganize% ...  change of kinetic energy in some chamber during the organization step of FPM \n\n\n   \n  [ ... real(%FPM_KineticEnergy_DifferenceInOrganize%, Argument) ... ] \n   \n  Argument = chamber index as given for example in KOP() or as specified by the CHAMBER-flag in the alias statements \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/FPM_PublicValues2.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.real().TwoArguments.%FPM_KineticEnergy_DifferenceInOrganize%.html", 
        "id": 632, 
        "title": "%FPM_KineticEnergy_DifferenceInOrganize%"
    }, 
    {
        "body": "\n\n%FPM_KineticEnergy_DifferenceInOrganize2% ...  change of kinetic energy in some chamber during organizations at the end of the time step (should be strictly zero, just to check) \n\n\n   \n  [ ... real(%FPM_KineticEnergy_DifferenceInOrganize2%, Argument) ... ] \n   \n  Argument = chamber index as given for example in KOP() or as specified by the CHAMBER-flag in the alias statements \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/FPM_PublicValues2.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.real().TwoArguments.%FPM_KineticEnergy_DifferenceInOrganize2%.html", 
        "id": 633, 
        "title": "%FPM_KineticEnergy_DifferenceInOrganize2%"
    }, 
    {
        "body": "\n\n%FPM_KineticEnergy_DifferenceInTimeStep% ...  change of kinetic energy in some chamber during the execution of the time step \n\n\n   \n  [ ... real(%FPM_KineticEnergy_DifferenceInTimeStep%, Argument) ... ] \n   \n  Argument = chamber index as given for example in KOP() or as specified by the CHAMBER-flag in the alias statements \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/FPM_PublicValues2.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.real().TwoArguments.%FPM_KineticEnergy_DifferenceInTimeStep%.html", 
        "id": 634, 
        "title": "%FPM_KineticEnergy_DifferenceInTimeStep%"
    }, 
    {
        "body": "\n\n%FPM_KineticEnergy% ...  provide total kinetic energy of a given chamber \n\n\n   \n  [ ... real(%FPM_KineticEnergy%, Argument) ... ] \n   \n  Argument = chamber index as given for example in KOP() or as specified by the CHAMBER-flag in the alias statements \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/FPM_PublicValues2.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.real().TwoArguments.%FPM_KineticEnergy%.html", 
        "id": 635, 
        "title": "%FPM_KineticEnergy%"
    }, 
    {
        "body": "\n\n%FPM_KineticEnergy_Defect_gradPv% ...  first order defect of kinetic energy during time integration due to pressure \n\n\n   \n  [ ... real(%FPM_KineticEnergy_Defect_gradPv%, Argument) ... ] \n   \n  Argument = chamber index as given for example in KOP() or as specified by the CHAMBER-flag in the alias statements \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/FPM_PublicValues2.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.real().TwoArguments.%FPM_KineticEnergy_Defect_gradPv%.html", 
        "id": 636, 
        "title": "%FPM_KineticEnergy_Defect_gradPv%"
    }, 
    {
        "body": "\n\n%FPM_KineticEnergy_Defect_rhogDv% ...  first order defect of kinetic energy during time integration due to gravity \n\n\n   \n  [ ... real(%FPM_KineticEnergy_Defect_rhogDv%, Argument) ... ] \n   \n  Argument = chamber index as given for example in KOP() or as specified by the CHAMBER-flag in the alias statements \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/FPM_PublicValues2.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.real().TwoArguments.%FPM_KineticEnergy_Defect_rhogDv%.html", 
        "id": 637, 
        "title": "%FPM_KineticEnergy_Defect_rhogDv%"
    }, 
    {
        "body": "\n\n%FPM_KineticEnergy_Defect_O2% ...  second order defect of kinetic energy during time integration \n\n\n   \n  [ ... real(%FPM_KineticEnergy_Defect_O2%, Argument) ... ] \n   \n  Argument = chamber index as given for example in KOP() or as specified by the CHAMBER-flag in the alias statements \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/FPM_PublicValues2.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.real().TwoArguments.%FPM_KineticEnergy_Defect_O2%.html", 
        "id": 638, 
        "title": "%FPM_KineticEnergy_Defect_O2%"
    }, 
    {
        "body": "\n\nrot() ...  components of rotated vector \n\n\n  The point (x,y,z) is rotated according to a defined reference point \n  (p_rot_x,p_rot_y,p_rot_z) and rotation angle (alpha_rot_x,alpha_rot_y,alpha_rot_z): \n  rot(i, x,y,z, p_rot_x,p_rot_y,p_rot_z, alpha_rot_x,alpha_rot_y,alpha_rot_z), \n  where i=1,2,3 \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/equation_parser.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.rot().html", 
        "id": 639, 
        "title": "rot()"
    }, 
    {
        "body": "\n\nsin() ...  sine  \n\n\n  [sin(a)] Computes the sine of 'a' given in radians.  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/equation_parser.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.sin().html", 
        "id": 640, 
        "title": "sin()"
    }, 
    {
        "body": "\n\nsinh() ...  hyperbolic sine  \n\n\n  [sinh(a)] Computes the hyperbolic sine of 'a'.  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/equation_parser.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.sinh().html", 
        "id": 641, 
        "title": "sinh()"
    }, 
    {
        "body": "\n\nsqrt() ...  square root \n\n\n  [sqrt(a)] Computes the square root of 'a'.  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/equation_parser.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.sqrt().html", 
        "id": 642, 
        "title": "sqrt()"
    }, 
    {
        "body": "\n\nstep() ...  step function \n\n\n  step(a) delivers 1 if abs(a)<=1 \n  step(a) delivers 0 if abs(a)>1 \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/equation_parser.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.step().html", 
        "id": 643, 
        "title": "step()"
    }, 
    {
        "body": "\n\ntan() ...  tangent  \n\n\n  [tan(a)] Computes the tangent of 'a' given in radians.  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/equation_parser.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.tan().html", 
        "id": 644, 
        "title": "tan()"
    }, 
    {
        "body": "\n\ntanh() ...  hyperbolic tangent  \n\n\n  [tanh(a)] Computes the hyperbolic tangent of 'a'.  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/equation_parser.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.tanh().html", 
        "id": 645, 
        "title": "tanh()"
    }, 
    {
        "body": "\n\nvcog() ...  \n\n\n  FPMDOCUTODO  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/equation_parser.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.vcog().html", 
        "id": 646, 
        "title": "vcog()"
    }, 
    {
        "body": "\n\nxcog() ...  \n\n\n  FPMDOCUTODO  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/equation_parser.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Functions.xcog().html", 
        "id": 647, 
        "title": "xcog()"
    }, 
    {
        "body": "\n\nOperators ...  Standard math operators \n\n\n\n\n\nList of members:\n\n\n_<_   ...  less than \n_>_  ...  greater than \n_=_  ...  equal to \n_!_  ...  not equal to \n_+_  ...  sum \n_-_  ...  difference \n_*_  ...  product \n_div_  ...  quotient \n_^_  ...  power \n_**_  ...  power \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/equation_parser.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Operators.html", 
        "id": 648, 
        "title": "Operators"
    }, 
    {
        "body": "\n\n_<_  ...  less than \n\n\n  [a<b] Result is 1 if 'a' is less than 'b' or 0 otherwise.  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/equation_parser.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Operators._<_ .html", 
        "id": 649, 
        "title": "_<_ "
    }, 
    {
        "body": "\n\n_>_ ...  greater than \n\n\n  [a>b] Result is 1 if 'a' is greater than 'b' or 0 otherwise.  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/equation_parser.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Operators._>_.html", 
        "id": 650, 
        "title": "_>_"
    }, 
    {
        "body": "\n\n_=_ ...  equal to \n\n\n  [a=b] Result is 1 if 'a' and 'b' are equal or 0 otherwise.  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/equation_parser.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Operators._=_.html", 
        "id": 651, 
        "title": "_=_"
    }, 
    {
        "body": "\n\n_!_ ...  not equal to \n\n\n  [a!b] Result is 1 if 'a' and 'b' are not equal or 0 otherwise.  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/equation_parser.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Operators._!_.html", 
        "id": 652, 
        "title": "_!_"
    }, 
    {
        "body": "\n\n_+_ ...  sum \n\n\n  [a+b] Adds the values of 'a' and 'b'. The result is the sum of 'a' and 'b'.  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/equation_parser.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Operators._+_.html", 
        "id": 653, 
        "title": "_+_"
    }, 
    {
        "body": "\n\n_-_ ...  difference \n\n\n  [a-b] Subtracts 'b' from 'a'. The result is the difference of 'a' and 'b'.  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/equation_parser.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Operators._-_.html", 
        "id": 654, 
        "title": "_-_"
    }, 
    {
        "body": "\n\n_*_ ...  product \n\n\n  [a*b] Multiplies 'a' and 'b'. The result is the product of 'a' and 'b'.  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/equation_parser.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Operators._*_.html", 
        "id": 655, 
        "title": "_*_"
    }, 
    {
        "body": "\n\n_div_ ...  quotient \n\n\n  [a/b] Divides 'a' by 'b'. The result is the quotient of 'a' and 'b'.  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/equation_parser.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Operators._div_.html", 
        "id": 656, 
        "title": "_div_"
    }, 
    {
        "body": "\n\n_^_ ...  power \n\n\n  [a^b] or [a**b] Takes 'a' to the power of 'b'.  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/equation_parser.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Operators._^_.html", 
        "id": 657, 
        "title": "_^_"
    }, 
    {
        "body": "\n\n_**_ ...  power \n\n\n  [a**b] or [a^b] Takes 'a' to the power of 'b'.  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/equation_parser.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Equations___Ucv___.Operators._**_.html", 
        "id": 658, 
        "title": "_**_"
    }, 
    {
        "body": "\n\nGeneralRemarks\n\n\n\n\n\nList of members:\n\n\nRightHandSideExpression  ...  syntax for right hand side expressions in USER_common_variables \n\n\n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.GeneralRemarks.html", 
        "id": 659, 
        "title": "GeneralRemarks"
    }, 
    {
        "body": "\n\nRightHandSideExpression ...  syntax for right hand side expressions in USER_common_variables \n\n\n   \n  Right hand side expressions are all expressions on the right of the \"=\"-sign. \n  For example, an expression in USER_common_variables could look like this: \n   \n  BC_v($...$) = (Expression0, Expression1, Expression2, ... ) \n   \n  Each of the expressions, separated by comma, can be of three different types. \n   \n  1. Arithmetic expression inbetween []-brackets: [ ... Y%ind_...% ... ], such as \n      \n     BC_v($...$) = ( ... , [ ... Y%ind_...% ... ], ... ) \n      \n   \n  2. link to an existing equation: equn{$EqnName$} \n      \n     BC_v($...$) = ( ... , equn{$EqnName$}, ... ) \n      \n     In this case, the equation needs to be defined somewhere in the input file: \n     begin_equation{$EqnName$} \n        BodyOfEquation \n     end_equation \n   \n  3. link to an existing curve: curve{$CrvName$}depvar{%ind_Var%} \n      \n     BC_v($...$) = ( ... , curve{$CrvName$}depvar{%ind_Var%}, ... ) \n      \n     In this case, the curve must be defined somewhere in the input file \n   \n     begin_curve{$CrvName$} \n        BodyOfCurve \n     end_curve \n   \n     %ind_Var% defines the quantity/entity the left column of the curve is representing. \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.GeneralRemarks.RightHandSideExpression.html", 
        "id": 660, 
        "title": "RightHandSideExpression"
    }, 
    {
        "body": "\n\nINTEGRATION ...  Integration of the simulation results \n\n\n  INTEGRATION(n) = ( %INTEGRATION_BND_DIRECT%, [Y%ind_p%+Y%ind_p_dyn%], $PostprocessTag1$, $PostprocessTag2$, $PostprocessTag3$, ... ) \n  INTEGRATION(n) = ( %INTEGRATION_BND%, [Integrand_x], [Integrand_y], [Integrand_z], $PostprocessTag1$, $PostprocessTag2$, $PostprocessTag$, ... ) \n  INTEGRATION(n) = ( %INTEGRATION_BND_DIRECT_TIME%, [Y%ind_p%+Y%ind_p_dyn%], $PostprocessTag1$, $PostprocessTag2$, $PostprocessTag3$, ... ) \n  INTEGRATION(n) = ( %INTEGRATION_BND_TIME%, [Integrand_x], [Integrand_y], [Integrand_z], $PostprocessTag1$, $PostprocessTag2$, $PostprocessTag3$, ... ) \n  INTEGRATION(n) = ( %INTEGRATION_INT%, [Integrand_x], $MaterialTag$, $AnotherMaterialTag$, ... ) \n  INTEGRATION(n) = ( %MAXIMUM_BND%, [Functional], $PostprocessTag$, $AnotherPostprocessTag$, ... ) \n  INTEGRATION(n) = ( %MINIMUM_BND%, [Functional], $PostprocessTag$, $AnotherPostprocessTag$, ... ) \n  INTEGRATION(n) = ( %AVERAGE_BND%, [Functional], $PostprocessTag$, $AnotherPostprocessTag$, ... ) \n  INTEGRATION(n) = ( %MAXIMUM_INT%, [Functional], $MaterialTag$, $AnotherMaterialTag$, ... ) \n  INTEGRATION(n) = ( %MINIMUM_INT%, [Functional], $MaterialTag$, $AnotherMaterialTag$, ... ) \n  INTEGRATION(n) = ( %AVERAGE_INT%, [Functional], $MaterialTag$, $AnotherMaterialTag$, ... ) \n  INTEGRATION(n) = ( %PUBLICVALUE%, [Functional] ) \n  INTEGRATION(n) = ( %PUBLICVALUE_TIME%, [Functional] ) \n  INTEGRATION(n) = ( %PUBLICVALUE_SUM%, [Functional] ) \n  INTEGRATION(n) = ( %PUBLICVALUE_CLOCKstatistics%, iArgument, \"NameOfStopWatch\" ) \n  INTEGRATION(n) = ( %PUBLICVALUE_CPUstatistics%, iArgument, \"NameOfStopWatch\" ) \n  INTEGRATION(n) = ( %INTEGRATION_BND_DIRECT_Proj_BND%, [Functional], $BNDPoints1$, $BNDPoints2$, $BNDPoints3$, ... ) \n  INTEGRATION(n) = ( %INTEGRATION_BND_DIRECT_TIME_Proj_BND%, [Functional], $BNDPoints1$, $BNDPoints2$, $BNDPoints3$, ... ) \n  INTEGRATION(n) = ( %INTEGRATION_FLUX%, [Functional], $PostprocessTag$, $PostprocessTag2$, ... ) \n  INTEGRATION(n) = ( %INTEGRATION_FLUX_TIME%, [Functional], $PostprocessTag$, $PostprocessTag2$, ... ) \n  INTEGRATION(n) = ( %INTEGRATION_ABSFLUX%, [Functional], $PostprocessTag$, $PostprocessTag2$, ... ) \n  INTEGRATION(n) = ( %INTEGRATION_ABSFLUX_TIME%, [Functional], $PostprocessTag$, $PostprocessTag2$, ... ) \n  INTEGRATION(n) = ( %POINT_DIRECT%, [Functional], $PostprocessTag1$, $PostprocessTag2$, ... ) \n  INTEGRATION(n) = ( %POINT_APPROXIMATE%, [Functional], $PostprocessTag1$, $PostprocessTag2$, ... ) \n\n\n\n\nList of members:\n\n\n__SelectionFeature__  ...  additional option to further select FPM points for the integration statement \n__HeaderInfoOrComments__  ...  optionally add comments to your intergration items \n%INTEGRATION_BND_DIRECT%  ...  Integration of a scalar value along pieces of boundary \n%INTEGRATION_BND%  ...  Integration of a vector valued function along pieces of boundary \n%MAXIMUM_INT%  ...  maximum of a functional based on interior FPM points \n%AVERAGE_INT%  ...  average of a functional based on interior FPM points \n%AVERAGE_BND%  ...  average of a functional based on interior FPM points \n%MINIMUM_INT%  ...  minimum of a functinal based on interior FPM points \n%MAXIMUM_BND%  ...  maximum of a functional based on boundary FPM points \n%MINIMUM_BND%  ...  minimum of a functinal based on boundary FPM points \n%POINT_DIRECT%  ...  write simple values like position, chamber index etc. of a BND_point to file \n%POINT_APPROXIMATE%  ...  approximate any given function at a BND_point by FPM interpolation \n%INTEGRATION_FLUX%  ...  time integration of a flux by simply counting the FPM-points that slip over a given control surface \n%INTEGRATION_FLUX_TIME%  ...  time integration of a flux by simply counting the FPM-points that slip over a given control surface \n%INTEGRATION_ABSFLUX%  ...  absolute value of a flux by simply counting the FPM-points that slip over a given control surface in either direction \n%INTEGRATION_ABSFLUX_TIME%  ...  time integration of the absolute value of a flux by simply 
counting the FPM-points that slip over a given control surface i eitehr direction \n%INTEGRATION_INT%  ...  volume integration of a functional over a given material \n%INTEGRATION_INT_TIME%  ...  volume and time integration of a functional over a given material \n%PUBLICVALUE_CLOCKstatistics%  ...  extract value from a given stop watch \n%PUBLICVALUE_CPUstatistics%  ...  extract value from a given stop watch \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_PerformIntegration.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.INTEGRATION.html", 
        "id": 661, 
        "title": "INTEGRATION"
    }, 
    {
        "body": "\n\n__SelectionFeature__ ...  additional option to further select FPM points for the integration statement \n\n\n  A regular integration statement would be \n   \n  INTEGRATION = ( %INTEGRATION_INT%, [functional], $MaterialTag$ ) \n   \n  This itegration would intergrate over all FPM points with the material flag $MaterialTag$. NO further selection of point possible. \n  If a more distinct selection is needed, one has the chance to use the selective integration statement. \n   \n  INTEGRATION = ( -%INTEGRATION_INT%, [functional], [SelectionFunctional], $MaterialTag$ ) \n   \n   \n  Rules: \n  - put a minus sign in front of the %INTEGRATION_...% identifier \n  - [SelectionFunctional]: to be placed at the end of all mathematical integration functionals. If SelectionFunctional>0 for an \n    FPM point, the point will be considered for the integration, otherwise it is ignored. \n  - This feature does not (yet) apply for %PUBLICVALUE...%, %POINT_...% and %INTEGRATION_FLUX...%. \n   \n  Some examples \n   \n  INTEGRATION = ( -%AVERAGE_INT%, [functional], [SelectionFunctional], $MaterialTag$ ) \n  INTEGRATION = ( -%MINIMUM_BND%, [functional], [SelectionFunctional], $BoundaryPPTag$ ) \n  INTEGRATION = ( -%INTEGRATION_BND%, [functionalx], [functionaly], [functionalz], [SelectionFunctional], $BoundaryPPTag$ ) \n   \n   \n  HINT: This is an experimental solution, as it was fast to implement. \n        In the future, the syntax of the selective integration will be improved and made consistent. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_PerformIntegration.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.INTEGRATION.__SelectionFeature__.html", 
        "id": 662, 
        "title": "__SelectionFeature__"
    }, 
    {
        "body": "\n\n__HeaderInfoOrComments__ ...  optionally add comments to your intergration items \n\n\n  Enhance a classical integration statement by header information. \n  The header text is appended to the intergration definition. \n   \n  INTEGRATION($IntInd$) = ( %INTEGRATION_spec%, value(s), $PPlist$,  %INTEGRATION_Header% , \"Some short but distinct comment\"  ) \n   \n   \n  The information will be written in the appropriate timestep-file. So, if the integration will be written in the \n  n-th column of xyz.timestep, then the header information will appread in a file with the name xyz.timestep.header \n  in the n-th line. \n   \n  Example: \n   \n  begin_timestepfile{\"MyFile\"} \n     INTEGRATION($time$) = (%PUBLICVALUE%, [real(%RealTimeSimulation%)],                                %INTEGRATION_Header%, \"current simulation time\" ) \n     INTEGRATION($Wkin$) = ( %INTEGRATION_INT%, [Y%ind_v(1)%^2+Y%ind_v(2)%^2+Y%ind_v(3)%^2, $Material$, %INTEGRATION_Header%, \"kinetic energy\" ) \n     INTEGRATION($mass$) = ( %INTEGRATION_INT%, [Y%ind_r%], $Material$,                                 %INTEGRATION_Header%, \"total mass\" ) \n     INTEGRATION($Wint$) = ( %INTEGRATION_INT%, [Y%ind_r%*Y%ind_CV%*Y%ind_T%], $Material$,              %INTEGRATION_Header%, \"internal energy\" ) \n  end_timestepfile \n   \n  This will create the file \"MyFile.timestep.header\" with the contents \n  beginOfFile ===> \n  current simulation time \n  kinetic energy \n  total mass \n  internal energy \n  <=== endOfFile \n\n\n\n\nList of members:\n\n\n%INTEGRATION_Header%  ...  item to signalize that heade information is given \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_PerformIntegration.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.INTEGRATION.__HeaderInfoOrComments__.html", 
        "id": 663, 
        "title": "__HeaderInfoOrComments__"
    }, 
    {
        "body": "\n\n%INTEGRATION_Header% ...  item to signalize that heade information is given \n\n\n   \n   \n  INTEGRATION($IntInd$) = ( %INTEGRATION_spec%, value(s), $PPlist$,  OPTIONAL: %INTEGRATION_Header% , \"Some short but distinct comment\"  ) \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_PerformIntegration.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.INTEGRATION.__HeaderInfoOrComments__.%INTEGRATION_Header%.html", 
        "id": 664, 
        "title": "%INTEGRATION_Header%"
    }, 
    {
        "body": "\n\n%INTEGRATION_BND_DIRECT% ...  Integration of a scalar value along pieces of boundary \n\n\n  Integration of a scalar function of several pieces of boundary \n   \n  INTEGRATION(n) = (%INTEGRATION_BND_DIRECT%, ExpressionOfIntegrand, $AppropriatePostprocessingFlag$, $MoreOptionalPostprocessingFlags$, ... ) \n   \n  the number (n) of integration is optional. If no number is given, the FPM counts the number of integration by its appearence in the input file \n   \n  The integrand (ExpressionOfIntegrand) can be provided by an algebraic expression in []-brackets, \n  an EquationDefinition, as well as by a CurveDefinition. \n   \n  The POSTPROCESS tags ($AppropriatePostprocessingFlag$, $MoreOptionalPostprocessingFlags$) define the IntegrationArea \n   \n  Example: \n  INTEGRATION(1) = ( %INTEGRATION_BND_DIRECT%, [Y%ind_p%+Y%ind_p_dyn%], $PostprocessTag1$, $PostprocessTag2$, $PostprocessTag3$ ) \n  INTEGRATION(1) = ( %INTEGRATION_BND_DIRECT%, equn{$EqnName$}, $PostprocessTag1$, $PostprocessTag2$, $PostprocessTag3$ ) \n  INTEGRATION(1) = ( %INTEGRATION_BND_DIRECT%, curve{$CrvName$}depvar{%ind_DepVar%}, $PostprocessTag1$, $PostprocessTag2$, $PostprocessTag3$ ) \n\n\n\n\nList of members:\n\n\nExpressionOfIntegrand  ...  Scalar expression to integrate over given partition of boundary \nIntegrationArea  ...  List of flags that mark the boundary to be integrated over \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_PerformIntegration.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.INTEGRATION.%INTEGRATION_BND_DIRECT%.html", 
        "id": 665, 
        "title": "%INTEGRATION_BND_DIRECT%"
    }, 
    {
        "body": "\n\nExpressionOfIntegrand ...  Scalar expression to integrate over given partition of boundary \n\n\n  The integrand expression should be a typical RightHandSideExpression in the scope of USER_common_variables. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_PerformIntegration.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.INTEGRATION.%INTEGRATION_BND_DIRECT%.ExpressionOfIntegrand.html", 
        "id": 666, 
        "title": "ExpressionOfIntegrand"
    }, 
    {
        "body": "\n\nIntegrationArea ...  List of flags that mark the boundary to be integrated over \n\n\n  list of $PPNames$ that all have to be defined in the alias section by the postprocessing flag of the form \"POSTPROCESS$PPName$\"  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_PerformIntegration.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.INTEGRATION.%INTEGRATION_BND_DIRECT%.IntegrationArea.html", 
        "id": 667, 
        "title": "IntegrationArea"
    }, 
    {
        "body": "\n\n%INTEGRATION_BND% ...  Integration of a vector valued function along pieces of boundary \n\n\n  Integration of a vector valued function of several pieces of boundary \n   \n   \n  INTEGRATION(n) = (%INTEGRATION_BND%, Integrand_x, Integrand_y, Integrand_z, $AppropriatePostprocessingFlag$, $MoreOptionalPostprocessingFlags$, ... ) \n   \n   \n  the number of integration (n) is optional. \n  If no number is given, the FPM counts the number of integration by its appearence in the input file \n   \n  The integral to be solved is \n     \n  where the bold n represents the local boundary normal. The integrand is u = (Integrand_x, Integrand_y, Integrand_z). \n   \n  The integrands are typical RightHandSideExpression in the scope of the input file (USER_common_variables.dat). \n   \n  The integration tags ($AppropriatePostprocessingFlag$, $MoreOptionalPostprocessingFlags$, ...) define the integration area. \n  The number of integration tags is not limited. \n   \n  Example: \n   \n  INTEGRATION(1) = ( %INTEGRATION_BND%, [Y%ind_p%+Y%ind_p_dyn%], [0], [0], $PostprocessTag1$, $PostprocessTag2$, $PostprocessTag3$ ) \n   \n  \n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_PerformIntegration.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.INTEGRATION.%INTEGRATION_BND%.html", 
        "id": 668, 
        "title": "%INTEGRATION_BND%"
    }, 
    {
        "body": "\n\n%MAXIMUM_INT% ...  maximum of a functional based on interior FPM points \n\n\n   \n  begin_alias{} \n    \"Alias1\" = \" ... MAT$MaterialTag$ ... \"  \n    \"Alias2\" = \" ... MAT$AnotherMaterialTag$ ... \"  \n  end_alias \n   \n  INTEGRATION(n) = ( %MAXIMUM_INT%, [Functional], $MaterialTag$, $AnotherMaterialTag$, ... ) \n   \n   \n  Maximum of a given functional of all FPM points belonging to a certain material index. \n   \n   \n \n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_PerformIntegration.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.INTEGRATION.%MAXIMUM_INT%.html", 
        "id": 669, 
        "title": "%MAXIMUM_INT%"
    }, 
    {
        "body": "\n\n%AVERAGE_INT% ...  average of a functional based on interior FPM points \n\n\n   \n  begin_alias{} \n    \"Alias1\" = \" ... MAT$MaterialTag$ ... \"  \n    \"Alias2\" = \" ... MAT$AnotherMaterialTag$ ... \"  \n  end_alias \n   \n  INTEGRATION(n) = ( %AVERAGE_INT%, [Functional], $MaterialTag$, $AnotherMaterialTag$, ... ) \n   \n   \n  Average of a given functional of all FPM points belonging to a certain material index. \n   \n   \n \n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_PerformIntegration.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.INTEGRATION.%AVERAGE_INT%.html", 
        "id": 670, 
        "title": "%AVERAGE_INT%"
    }, 
    {
        "body": "\n\n%AVERAGE_BND% ...  average of a functional based on interior FPM points \n\n\n   \n  begin_alias{} \n    \"Alias1\" = \" ... POSTPROCESS$PPTag$ ... \"  \n    \"Alias2\" = \" ... POSTPROCESS$AnotherPPTag$ ... \"  \n  end_alias \n   \n  INTEGRATION(n) = ( %AVERAGE_BND%, [Functional], $PPTag$, $AnotherPPTag$, ... ) \n   \n   \n  Average of a given functional of all FPM points belonging to a marked boundary area. \n   \n   \n \n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_PerformIntegration.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.INTEGRATION.%AVERAGE_BND%.html", 
        "id": 671, 
        "title": "%AVERAGE_BND%"
    }, 
    {
        "body": "\n\n%MINIMUM_INT% ...  minimum of a functinal based on interior FPM points \n\n\n   \n  begin_alias{} \n    \"Alias1\" = \" ... MAT$MaterialTag$ ... \"  \n    \"Alias2\" = \" ... MAT$AnotherMaterialTag$ ... \"  \n  end_alias \n   \n  INTEGRATION(n) = ( %MINIMUM_INT%, [Functional], $MaterialTag$, $AnotherMaterialTag$, ... ) \n   \n   \n  Minimum of a given functional of all FPM points belonging to a certain material index. \n   \n   \n \n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_PerformIntegration.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.INTEGRATION.%MINIMUM_INT%.html", 
        "id": 672, 
        "title": "%MINIMUM_INT%"
    }, 
    {
        "body": "\n\n%MAXIMUM_BND% ...  maximum of a functional based on boundary FPM points \n\n\n   \n  begin_alias{} \n    \"Alias1\" = \" ... POSTPROCESS$PPTag$ ... \"  \n    \"Alias2\" = \" ... MAT$AnotherPPTag$ ... \"  \n  end_alias \n   \n  INTEGRATION(n) = ( %MAXIMUM_BND%, [Functional], $PPTag$, $AnotherPPTag$, ... ) \n   \n   \n  Maximum of a given functional of all FPM points belonging to a marked piece of boundary. \n   \n   \n   \n \n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_PerformIntegration.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.INTEGRATION.%MAXIMUM_BND%.html", 
        "id": 673, 
        "title": "%MAXIMUM_BND%"
    }, 
    {
        "body": "\n\n%MINIMUM_BND% ...  minimum of a functinal based on boundary FPM points \n\n\n   \n  begin_alias{} \n    \"Alias1\" = \" ... POSTPROCESS$PPTag$ ... \"  \n    \"Alias2\" = \" ... MAT$AnotherPPTag$ ... \"  \n  end_alias \n   \n  INTEGRATION(n) = ( %MINIMUM_BND%, [Functional], $PPTag$, $AnotherPPTag$, ... ) \n   \n   \n  Minimum of a given functional of all FPM points belonging to a marked piece of boundary. \n   \n   \n   \n \n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_PerformIntegration.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.INTEGRATION.%MINIMUM_BND%.html", 
        "id": 674, 
        "title": "%MINIMUM_BND%"
    }, 
    {
        "body": "\n\n%POINT_DIRECT% ...  write simple values like position, chamber index etc. of a BND_point to file \n\n\n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_PerformIntegration.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.INTEGRATION.%POINT_DIRECT%.html", 
        "id": 675, 
        "title": "%POINT_DIRECT%"
    }, 
    {
        "body": "\n\n%POINT_APPROXIMATE% ...  approximate any given function at a BND_point by FPM interpolation \n\n\n  If a BND_point is active throught the simulation and has a postprocess flag, one can approximate any given function at this point by interpolation of FPM points in its neighborhood. \n  Example: \n   \n  begin_boundary_elements{} \n    BND_point ACTIVE%ACTIVE_always% CHAMBER<#CHAMBER>  POSTPROCESS$PPTag$ x y z \n  end_boundary_elements{} \n   \n   \n   \n   \n  INTEGRATION(n)=(%POINT_APPROXIMATE%,[equn($EquationTag$)], $PPTag$) \n   \n   \n  If the BND_point has no neighbors, this integration evaluates zero \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_PerformIntegration.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.INTEGRATION.%POINT_APPROXIMATE%.html", 
        "id": 676, 
        "title": "%POINT_APPROXIMATE%"
    }, 
    {
        "body": "\n\n%INTEGRATION_FLUX% ...  time integration of a flux by simply counting the FPM-points that slip over a given control surface \n\n\n   \n  begin_alias{} \n    \"AliasOmega\" = \" ...  IDENT%BND_BlindAndEmpty%  ...  POSTPROCESS$PostprocessOmega$  ... \"  \n  end_alias \n   \n  INTEGRATION = ( %INTEGRATION_FLUX%, [Functional], $PostprocessOmega$ ) \n   \n   \n  %INTEGRATION_FLUX% as well as %INTEGRATION_FLUX_TIME% works only for boundary elements marked with %BND_BlindAndEmpty%. \n  It computes the flux of a functional  in the sense \n   \n  , \n   \n  however the way of approximating this integral is simply by summing up the FPM-points that currently are penetrating through \n  the control surface , that means we have \n   \n   \n   \n  The term  accounts for the direction the FPM point goes through the control surface, \n   \n  If further dependency of the sense is required, then one could work with constructions such as \n   \n  begin_alias{} \n    \"AliasOmega\" = \" ... IDENT%BND_BlindAndEmpty%  ... POSTPROCESS$PostprocessOmega$ ... \"  \n  end_alias \n   \n  begin_construct{} \n     \"nOmega\" = CONSTRUCT( %CONSTRUCT_Normal%, \"AliasOmega\" ) \n  end_construct \n   \n  begin_equation{\"LeftOrRight\"} \n     if ( Y%ind_v(1)%*&nOmega;(1)& + Y%ind_v(2)%*&nOmega;(2)& + Y%ind_v(3)%*&nOmega;(3)& > 0 ) :: 1.0 \n     else                                                                                   :: -1.0 \n     endif \n  end_equation \n   \n  INTEGRATION = ( %INTEGRATION_FLUX%, [equn($LeftOrRight$)*(Functional)], $PostprocessOmega$ ) \n   \n  This example simply denies the dependency from the direction and integrates the net value of the integral. \n   \n  Integration without dependency of the direction of passage throught the control face is given by %INTEGRATION_ABSFLUX% and %INTEGRATION_ABSFLUX_TIME%. \n      \n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_PerformIntegration.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.INTEGRATION.%INTEGRATION_FLUX%.html", 
        "id": 677, 
        "title": "%INTEGRATION_FLUX%"
    }, 
    {
        "body": "\n\n%INTEGRATION_FLUX_TIME% ...  time integration of a flux by simply counting the FPM-points that slip over a given control surface \n\n\n   \n  This is just the time integration of %INTEGRATION_FLUX%, i.e. \n   \n   \n   \n \n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_PerformIntegration.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.INTEGRATION.%INTEGRATION_FLUX_TIME%.html", 
        "id": 678, 
        "title": "%INTEGRATION_FLUX_TIME%"
    }, 
    {
        "body": "\n\n%INTEGRATION_ABSFLUX% ...  absolute value of a flux by simply counting the FPM-points that slip over a given control surface in either direction \n\n\n   \n   \n  begin_alias{} \n    \"AliasOmega\" = \" ...  IDENT%BND_BlindAndEmpty%  ...  POSTPROCESS$PostprocessOmega$  ... \"  \n  end_alias \n   \n  INTEGRATION = ( %INTEGRATION_ABSFLUX%, [Functional], $PostprocessOmega$ ) \n   \n   \n  %INTEGRATION_ABSFLUX% as well as %INTEGRATION_ABSFLUX_TIME% work only for boundary elements marked with %BND_BlindAndEmpty%. \n  It computes the flux of a functional  in the sense \n   \n  , \n   \n  however the way of approximating this integral is simply by summing up the FPM-points that currently are penetrating through \n  the control surface , that means we have \n   \n   \n   \n  Here, the direction of penetration of an FPM point does not matter. \n     \n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_PerformIntegration.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.INTEGRATION.%INTEGRATION_ABSFLUX%.html", 
        "id": 679, 
        "title": "%INTEGRATION_ABSFLUX%"
    }, 
    {
        "body": "\n\n%INTEGRATION_ABSFLUX_TIME% ...  time integration of the absolute value of a flux by simply counting the FPM-points that slip over a given control surface i eitehr direction \n\n\n   \n  This is just the time integration of %INTEGRATION_ABSFLUX%, i.e. \n   \n   \n   \n \n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_PerformIntegration.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.INTEGRATION.%INTEGRATION_ABSFLUX_TIME%.html", 
        "id": 680, 
        "title": "%INTEGRATION_ABSFLUX_TIME%"
    }, 
    {
        "body": "\n\n%INTEGRATION_INT% ...  volume integration of a functional over a given material \n\n\n   \n  begin_alias{} \n    \"AliasOmega\" = \"  ...IDENT%BND_wall% ...  MAT$MaterialIndex$  ... BC$BCindex$ ... \"  \n  end_alias \n   \n  INTEGRATION = ( %INTEGRATION_INT%, [Functional], $MaterialIndex$ ) \n   \n   \n  %INTEGRATION_INT% as well as %INTEGRATION_INT_TIME% act on volumes, identified by a material index. \n  It computes the integral of a functional  over the region  \n   \n   \n   \n  by a sum approximation \n   \n   \n   \n  For example, in order to compute the volume of a material \n   \n  INTEGRATION = ( %INTEGRATION_INT%, [1], $MaterialIndex$ ) \n   \n  In order to compute, for example, the kinetic energy of the material, we would write \n   \n  INTEGRATION = ( %INTEGRATION_INT%, [0.5*Y%ind_r%*(Y%ind_v(1)%^2 + Y%ind_v(2)%^2 + Y%ind_v(3)%^2)], $MaterialIndex$ ) \n     \n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_PerformIntegration.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.INTEGRATION.%INTEGRATION_INT%.html", 
        "id": 681, 
        "title": "%INTEGRATION_INT%"
    }, 
    {
        "body": "\n\n%INTEGRATION_INT_TIME% ...  volume and time integration of a functional over a given material \n\n\n   \n  begin_alias{} \n    \"AliasOmega\" = \"  ...IDENT%BND_wall% ...  MAT$MaterialIndex$  ... BC$BCindex$ ... \"  \n  end_alias \n   \n  INTEGRATION = ( %INTEGRATION_INT_TIME%, [Functional], $MaterialIndex$ ) \n   \n   \n  %INTEGRATION_INT% as well as %INTEGRATION_INT_TIME% act on volumes, identified by a material index. \n  It computes the integral of a functional  over the region  \n   \n   \n   \n  by a preliminary approximation \n   \n  and a subsequent time integration \n   \n   \n  For example, in order to compute the total turbulent dissipation of some material, we would write \n  INTEGRATION = ( %INTEGRATION_INT_TIME%, [Y%ind_eps%], $MaterialIndex$ ) \n   \n   \n      \n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_PerformIntegration.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.INTEGRATION.%INTEGRATION_INT_TIME%.html", 
        "id": 682, 
        "title": "%INTEGRATION_INT_TIME%"
    }, 
    {
        "body": "\n\n%PUBLICVALUE_CLOCKstatistics% ...  extract value from a given stop watch \n\n\n  The time values given by this option refer to the current time cycle \n   \n  INTEGRATION = ( %PUBLICVALUE_CLOCKstatistics%, iArgument, \"NameOfStopWatch\" ) \n   \n   \n  iArgument == 1  : average per-particle-values of CLOCK time measured by the indicated stop watch \n  iArgument == 2  : minimum per-particle-values of CLOCK time measured by the indicated stop watch: N_MPI*min(CLOCK(1...N_MPI)/N_FPMpoints \n  iArgument == 3  : maximum per-particle-values of CLOCK time measured by the indicated stop watch: N_MPI*max(CLOCK(1...N_MPI)/N_FPMpoints \n   \n  iArgument == 4  : sum of the CLOCK-times over all MPI processes \n  iArgument == 5  : minimum CLOCK-time: N_MPI*min(CLOCK(1...N_MPI) \n  iArgument == 6  : maximum CLOCK-time: N_MPI*max(CLOCK(1...N_MPI) \n   \n  NameOfStopWatch : can be found in NamesOfStopWatches \n   \n   \n  EXAMPLE: \n   \n  begin_timestepfile{\"TimeStatistics\"} \n     INTEGRATION = (%PUBLICVALUE%, [real(%RealTimeSimulation%)])                       # this puts the time into the first column \n     INTEGRATION = ( %PUBLICVALUE_CLOCKstatistics%, 1, \"ADMIN_TIME_INTEG.ORGANIZE\" ) \n     INTEGRATION = ( %PUBLICVALUE_CLOCKstatistics%, 1, \"ADMIN_TIME_INTEG.FLIQUID\" ) \n     INTEGRATION = ( %PUBLICVALUE_CLOCKstatistics%, 2, \"ADMIN_TIME_INTEG.ORGANIZE\" ) \n     INTEGRATION = ( %PUBLICVALUE_CLOCKstatistics%, 2, \"ADMIN_TIME_INTEG.FLIQUID\" ) \n     INTEGRATION = ( %PUBLICVALUE_CLOCKstatistics%, 3, \"ADMIN_TIME_INTEG.ORGANIZE\" ) \n     INTEGRATION = ( %PUBLICVALUE_CLOCKstatistics%, 3, \"ADMIN_TIME_INTEG.FLIQUID\" ) \n  end_timestepfile \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_PerformIntegration.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.INTEGRATION.%PUBLICVALUE_CLOCKstatistics%.html", 
        "id": 683, 
        "title": "%PUBLICVALUE_CLOCKstatistics%"
    }, 
    {
        "body": "\n\n%PUBLICVALUE_CPUstatistics% ...  extract value from a given stop watch \n\n\n  The time values given by this option refer to the current time cycle \n   \n  INTEGRATION = ( %PUBLICVALUE_CPUstatistics%, iArgument, \"NameOfStopWatch\" ) \n   \n   \n  iArgument == 1 : average per-particle-values of CPU time measured by the indicated stop watch \n  iArgument == 2 : minimum per-particle-values of CPU time measured by the indicated stop watch: N_MPI*min(CPU(1...N_MPI)/N_FPMpoints \n  iArgument == 3 : maximum per-particle-values of CPU time measured by the indicated stop watch: N_MPI*max(CPU(1...N_MPI)/N_FPMpoints \n   \n  iArgument == 4 : sum of the CPU-times over all MPI processes \n  iArgument == 5 : minimum CPU-time: N_MPI*min(CPU(1...N_MPI) \n  iArgument == 6 : maximum CPU-time: N_MPI*max(CPU(1...N_MPI) \n   \n  NameOfStopWatch : can be found in NamesOfStopWatches \n   \n   \n  EXAMPLE: \n   \n  begin_timestepfile{\"TimeStatistics\"} \n     INTEGRATION = (%PUBLICVALUE%, [real(%RealTimeSimulation%)])                       # this puts the time into the first column \n     INTEGRATION = ( %PUBLICVALUE_CPUstatistics%, 1, \"ADMIN_TIME_INTEG.ORGANIZE\" ) \n     INTEGRATION = ( %PUBLICVALUE_CPUstatistics%, 1, \"ADMIN_TIME_INTEG.FLIQUID\" ) \n     INTEGRATION = ( %PUBLICVALUE_CPUstatistics%, 2, \"ADMIN_TIME_INTEG.ORGANIZE\" ) \n     INTEGRATION = ( %PUBLICVALUE_CPUstatistics%, 2, \"ADMIN_TIME_INTEG.FLIQUID\" ) \n     INTEGRATION = ( %PUBLICVALUE_CPUstatistics%, 3, \"ADMIN_TIME_INTEG.ORGANIZE\" ) \n     INTEGRATION = ( %PUBLICVALUE_CPUstatistics%, 3, \"ADMIN_TIME_INTEG.FLIQUID\" ) \n  end_timestepfile \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_PerformIntegration.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.INTEGRATION.%PUBLICVALUE_CPUstatistics%.html", 
        "id": 684, 
        "title": "%PUBLICVALUE_CPUstatistics%"
    }, 
    {
        "body": "\n\nLoops ...  loop over a block lines in the input file \n\n\n  Use (nested loops) in the input file in the same way as this work an almost all programming languages \n   \n   begin_loop {\"LoopVariable_i\", iBegin, iStep, iEnd} \n     line that might contain &LoopVariable;_i& \n      begin_loop {\"LoopVariable_j\", jBegin, jStep, jEnd} \n        line that might contain &LoopVariable;_i& and &LoopVariable;_j& \n         begin_loop {\"LoopVariable_k\", kBegin, kStep, kEnd} \n           line that might contain &LoopVariable;_i& and &LoopVariable;_j& and &LoopVariable;_k& \n         end_loop  \n      end_loop  \n   end_loop  \n   \n  The names  &LoopVariable;_i&, &LoopVariable;_j&, &LoopVariable;_k& ... are free to be chosen by the user. \n  The values iBegin, iStep, iEnd etc. have to be integers. \n   \n  A simple example to place a raster of cubes in the geometry would be \n   \n  begin_boundary_elements{} \n   \n  begin_loop{ \"iLoop\" ,1,1,18} \n     begin_loop{ \"jLoop\" ,-2,1,2} \n        BND_cube &AliasForTheCubes;& -1 -1 -1  1 1 1 rotate{0,0,0,[3*rand(1)],[3*rand(1)],[3*rand(1)]} scale{&H;_min&} offset{[ &iLoop;& *2*&H;_min&],[ &jLoop;& *2*&H;_min&],[0.6]} \n     end_loop \n  end_loop \n  end_boundary_elements \n   \n  The cubes are randomly rotated and given a regular offset. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_Ucv.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Loops.html", 
        "id": 685, 
        "title": "Loops"
    }, 
    {
        "body": "\n\nMONITORPOINTS ...  create monitor points due given conditions \n\n\n   \n  This is a feature to create pure postprocessing points in order to better understand the computed flow. \n  Monitorpoints do not take part in the numerics of the simulation, their are simply attached to the solution \n  and carry useful results. \n\n\n\n\nList of members:\n\n\nMONITORPOINTS_CREATION  ...  create monitor points due given conditions \nMONITORPOINTS_DELETION  ...  delete an existing monitor point by a set of conditions \nMONITORPOINTS_STOP  ...  delete an existing monitor point by a set of conditions \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Core/PointcloudOrganization/ORGANIZE/ORGANIZE_MonitorPoints.f90 \n\n\n\n\n\n COMPREHENSIVE EXAMPLE:  Click here  \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.MONITORPOINTS.html", 
        "id": 686, 
        "title": "MONITORPOINTS"
    }, 
    {
        "body": "\n\nMONITORPOINTS_CREATION ...  create monitor points due given conditions \n\n\n   \n  Create a monitorpoint out of an existing FPM point if a given functional (or a sequence of functionals) is positive. \n  Syntax: \n   \n  MONITORPOINTS_CREATION($Material$) = ( %MONITORPOINTS_CREATION_AtBoundary%, Functional1 [, {%AND%,%OR%}, Functional2 [, {%AND%,%OR%}, Functional3 ...] ) \n  MONITORPOINTS_CREATION($Material$) = ( %MONITORPOINTS_CREATION_Inside%, Functional1 [, {%AND%,%OR%}, Functional2 [, {%AND%,%OR%}, Functional3 ...] ) \n  MONITORPOINTS_CREATION($Material$) = ( %MONITORPOINTS_CREATION_IrreducibleFPMpoint%, Functional1 [, {%AND%,%OR%}, Functional2 [, {%AND%,%OR%}, Functional3 ...] ) \n  MONITORPOINTS_CREATION($Material$) = ( %MONITORPOINTS_CREATION_PenetrationOfBlindAndEmptyBoundary%, $iPostprocessFlag$ [, {%AND%,%OR%}, Functional2 [, {%AND%,%OR%}, Functional3 ...] ) \n   \n   \n  The monitor point obtains a unique marker in %ind_MARKER%. \n  The creation time of the point is reported in %ind_st%. \n\n\n\n\nList of members:\n\n\n%MONITORPOINTS_CREATION_AtBoundary%  ...  create monitor points due given conditions and place it AT BOUNDARY \n%MONITORPOINTS_CREATION_Inside%  ...  create monitor points due given conditions, but do not attach to boundary \n%MONITORPOINTS_CREATION_IrreducibleFPMpoint%  ...  mark FPM points to be irreducible \n%MONITORPOINTS_CREATION_PenetrationOfBlindAndEmptyBoundary%  ...  create monitor point if FPM point penetrates BND_BlindAndEmpty boundaries \nMONITORPOINTS_CREATION_FunctionEvaluation  ...  provide dedicated function values at creation time to the monitor point \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/Monitorpoints/MONITORPOINTS_CREATION.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.MONITORPOINTS.MONITORPOINTS_CREATION.html", 
        "id": 687, 
        "title": "MONITORPOINTS_CREATION"
    }, 
    {
        "body": "\n\n%MONITORPOINTS_CREATION_AtBoundary% ...  create monitor points due given conditions and place it AT BOUNDARY \n\n\n   \n  Create a monitorpoint out of an existing FPM point if a given functional (or a sequence of functionals) is positive, and attach it to the boundary. \n   \n  Syntax: \n   \n  MONITORPOINTS_CREATION($Material$) = ( %MONITORPOINTS_CREATION_AtBoundary%, Functional1 [ {%AND%,%OR%}, Functional2 [, {%AND%,%OR%}, Functional3 ...] ) \n   \n   \n  Place the new monitor point at the boundary. The monitorpoints are attached to the boundary and will move with it, if the boundary moves. \n  A monitor point is created, if the logical convolution of the functionals is true. A functional is true, if it delivers a positive value. \n   \n  Example: create monitor point if FPM point superceeds a pressure criterion OR a temperature criterion. \n   \n  MONITORPOINTS_CREATION($Material$) = ( %MONITORPOINTS_CREATION_AtBoundary%, [Y%ind_p%+Y%ind_p_dyn% > 10000], %OR%, [Y%ind_T%>100] ) \n   \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/Monitorpoints/MONITORPOINTS_CREATION.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.MONITORPOINTS.MONITORPOINTS_CREATION.%MONITORPOINTS_CREATION_AtBoundary%.html", 
        "id": 688, 
        "title": "%MONITORPOINTS_CREATION_AtBoundary%"
    }, 
    {
        "body": "\n\n%MONITORPOINTS_CREATION_Inside% ...  create monitor points due given conditions, but do not attach to boundary \n\n\n   \n  Create a monitorpoint out of an existing FPM point if a given functional (or a sequence of functionals) is positive, but do not attach it to the boundary. \n   \n  Syntax: \n   \n  MONITORPOINTS_CREATION($Material$) = ( %MONITORPOINTS_CREATION_Inside%, Functional1 [ {%AND%,%OR%}, Functional2 [, {%AND%,%OR%}, Functional3 ...] ) \n   \n   \n  Place the new monitor point at the boundary. The monitorpoints are attached to the boundary and will move with it, if the boundary moves. \n  A monitor point is created, if the logical convolution of the functionals is true. A functional is true, if it delivers a positive value. \n   \n  Example: create monitor point if FPM point is interior and superceeds a pressure criterion. \n   \n  MONITORPOINTS_CREATION($Material$) = ( %MONITORPOINTS_CREATION_Inside%, [Y%ind_p%+Y%ind_p_dyn% > 10000], %AND%, [Y%ind_kob%<2] ) \n   \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/Monitorpoints/MONITORPOINTS_CREATION.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.MONITORPOINTS.MONITORPOINTS_CREATION.%MONITORPOINTS_CREATION_Inside%.html", 
        "id": 689, 
        "title": "%MONITORPOINTS_CREATION_Inside%"
    }, 
    {
        "body": "\n\n%MONITORPOINTS_CREATION_IrreducibleFPMpoint% ...  mark FPM points to be irreducible \n\n\n   \n  The FPM-point is flagged such that FPM cannot cluster the given point with another FPM-point if the point cloud becomes dense. \n  However, all other reduction operations such as \n  - removal after boundary crossing, see %ind_dtb%, \n  - removal due to isolation status, invoked by COMP_IsolatedParticles_MinNbOfNeigh and COMP_IsolatedParticles_MinNbOfInteriorNeigh, \n  remain in place. \n   \n  Syntax: \n   \n  MONITORPOINTS_CREATION($Material$) = ( %MONITORPOINTS_CREATION_IrreducibleFPMpoint%, Functional1 [ {%AND%,%OR%}, Functional2 [, {%AND%,%OR%}, Functional3 ...] ) \n   \n   \n  The FPM point is flagged with a random positive value, the flag will be found in %ind_MARKER%. The point might be unflagged by the MONITORPOINTS_DELETION statement. \n  The user might want to define a dedicated flag, which can be done by using the MONITORPOINTS_CREATION_FunctionEvaluation statement. \n   \n  Example: flag FPM points who were just injected at inflow at time smaller than 0.1 seconds \n   \n  MONITORPOINTS_CREATION($Material$) = ( %MONITORPOINTS_CREATION_IrreducibleFPMpoint%, [Y%ind_OrganizePC(1)% = 6], %AND%, [Y%ind_time% < 0.1 ) \n   \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/Monitorpoints/MONITORPOINTS_CREATION.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.MONITORPOINTS.MONITORPOINTS_CREATION.%MONITORPOINTS_CREATION_IrreducibleFPMpoint%.html", 
        "id": 690, 
        "title": "%MONITORPOINTS_CREATION_IrreducibleFPMpoint%"
    }, 
    {
        "body": "\n\n%MONITORPOINTS_CREATION_PenetrationOfBlindAndEmptyBoundary% ...  create monitor point if FPM point penetrates BND_BlindAndEmpty boundaries \n\n\n   \n  It might be useful to monitor FPM-point penetrations through %BND_BlindAndEmpty% boundaries. This can givre a nice visualization of the impact locations. \n  Usualy, one would create an %INTEGRATION_FLUX% around these boundaries. The current option, however, does not sum up, but localize the impact events. \n   \n  Syntax: \n   \n  MONITORPOINTS_CREATION($Material$) = ( %MONITORPOINTS_CREATION_PenetrationOfBlindAndEmptyBoundary%, $iPostprocessFlag$ [ {%AND%,%OR%}, Functional2 [, {%AND%,%OR%}, Functional3 ...] ) \n   \n  A monitor point is created at the location of penetration. The monitor point is mapped to the penetrated boundary element and further moved with it. \n   The boundary HAS TO be of IDENT %BND_BlindAndEmpty% and it needs to be flagges by a POSTPROCESS flag, that flag of which is given in $iPostprocessFlag$. \n   \n  Example: \n   \n  MONITORPOINTS_CREATION($Material$) = ( %MONITORPOINTS_CREATION_PenetrationOfBlindAndEmptyBoundary%, $iPP$, %AND%, [Y%ind_time% > 10.0 ) \n   \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/Monitorpoints/MONITORPOINTS_CREATION.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.MONITORPOINTS.MONITORPOINTS_CREATION.%MONITORPOINTS_CREATION_PenetrationOfBlindAndEmptyBoundary%.html", 
        "id": 691, 
        "title": "%MONITORPOINTS_CREATION_PenetrationOfBlindAndEmptyBoundary%"
    }, 
    {
        "body": "\n\nMONITORPOINTS_CREATION_FunctionEvaluation ...  provide dedicated function values at creation time to the monitor point \n\n\n   \n  At the moment of creation of a monitor point, give values to some predefined indices of the monitor point. This is optional. \n  In general, the values of the mother-FPM-point will be inherited to the moniotor point. \n  Syntax: \n   \n  MONITORPOINTS_CREATION_FunctionEvaluation($Material$) = ( %ind_xyz%, expression [,%ind_abc%, expression2 ...] ) \n   \n  The indices %ind_abc%, %ind_xyz% are classical FPM-index variables as given in Indices. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/Monitorpoints/MONITORPOINTS_CREATION_FunctionEvaluation.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.MONITORPOINTS.MONITORPOINTS_CREATION.MONITORPOINTS_CREATION_FunctionEvaluation.html", 
        "id": 692, 
        "title": "MONITORPOINTS_CREATION_FunctionEvaluation"
    }, 
    {
        "body": "\n\nMONITORPOINTS_DELETION ...  delete an existing monitor point by a set of conditions \n\n\n   \n  delete a monitor point if a given functional (or a sequence of functionals) is positive. \n  Syntax: \n   \n  MONITORPOINTS_DELETION($Material$) = ( Functional1 [ {%AND%,%OR%}, Functional2 [, {%AND%,%OR%}, Functional3 ...] ] ) \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/Monitorpoints/MONITORPOINTS_DELETION_Check.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.MONITORPOINTS.MONITORPOINTS_DELETION.html", 
        "id": 693, 
        "title": "MONITORPOINTS_DELETION"
    }, 
    {
        "body": "\n\nMONITORPOINTS_STOP ...  delete an existing monitor point by a set of conditions \n\n\n   \n  Stop a monitor point, i.e. no movement anymore. If a monitorpoint is stopped, there is, yet, no way to again let it move. \n  Syntax: \n   \n  MONITORPOINTS_STOP($Material$) = ( Functional1 [ {%AND%,%OR%}, Functional2 [, {%AND%,%OR%}, Functional3 ...] ] ) \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/Monitorpoints/MONITORPOINTS_STOP_Check.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.MONITORPOINTS.MONITORPOINTS_STOP.html", 
        "id": 694, 
        "title": "MONITORPOINTS_STOP"
    }, 
    {
        "body": "\n\nMOVE ...  move parts of the boundary by explicit statement \n\n\n   \n  MOVE($MOVE_index$) = ( %MOVE_position%, xPosition, yPosition, zPosition ) \n  MOVE($MOVE_index$) = ( %MOVE_velocity%, xVelocity, yVelocity, zVelocity ) \n  MOVE($MOVE_index$) = ( %MOVE_rotation%, xCenter, yCenter, zCenter, xOmega, yOMega, zOmega ) \n  MOVE($MOVE_index$) = ( %MOVE_TranslationRotation%, xCenterInit, yCenterInit, zCenterIniz, $MOVE_IndexForCenter$, xOmega, yOMega, zOmega ) \n  MOVE($MOVE_index$) = ( %MOVE_rigid%, ... ) \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n\n\n\n\nList of members:\n\n\n%MOVE_position%  ...  give s time sequence of positions which is to be followed by the geometry \n%MOVE_rotation%  ...  prescribe a rotation movement \n%MOVE_velocity%  ...  prescribe a movement by given velocity \n%MOVE_rigid%  ...  rigid body movement (translation and rotation) due to acting forces of the flow \n%MOVE_TranslationRotation%  ...  prescribe a translation with rotation on top of it \n%MOVE_vertuschka%  ...  special setting for VERTUSCHKA, a specific scientific laboratory test in geo mechanics \n%MOVE_ElasticBeam%  ...  special setting for a beam-like structure that moves like a dmaped elastic beam \n%MOVE_ProjectionOfMovementOfAnotherPart%  ...  boundary elements will follow the movement of a defined geometry part \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_update_boundary_particles.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.MOVE.html", 
        "id": 695, 
        "title": "MOVE"
    }, 
    {
        "body": "\n\n%MOVE_position% ...  give s time sequence of positions which is to be followed by the geometry \n\n\n   \n  MOVE($MOVE_index$) = ( %MOVE_position%, xPosition, yPosition, zPosition ) \n   \n   \n  Give time dependent sequqnces of x-, y-, z-coordinates. They form a sample path, the whole geometry moves \n  along this sample path. \n   \n  Example: \n   \n   \n  MOVE($MOVE_index$) = ( %MOVE_position%, [sin(Y%ind_time%)], [-cos(Y%ind_time%)], 0 ) \n   \n   \n  which forms a movement of the given geometry on a circular curve. \n   \n  Another example: It is possible to also use curves in the sense \n   \n  MOVE($MOVE_index$) = ( %MOVE_position%, curve{$CURVE_xPos$}depvar{0}, curve{$CURVE_yPos$}depvar{0}, curve{$CURVE_zPos$}depvar{0} ) \n   \n   \n  where the curves implement the time sequence of the x-,y-, z-component of the sample movement. \n   \n  Data caching can be invoked by \n   \n  MOVE($MOVE_index$) = ( %MOVE_position%, xPosition, yPosition, zPosition,  %MOVE_InvokeDataCaching%  ) \n   \n  similar to %MOVE_velocity% . See there as well. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_update_boundary_particles.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.MOVE.%MOVE_position%.html", 
        "id": 696, 
        "title": "%MOVE_position%"
    }, 
    {
        "body": "\n\n%MOVE_rotation% ...  prescribe a rotation movement \n\n\n   \n  MOVE($MOVE_index$) = ( %MOVE_rotation%, xCenter, yCenter, zCenter, xOmega, yOmega, zOmega ) \n   \n   \n  The point (xCenter, yCenter, zCenter) for the point around which the rotation is performed. \n  This center can be modeled by equations as well as curves. The unit is meters. \n   \n  The rotation vector is given by (xOmega, yOmega, zOmega). The unit is 1/s (radiants per second), that means \n  if the magnitude of this vector takes a value of 6.2831852, then that prescribes one revolution per second. \n   \n  The direction of (xOmega, yOmega, zOmega) represent the rotation axis. \n   \n  Data caching can be invoked if the rotation is not dependent on space variables, only on time. \n   \n  MOVE($MOVE_index$) = ( %MOVE_rotation%, xCenter, yCenter, zCenter, xOmega, yOmega, zOmega,  %MOVE_InvokeDataCaching%  ) \n   \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_update_boundary_particles.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.MOVE.%MOVE_rotation%.html", 
        "id": 697, 
        "title": "%MOVE_rotation%"
    }, 
    {
        "body": "\n\n%MOVE_velocity% ...  prescribe a movement by given velocity \n\n\n   \n  MOVE($MOVE_index$) = ( %MOVE_velocity%, xVelocity, yVelocity, zVelocity ) \n   \n   \n  The vector (xVelocity, yVelocity, zVelocity) represents the current translation speed and direction of the given geometry item. \n  The unit is m/s. The components xVelocity, yVelocity, zVelocity can be modeled as typical RightHandSideExpression, i.e. \n  They are subject to curve or equation modelling. \n   \n  Data caching can be invoked if the velocity given is not dependent on the space variables, but only on time: \n   \n  MOVE($MOVE_index$) = ( %MOVE_velocity%, xVelocity, yVelocity, zVelocity,  %MOVE_InvokeDataCaching%  ) \n   \n  The user has to decide. FPM could check, but it would mean to check every node point of the geometry in every time cycle for space dependence, \n  which could be costly depending on the geometry model. \n   \n   \n   \n   \n   \n   \n   \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_update_boundary_particles.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.MOVE.%MOVE_velocity%.html", 
        "id": 698, 
        "title": "%MOVE_velocity%"
    }, 
    {
        "body": "\n\n%MOVE_rigid% ...  rigid body movement (translation and rotation) due to acting forces of the flow \n\n\n   \n  MOVE($MOVE_index$) = ( %MOVE_rigid%, ... ) \n   \n   \n  Description to follow... \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_update_boundary_particles.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.MOVE.%MOVE_rigid%.html", 
        "id": 699, 
        "title": "%MOVE_rigid%"
    }, 
    {
        "body": "\n\n%MOVE_TranslationRotation% ...  prescribe a translation with rotation on top of it \n\n\n   \n  MOVE($MOVE_index$) = ( %MOVE_TranslationRotation%, xCenterInit, yCenterInit, zCenterIniz, $MOVE_Center$, xOmega, yOmega, zOmega,  [OPTIONAL: %MOVE_VirtualRotation%] ,  [OPTIONAL: %MOVE_InvokeDataCaching%]  ) \n  MOVE($MOVE_Center$) = ( %MOVE_...%, AnythingCanBeHere, ... ) \n   \n   \n  The vector (xCenterInit, yCenterInit, zCenterIniz) isrepresents the initial center of rotation of this movement statement. \n  This center of rotation then is translated by the movement described in an additional MOVE-statement (here: $MOVE_Center$), that is compulsory. \n   \n  The geometry item will be translated with the movement defined in $MOVE_Center$. On top of it, a rigid rotation is applied, \n  about the current center of rotation, together with the rotation vector (xOmega, yOMega, zOmega) \n   \n  Example: a rolling wheel for example could be modeled like this: \n   \n  MOVE($MOVE_index$) = ( %MOVE_TranslationRotation%, 0,0,1, $MOVE_Center$, 0, 6.2831852, 0 ) \n  MOVE($MOVE_Center$) = ( %MOVE_velocity%, 6.2831852, 0,0 ) \n   \n  A wheel with radius 1 meter, the center of which originally at (0,0,1), moves forward in x-direction with a speed of 6.2831852 m/s, \n  the rotation is put accordingly (0, 6.2831852, 0), such that it turns out to be a rolling movement with 1 rotation per second. \n   \n  OPTION: \n   \n  MOVE($MOVE_index$) = ( %MOVE_TranslationRotation%, 0,0,1, $MOVE_Center$, 0, 6.2831852, 0,  %MOVE_VirtualRotation%  ) \n  MOVE($MOVE_Center$) = ( %MOVE_velocity%, 6.2831852, 0,0 ) \n   \n  In some cases, for instance for deformed tyres, one does not actually want to rotate the tyre, but only apply the \n  rotation boundary condition to the flow. If the tyre would rotate, the deformation would rotate as well, such that \n  it would have to be recomputed in every time cycle. \n  The %MOVE_VirtualRotation% lets the tyre translate with $MOVE_Center$, but not rotate. For the velocity boundary conditions, however, \n  the rotational speed is provided. That especially refers to the following BC_v - conditions: %BND_wall_nosl%, %BND_wall%, %BND_slip%. \n   \n   \n  MOVE($MOVE_index$) = ( %MOVE_TranslationRotation%, 0,0,1, $MOVE_Center$, 0, 6.2831852, 0,  Something ,  %MOVE_InvokeDataCaching%  ) \n   \n  also leads to data caching, which improves performance for big data set (geometry), if their movement depends on time only (and not on space data) \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_update_boundary_particles.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.MOVE.%MOVE_TranslationRotation%.html", 
        "id": 700, 
        "title": "%MOVE_TranslationRotation%"
    }, 
    {
        "body": "\n\n%MOVE_vertuschka% ...  special setting for VERTUSCHKA, a specific scientific laboratory test in geo mechanics \n\n\n   \n  MOVE($MOVE_index$) = ( %MOVE_vertuschka%, aExtension, bExtension, omega ) \n   \n  formulation for original ellipsoid: \n   \n  with \n  aExtension =  \n  bExtension =  \n  omega = rotation speed in 1/s \n   \n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_update_boundary_particles_V2.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.MOVE.%MOVE_vertuschka%.html", 
        "id": 701, 
        "title": "%MOVE_vertuschka%"
    }, 
    {
        "body": "\n\n%MOVE_ElasticBeam% ...  special setting for a beam-like structure that moves like a dmaped elastic beam \n\n\n   \n  MOVE($MOVE_index$) = ( %MOVE_ElasticBeam%, $MoveFlagFromWhereToTakeForces$ ) \n   \n  All FPM points who belong to a boundary which is flagged with MOVE $MoveFlagFromWhereToTakeForces$ will contribute to the force computation / projection \n  of the elastic beam. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_update_boundary_particles_V2.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.MOVE.%MOVE_ElasticBeam%.html", 
        "id": 702, 
        "title": "%MOVE_ElasticBeam%"
    }, 
    {
        "body": "\n\n%MOVE_ProjectionOfMovementOfAnotherPart% ...  boundary elements will follow the movement of a defined geometry part \n\n\n   \n  MOVE($MOVE_index$) = ( %MOVE_ProjectionOfMovementOfAnotherPart%, $MOVE_GivenMoveFlag$ ) \n   \n   \n  A simple example would be \n   \n  begin_alias{} \n A1\" = \" ... MOVE$MOVE_A1$ ...  \n A2\" = \" ... MOVE$MOVE_A2$ ...  \n  end_alias \n   \n  MOVE($MOVE_A1$) = ( %MOVE_TranslationRotation%, ... ) \n  MOVE($MOVE_A2$) = ( %MOVE_ProjectionOfMovementOfAnotherPart%, $MOVE_A1$ ) \n   \n  The movement of $MOVE_A1$ is mapped to the elements identified by $MOVE_A2$. Simple geometry mapping (perpendicular projection) is used. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_update_boundary_particles_V2.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.MOVE.%MOVE_ProjectionOfMovementOfAnotherPart%.html", 
        "id": 703, 
        "title": "%MOVE_ProjectionOfMovementOfAnotherPart%"
    }, 
    {
        "body": "\n\nNumericalControl\n\n\n\n\n\nList of members:\n\n\nENFORCE_min_max  ...  set lower and upper bound for any FPM-variable \nENFORCE_min_max_RejectLinearSolution  ...  rejection of the solution of a sparse linear system if minimum-maximum criteria are not fulfilled \n\n\n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.NumericalControl.html", 
        "id": 704, 
        "title": "NumericalControl"
    }, 
    {
        "body": "\n\nENFORCE_min_max ...  set lower and upper bound for any FPM-variable \n\n\n   \n  In order to assure some minimum and maximum conditions, one is able to restrict the solution to any FPM variable by \n   \n  ENFORCE_min_max($Material$,%ind_Variable%)   = ( minNotToBeUndercut, maxNotToBeExceeded,  OPTIONAL: slopeNotToBeExceeded  ) \n   \n  FPM simply cuts the solution of the given variable after a time step is completed. \n   \n  minNotToBeUndercut   : FPM cuts the function values in the sense f_i = max( f_i , minNotToBeUndercut ) \n  maxNotToBeExceeded   : FPM cuts the function values in the sense f_i = min( f_i , maxNotToBeExceeded ) \n  slopeNotToBeExceeded : FPM smoothes the function such that norm_2(grad(f)) <= slopeNotToBeExceeded . \n   \n  Equivalent to CODI_min_max. \n  See also ENFORCE_min_max_RejectLinearSolution. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/GT_CoDi.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.NumericalControl.ENFORCE_min_max.html", 
        "id": 705, 
        "title": "ENFORCE_min_max"
    }, 
    {
        "body": "\n\nENFORCE_min_max_RejectLinearSolution ...  rejection of the solution of a sparse linear system if minimum-maximum criteria are not fulfilled \n\n\n  In USER_common_variables.dat, the statement \n   \n  ENFORCE_min_max_RejectLinearSolution($MaterialIndex$, %ind_Entity%) = ( MinimumNotToBeSubceeded, MaximumNotToBeExceeded ) \n   \n  leads to a particlewise definition of the accepted minima, maxima of the solution to a sparse linear system. \n  If the given minima or maxima are exceeded for one or more particles, then the whole linear solution is rejected for the current time step \n  Currently, only the pressure entities %ind_p%, %ind_p_dyn%, and %ind_c% (hydrostatic, dynamic, correction pressures) are supported. \n  Equivalent to CODI_min_max_RejectLinearSolution \n  See also ENFORCE_min_max. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/GT_CoDi.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.NumericalControl.ENFORCE_min_max_RejectLinearSolution.html", 
        "id": 706, 
        "title": "ENFORCE_min_max_RejectLinearSolution"
    }, 
    {
        "body": "\n\nPhysicalProperties ...  define physical properties like density, viscosity, surface tension, \n\n\n\n\n\nList of members:\n\n\nsigma  ...  surface tension [N/m] \nlambda  ...  thermal conductivity [W/(m*K)] \ncv  ...  specific heat of the material in kJ/(kg*K) \neta  ...  viscosity definition [Pa*s] \nmue  ...  shear modulus definition [Pa] \ndensity  ...  material density [kg/m^3] \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/GT_mue_on_cons.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.PhysicalProperties.html", 
        "id": 707, 
        "title": "PhysicalProperties"
    }, 
    {
        "body": "\n\nsigma ...  surface tension [N/m] \n\n\n   \n  sigma($Material$) = RightHandSideExpression \n   \n   \n  Alternatively \n   \n  surfacetension($Material$) = RightHandSideExpression \n   \n   \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/GT_mue_on_cons.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.PhysicalProperties.sigma___PHYP___.html", 
        "id": 708, 
        "title": "sigma___PHYP___"
    }, 
    {
        "body": "\n\nlambda ...  thermal conductivity [W/(m*K)] \n\n\n   \n  lambda($Material$) = RightHandSideExpression \n   \n   \n  Alternatively \n   \n  thermalconduction($Material$) = RightHandSideExpression \n   \n   \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/GT_mue_on_cons.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.PhysicalProperties.lambda___PHYP___.html", 
        "id": 709, 
        "title": "lambda___PHYP___"
    }, 
    {
        "body": "\n\ncv ...  specific heat of the material in kJ/(kg*K) \n\n\n   \n  cv($Material$) = RightHandSideExpression \n   \n   \n  Alternatively \n   \n  specificheat($Material$) = RightHandSideExpression \n   \n   \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/GT_mue_on_cons.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.PhysicalProperties.cv___PHYP___.html", 
        "id": 710, 
        "title": "cv___PHYP___"
    }, 
    {
        "body": "\n\neta ...  viscosity definition [Pa*s] \n\n\n   \n  eta($Material$) = RightHandSideExpression \n   \n   \n  Alternatively \n   \n  viscosity($Material$) = RightHandSideExpression \n   \n   \n   \n   \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/GT_mue_on_cons.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.PhysicalProperties.eta___PHYP___.html", 
        "id": 711, 
        "title": "eta___PHYP___"
    }, 
    {
        "body": "\n\nmue ...  shear modulus definition [Pa] \n\n\n  This value refers to the parameter  in the StressTensorAlgorithm . \n  We have, in fact, the following options: \n \n\n\n\nList of members:\n\n\nPureElastic  ...  give value for the elastic modulus \nJohnsonCook  ...  Johnson-Cook model  \nGeneralYieldStress  ...  provide a genreal formulation/model of the yield stress  \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/GT_mue_on_cons.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.PhysicalProperties.mue___PHYP___.html", 
        "id": 712, 
        "title": "mue___PHYP___"
    }, 
    {
        "body": "\n\nPureElastic ...  give value for the elastic modulus \n\n\n  pure elastic material behavior \n   \n  mue($Material$) = value \n   \n  value : is a classical RightHandSideExpression . \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/GT_mue_on_cons.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.PhysicalProperties.mue___PHYP___.PureElastic.html", 
        "id": 713, 
        "title": "PureElastic"
    }, 
    {
        "body": "\n\nJohnsonCook ...  Johnson-Cook model  \n\n\n  Material behavior following the Johnson-Cook model \n   \n  mue($Matflag$)= ( %MED_JOHNSON_COOK%, mue0, A, B, n, C, m, Tm, T0 [, Relax]) \n   \n  A, B, n, C, m, Tm, T0: definition of the yield stress motivated by the Johnson-Cook model, given by the equation \n                          \n   \n  mue0                 : is the shear modulus in regions of linear elastic stress (before reaching yield stress). \n   \n  Relax                : is a parameter in [0,1] for the upper bound of the rate of change of the stresses: \n                         Relax=0.3 means that the stresses are allowed to change by 30% from one time step to the next \n   \n  All values to be given are subject to RightHandSideExpression . \n \n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/GT_mue_on_cons.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.PhysicalProperties.mue___PHYP___.JohnsonCook.html", 
        "id": 714, 
        "title": "JohnsonCook"
    }, 
    {
        "body": "\n\nGeneralYieldStress ...  provide a genreal formulation/model of the yield stress  \n\n\n  General definition of yield stress by curves or equations depending on the simulation results \n   \n  mue($Matflag$)= ( %MED_YIELDSTRESS%, mue0, Syield [, Relax]) \n   \n  Syield               : equation or curve defining the yield stress depending on any parameter, see General and LIQUID . \n   \n  mue0                 : is the shear modulus in regions of linear elastic stress (before reaching yield stress). \n   \n  Relax                : is a parameter in [0,1] for the upper bound of the rate of change of the stresses: \n                         Relax=0.3 means that the stresses are allowed to change by 30% from one time step to the next \n   \n  All values to be given are subject to Subject to RightHandSideExpression . \n   \n   \n  In order to exctract a proper  to be used to integrate the stress tensor by the StessTensorAlgorithm , \n  the expression for Syield is numerically differentiated with respect to the plastic strain, i.e. \n   (see %ind_eps_plastic%) . \n  Therefore be sure to provide a positive correspondance between Syield and %ind_eps_plastic% \n  \n\n\n\nList of members:\n\n\nDruckerPragerModel  ...  use the GeneralYieldStress functionality to derive behavior of granular materials \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/GT_mue_on_cons.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.PhysicalProperties.mue___PHYP___.GeneralYieldStress.html", 
        "id": 715, 
        "title": "GeneralYieldStress"
    }, 
    {
        "body": "\n\nDruckerPragerModel ...  use the GeneralYieldStress functionality to derive behavior of granular materials \n\n\n  The Drucker-Prager model provides a yield stress depending on the pressure. \n   \n   \n  Numerically, we require some stability constraints: \n   \n  1.) limit the change of the yield stress from one time step to the next by filtering (value of alpha): \n   \n   \n   \n  2a.) Provide sufficient numerical viscosity (see StressTensorAlgorithm) by imposing an effective  dependent on the plastic strain, i.e. inhance the yield stress formulation \n        \n  2b.) Alternatively, provide a sufficient viscosity of the form \n        \n   \n  Following an example of USER_common_variables code how to put into praxis a Drucker-Prager model. \n   #UCVCODE \n  ################################################################# \n  # Sand model by Drucker-Prager \n   ################################################################# \n   \n   #ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc \n   #    parameter defintions \n   #ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc \n   \n   begin_alias{} \n   #---------------------------------------------------------------- \n     \"CoeffDruckerPrager\"                     = \"2.0\"                  # coefficient defining theinclination angle: gamma_incl = atan(CoeffDruckerPrager) \n     \"mueElastic\"                             = \"1.0e+7\"               # elastic shear modulus [Pa] \n     \"viscosity\"                              = \"0.1\"                  # natural viscosity of the material [Pa*s] \n     \"CoeffEta\"                               = \"1.0e-4\"               # coefficient to artificially increase the natural viscosity (stability considerations) \n     \"CoeffMue\"                               = \"1.0e-2\"               # slope of Syield versus %ind_eps_plastic%, -> implicitly define efficient shear modulus \n     \"SyieldMin\"                              = \"1.0\"                  # give a minimum of yield stress (1 Pa in this case) \n     \"SyieldMax\"                              = \"1.0e6\"                # give a maximum (cutoff) of yield stress (1 Pa in this case) \n     \"FictitiousShiftInYieldStress\"           = \"0.0\"                  # ficticious yield stress partition Pascal \n     \"alpha\"                                  = \"0.5\"                  # yield stress to be changed only by 50% from one time step to the next one. \n                                                                       # If alpha==1, then the yield stress can change without limit, if alpha==0, the yield stress will not change at all \n   #---------------------------------------------------------------- \n     \"density\"                                = \"1542\"                 # density in kg/m^3 \n   #---------------------------------------------------------------- \n   end_alias \n   \n   #ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc \n   #    model equations \n   #ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc \n   begin_equation{$ElasticShearModulus$} \n      &mueElastic;&*equn($MappingStress$) \n   end_equation \n   \n   # original yield stress after Drucker-Prager equation, make sure that yield stress is >= 0 \n   begin_equation{$YieldOrig$} \n      if ( Y%ind_kob% = %BND_free% ) :: max( &CoeffDruckerPrager;&*(                           Y%ind_addvar(2)%) + &FictitiousShiftInYieldStress;&*equn($MappingStress$), 0 ) #reset the yield stress at free surface boundaries \n      else                           :: max( &CoeffDruckerPrager;&*(Y%ind_p% + Y%ind_p_dyn% + Y%ind_addvar(2)%) + &FictitiousShiftInYieldStress;&*equn($MappingStress$), 0 ) # yield stress for interior and regular wall boundaries \n      endif \n   end_equation \n   \n   # preliminary yield stress: Syield_max = max( (1-alpha)*Syield_old + alpha*SyieldOrig ) -> this is kind of a two step filtering \n   begin_equation{$YieldBar$} \n      (1-\u03b1&)*Y%ind_addvar(1)% + \u03b1&*equn($YieldOrig$)         #Y%
ind_addvar(1)% is the effective yield stress from the previous time step \n   end_equation \n   \n   # upper bound for the yield stress in the current time step (cut off): Syield_max \n   begin_equation{$YieldMax$} \n      &SyieldMax;&*equn($MappingStress$) \n   end_equation \n   \n   # lower bound for the yield stress in the current time step: Syield_min = (1-alpha)*Syield_old \n   begin_equation{$YieldMin$} \n      max( (1-\u03b1&)*Y%ind_addvar(1)% , &SyieldMin;&*equn($MappingStress$) ) \n   end_equation \n   \n   # yield stress to be used in the current time step \n   # the minimum and maximum yield stresses result from the fact that \u03b1& restricts the change of the yield stress from timestep to timestep \n   # the outer min results from the drucker prager model \n   begin_equation{$Yield$} \n      max( min(equn($YieldBar$),equn($YieldMax$)) , equn($YieldMin$) ) \n   end_equation \n   \n    # compute norm(v) \n   begin_equation{$vNorm$} \n      sqrt( Y%ind_v(1)%^2 + Y%ind_v(2)%^2 + Y%ind_v(3)%^2 ) + 0.001    # give a small additional valuein order to avoid division by zero \n   end_equation \n   \n   \n   #ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc \n   #    model definition \n   #ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc \n   \n   # the yield stress function has to depend on the plastic deformations, such that d(Syield)/d(EpsPlastic) > 0, \n   # otherwise the numerical scheme becomes (theoretically) unstable \n   mue($Mat1$)        = ( %MED_YIELDSTRESS% , [equn($ElasticShearModulus$)], [equn($Yield$) + &CoeffMue;&*equn($Yield$)*Y%ind_eps_plastic%], \u03b1&) \n   eta($Mat1$)        = ([equn($Yield$)*(Y%ind_h%/equn($vNorm$))*&CoeffEta;& + &viscosity;&*equn($MappingViscosity$)]) \n   density($Mat1$)    = [&density;&*equn($MappingDensity$)] \n   \n   \n   #ccccccccccccccccccccccccccccccccccccccccccccccccccc \n   #    equations to support the Drucker-Prager model \n   #ccccccccccccccccccccccccccccccccccccccccccccccccccc \n   CODI_eq($Mat1$, %ind_addvar(1)%)     = [equn($Yield$)]              # keep in mind the yield stress of this time step in the index ind_addvar(1), thus for the next time cycle, we know what was the previous yield stress \n   CODI_eq($Mat1$, %ind_addvar(2)%)     = 0.0                          # this item can be used in order to decrease the pre-compression if chosen nonzero at the beginning \n   CODI_eq($Mat1$, %ind_eps_plastic%)   = 1.0                          # reset the total plastic deformation to a constant value, as it is of no importance for the Drucker-Prager model \n   \n   INITDATA($Mat1$,%ind_addvar(1)%)     = 0                            # initialize help variable \n   INITDATA($Mat1$, %ind_addvar(2)%)    = [0.0*equn($MappingStress$)]  # pre-compression initialization \n  UCVCODE#  \n      \n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/GT_mue_on_cons.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.PhysicalProperties.mue___PHYP___.GeneralYieldStress.DruckerPragerModel.html", 
        "id": 716, 
        "title": "DruckerPragerModel"
    }, 
    {
        "body": "\n\ndensity ...  material density [kg/m^3] \n\n\n   \n  density($Material$) = RightHandSideExpression \n   \n   \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/GT_rho_on_T_LIQUID.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.PhysicalProperties.density___PHYP___.html", 
        "id": 717, 
        "title": "density___PHYP___"
    }, 
    {
        "body": "\n\nRESTART\n\n\n\n\n\nList of members:\n\n\nLaunchRestart  ...  launch FPM on the basis of a restart file \nRestartStepSize  ...  define after how many time cycles a restart file has to be generated \nDefineRestart  ...  save restart files \n\n\n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.RESTART.html", 
        "id": 718, 
        "title": "RESTART"
    }, 
    {
        "body": "\n\nLaunchRestart ...  launch FPM on the basis of a restart file \n\n\n   \n   \n  Restart = m \n   \n  default: Restart = 0 (do not launch by restart file, but start from the beginning) \n   \n  m has to be the ordinal number of the restart file. \n  The example in the frame would launch FPM based on the restart file with the number m. \n  In fact, the restart files are to be found in the result directory SAVE_path. They have the name pattern \n  SAVE_file.restart_mmmm \n  For example, if \"Restart=17\", the restart file would be  SAVE_path/SAVE_file.restart_0017  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/Save/USER_save_data.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.RESTART.LaunchRestart.html", 
        "id": 719, 
        "title": "LaunchRestart"
    }, 
    {
        "body": "\n\nRestartStepSize ...  define after how many time cycles a restart file has to be generated \n\n\n   \n  Defines the frequency and type of writing restart files. There are two different types. \n  %RESTART_sequence% produces consecutively numbered restart files. \n  %RESTART_single% overwrites the restart file each time. \n  See also DefineRestart. \n   \n   \n  RestartStepSize = ( 100, %RESTART_sequence% ) \n  RestartStepSize = ( 100, %RESTART_single% ) \n   \n   \n   \n\n\n\n\nList of members:\n\n\n%RESTART_sequence%  ...  define a sequence of restart files \n%RESTART_single%  ...  define the production of a single restart file \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/Save/USER_save_data.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.RESTART.RestartStepSize.html", 
        "id": 720, 
        "title": "RestartStepSize"
    }, 
    {
        "body": "\n\n%RESTART_sequence% ...  define a sequence of restart files \n\n\n   \n   \n  RestartStepSize = ( 100, %RESTART_sequence% ) \n   \n   \n  Every 100 time cycles, a new restart file is created. The restart files are numbered consecutively. \n  SAVE_file.restart_0001, SAVE_file.restart_0002, SAVE_file.restart_0003, ... \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/Save/USER_save_data.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.RESTART.RestartStepSize.%RESTART_sequence%___Restart___.html", 
        "id": 721, 
        "title": "%RESTART_sequence%___Restart___"
    }, 
    {
        "body": "\n\n H\n\n\n HowToTreatPause                                                  ... \n HydrostaticPressure                                              ...  hydrostatic pressure derived from momentum equation \n HydrostaticPressureAlgorithm                                     \n\n\n\n\n", 
        "url": "../Index. H.html", 
        "id": 722, 
        "title": " H"
    }, 
    {
        "body": "\n\n%RESTART_single% ...  define the production of a single restart file \n\n\n   \n   \n  RestartStepSize = ( 100, %RESTART_single% ) \n   \n   \n  Every 100 time cycles, a new restart file is created. The new file replaces the old one. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/Save/USER_save_data.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.RESTART.RestartStepSize.%RESTART_single%___Restart___.html", 
        "id": 723, 
        "title": "%RESTART_single%___Restart___"
    }, 
    {
        "body": "\n\nDefineRestart ...  save restart files \n\n\n   \n  The write-out of restart files is defined by RestartStepSize (see below). \n   \n  Example: \n   \n  restart = (00) \n  RestartStepSize = ( 100, %RESTART_sequence% ) \n   \n  Write a restart file every 100 time cycles. The restart files are numbered from 1 until N. All files are kept on disc. \n  This consumes memory, but a restart is possible from any restart file. To invoke the restart, just set \n  restart = (n) \n  where n is the number/index of the restart file. \n   \n   \n  Example: \n   \n  restart = (00) \n  RestartStepSize = ( 100, %RESTART_single% ) \n   \n  Write a restart file every 100 time cycles. Every new restart file overrides the existing old one. \n  This saves memory, but there is a risk. A restart file can be corrupt, or the computer clashes just during the write operation \n  of the restart file. In order to invoke the restart, just set \n  restart = (1) \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/Save/USER_save_data.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.RESTART.DefineRestart.html", 
        "id": 724, 
        "title": "DefineRestart"
    }, 
    {
        "body": "\n\nReadInPointCloud ...  read in already existing point cloud from file \n\n\n   \n   \n  begin_pointcloud{} \n     include{Filename} \n  end_pointcloud \n   \n   \n   Currently, this option is only used for the PointCloudQualityCheck. that means, if a pointcloud is read by this option, \n  then a quality check is performed with exactly the pointcloud read, and then the program is stopped thereafter. \n   \n  See also qualitycheck  \n   \n   \n   \n   \n   \n   \n\n\n\n\nList of members:\n\n\nASCII  ...  read in already existing point cloud from ascii format \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_ReadInFPMpointsAtStartup.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.ReadInPointCloud.html", 
        "id": 725, 
        "title": "ReadInPointCloud"
    }, 
    {
        "body": "\n\nASCII ...  read in already existing point cloud from ascii format \n\n\n  The ascii file format is the following \n   \n  # ASCII \n  # %ind_x(1)%    %ind_x(2)%    %ind_x(3)%    ...    %ind_kob% \n    realValue     realValue     realValue     ...    realValue \n    ... \n    realValue     realValue     realValue     ...    realValue \n   \n  The first line defines this file as ascii file. \n  The second line tells what kind of values are contained in the given columns \n   \n  If the information of %ind_kob% is not given, all FPM points read are assumed to be interior. \n  There is no constraint on the order of the %ind_...%-items. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_ReadInFPMpointsAtStartup.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.ReadInPointCloud.ASCII___RIPC___.html", 
        "id": 726, 
        "title": "ASCII___RIPC___"
    }, 
    {
        "body": "\n\nSaving\n\n\n\n\n\nList of members:\n\n\nResults  ...  save computational results in different formats \n\n\n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Saving.html", 
        "id": 727, 
        "title": "Saving"
    }, 
    {
        "body": "\n\nResults ...  save computational results in different formats \n\n\n  FPM allows to save results to different file formats, e.g. EnSight and Tecplot. You \n  can save multiple formats at once. If multiple values for SAVE_path are specified \n  everything is stored in all given locations. \n   \n  The output frequency is defined via SAVE_choose_meth, SAVE_first, and SAVE_interval. In \n  the example below the output frequency for all three output formats is changed after 999 \n  timesteps. \n   \n  All file formats will always save the point coordinates. For some formats additional variables \n  like normals are saved through specifications in the SAVE_format. Other simulation variables \n  need to be specified through SAVE_ITEM statements. For more specialized options see the \n  links at the bottom. \n   \n  The location for output is specified through SAVE_file and SAVE_path. \n   \n  Example: \n   \n  SAVE_format(1) = 'ENSIGHT6 BINARY N---' \n  SAVE_format(2) = 'TECPLOT BINARY N---' \n  SAVE_format(3) = 'ASCII BINARY N---' \n   \n  SAVE_choose_meth = 'CONT' \n  SAVE_first(1)    = 1 \n  SAVE_interval(1) = 5 \n  SAVE_first(2)    = 1000 \n  SAVE_interval(2) = 1 \n   \n  SAVE_file = 'simulation' \n  SAVE_path = 'results' \n   \n  SAVE_ITEM = ( %SAVE_scalar%, ScalarExpression, \"ScalarDescriptionText\" ) \n  SAVE_ITEM = ( %SAVE_vector%, xVectorExpression, yVectorExpression, zVectorExpression, \"VectorDescriptionText\" ) \n   \n   \n   \n\n\n\n\nList of members:\n\n\nSAVE_BE_MONITOR_ITEM  ...  monitor item to be saved per element for visualization \nSAVE_ITEM  ...  item to be saved for visualization \nSAVE_MONITOR_ITEM  ...  monitor item to be saved for visualization \nSAVE_PID_ITEM  ...  save computational results in different formats \nSAVE_choose_meth  ...  save computational results in different formats \nSAVE_file  ...  file name for the results \nSAVE_first  ...  control first save \nSAVE_format  ...  format to save simulation data \nSAVE_interval  ...  control saving frequency \nSAVE_path  ...  absolute or relative path for the simulation results \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/Save/USER_save_data.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Saving.Results.html", 
        "id": 728, 
        "title": "Results"
    }, 
    {
        "body": "\n\nSAVE_BE_MONITOR_ITEM ...  monitor item to be saved per element for visualization \n\n\n  Saves scalar items in the EnSight case-file of the boundary for those boundary elements which correspond to monitor points. \n  Suitable monitor points are created through MONITORPOINTS_CREATION. \n  For each boundary element the scalar values of the defined item of all monitor points residing on this boundary element, \n  e.g. a triangle, are summed. If there are no monitor points on a boundary element, the resulting value is -999999. \n   \n  Syntax: \n   \n  SAVE_BE_MONITOR_ITEM = ( %CUMU_NONE%, ScalarExpression1, \"ScalarDescriptionText1\" ) \n  SAVE_BE_MONITOR_ITEM = ( %CUMU_INTERVAL%, ScalarExpression2, \"ScalarDescriptionText2\" ) \n  SAVE_BE_MONITOR_ITEM = ( %CUMU_SIMULATION%, ScalarExpression3, \"ScalarDescriptionText3\" ) \n   \n   - %CUMU_NONE%: no cumulation between time steps (only values of the current time step) \n   - %CUMU_INTERVAL%: cumulation between time steps until time interval given by the definition of SAVE_interval is completed \n   - %CUMU_SIMULATION%: cumulation between time steps throughout the whole simulation \n   \n  The item ScalarExpression can be established as regular RightHandSideExpression. \n   \n  The ScalarDescriptionText gets the prefix \"UDPmon_\". Example: \"velocity_magnitude\" gets extended to \"UDPmon_velocity_magnitude\". \n  The full name can then be used in Paraview`s calculator, for example. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/Save/USER_save_data.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Saving.Results.SAVE_BE_MONITOR_ITEM.html", 
        "id": 729, 
        "title": "SAVE_BE_MONITOR_ITEM"
    }, 
    {
        "body": "\n\nSAVE_ITEM ...  item to be saved for visualization \n\n\n  Either scalar or 3D vector items can be saved. \n   \n  Syntax: \n   \n  SAVE_ITEM = ( %SAVE_scalar%, ScalarExpression, \"ScalarDescriptionText\" ) \n  SAVE_ITEM = ( %SAVE_vector%, xVectorExpression, yVectorExpression, zVectorExpression, \"VectorDescriptionText\" ) \n   \n  The items xVectorExpression, yVectorExpression, zVectorExpression, ScalarExpression can be established as regular RightHandSideExpression. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/Save/USER_save_data.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Saving.Results.SAVE_ITEM.html", 
        "id": 730, 
        "title": "SAVE_ITEM"
    }, 
    {
        "body": "\n\nSAVE_MONITOR_ITEM ...  monitor item to be saved for visualization \n\n\n  Saves items for points of the monitor point cloud. Suitable monitor points are created through MONITORPOINTS_CREATION. \n  The syntax of SAVE_MONITOR_ITEM is identical to the one of SAVE_ITEM. \n   \n  Syntax: \n   \n  SAVE_MONITOR_ITEM = ( %SAVE_scalar%, ScalarExpression, \"ScalarDescriptionText\" ) \n  SAVE_MONITOR_ITEM = ( %SAVE_vector%, xVectorExpression, yVectorExpression, zVectorExpression, \"VectorDescriptionText\" ) \n   \n  The items xVectorExpression, yVectorExpression, zVectorExpression, ScalarExpression can be established as regular RightHandSideExpression. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/Save/USER_save_data.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Saving.Results.SAVE_MONITOR_ITEM.html", 
        "id": 731, 
        "title": "SAVE_MONITOR_ITEM"
    }, 
    {
        "body": "\n\nSAVE_PID_ITEM ...  save computational results in different formats \n\n\n   \n  SAVE_format(1) = 'ENSIGHT6 BINARY N---' \n   \n  SAVE_choose_meth = 'CONT' \n  SAVE_first(1)     = 1 \n  SAVE_interval(1) = 5 \n   \n  SAVE_file = 'AnyFileName' \n  SAVE_path = 'AnyFilePath' \n   \n  SAVE_ITEM = ( %SAVE_vector%, xVectorExpression, yVectorExpression, zVectorExpression, \"VectorDescriptionText\" ) \n  SAVE_ITEM = ( %SAVE_scalar%, ScalarExpression, \"ScalarDescriptionText\" ) \n  SAVE_ITEM = ... \n   \n  SAVE_PID_ITEM = ( SwitchExpression_1, \"PID description\" ) \n  SAVE_PID_ITEM = ( SwitchExpression_2, \"description of second PID item\" ) \n  SAVE_PID_ITEM = ... \n   \n   \n  The PID defines a selection. SwitchExpression_1, SwitchExpression_2, SwitchExpression_... is a mathematical expression. \n  If the expression is positiv, then the FPM point belongs to the PID-selection, otherwise it does not. \n  REMARK 1: currently, up to 64 PID definitions are possible (number of bits of a double real) \n  REMARK 2: The description text appears in the result file \n  REMARK 3: Currently, it works only for ENSIGHT6 BINARY \n   \n  Example 1: PID based on materials or chamber \n  SAVE_PID_ITEM = ([Y%ind_cham%=1], \"WATER\") \n  SAVE_PID_ITEM = ([Y%ind_cham%=2], \"AIR\") \n   \n  Example 2: PID based on subregions \n  SAVE_PID_ITEM = ( [InDom(\"SubRegion1\")], \"PID_SUB_1\") \n  SAVE_PID_ITEM = ( [InDom(\"SubRegion2\")], \"PID_SUB_2\") \n   ----> \"SubRegion1\" and \"SubRegion2\" have to be valid aliases that define closed geometrical domains  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/Save/USER_save_data.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Saving.Results.SAVE_PID_ITEM.html", 
        "id": 732, 
        "title": "SAVE_PID_ITEM"
    }, 
    {
        "body": "\n\nSAVE_choose_meth ...  save computational results in different formats \n\n\n   \n   \n  Saving mode based on the number of time cycles. \n   \n  SAVE_choose_meth = 'CONT' \n   \n   \n   \n  Saving mode based on simulation time. \n   \n  SAVE_choose_meth = 'TIME' \n   \n   \n  Note: SAVE_choose_meth is global.  \n   \n  See also SAVE_interval. \n   \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/Save/USER_save_data.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Saving.Results.SAVE_choose_meth.html", 
        "id": 733, 
        "title": "SAVE_choose_meth"
    }, 
    {
        "body": "\n\nSAVE_file ...  file name for the results \n\n\n  File name for the results, usually without extension. \n   \n  See SAVE_path for complete description. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/Save/USER_save_data.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Saving.Results.SAVE_file.html", 
        "id": 734, 
        "title": "SAVE_file"
    }, 
    {
        "body": "\n\nSAVE_first ...  control first save \n\n\n   \n  Begin saving after a number of time cycles or a given simulation time. \n   \n  See SAVE_interval for a more detailed description. \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/Save/USER_save_data.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Saving.Results.SAVE_first.html", 
        "id": 735, 
        "title": "SAVE_first"
    }, 
    {
        "body": "\n\nSAVE_format ...  format to save simulation data \n\n\n  Example: \n   \n  SAVE_format(1) = 'ENSIGHT6 BINARY N---' \n  SAVE_format(2) = 'TECPLOT BINARY N---' \n  SAVE_format(3) = 'ASCII N---' \n   \n   \n  Currently, the main formats are \n    \"ENSIGHT6 BINARY \", \n    \"TECPLOT BINARY \" (unstable), \n    \"ASCII \" (only supports \"N---\"). \n   \n  Additional options are: \n    ONLY:PARTICLES  -> save only the particles and does not save the geometry (as it might contain a huge amount of data) \n                       usage: \"SAVE_format(1) = 'ENSIGHT6 BINARY N--- ONLY:PARTICLES'\" \n    NO:PARTS        -> does not split the particle chambers into parts for 'ENSIGHT6 BINARY'. Paraview as well as VisIt have \n                       problems and usually produce errors, if one of the chambers disappears. This might be the case, if \n                       the SHALLOWWATER solver is used together with LIQUID, but SHALLOWWATER is switched off after a certain time. \n   \n  Usage of the four format letters: \n    'N---'          -> display only nodes \n    'A---'          -> display ALL nodes, even the inactive particles. In this case also save the quantity %ind_act% in order to be able to \n                       distinct between active and inactive FPM points. \n    'N--T'          -> nodes and tetraeders (coming from the Delaunay decomposition of the point cloud) \n    'N-T-'          -> nodes and surface triangles (produced by Delaunay decomposition of the free surface and the regular boundries) \n    'NN--'          -> nodes and boundary normals ('ENSIGHT6 BINARY' only) \n    'NC--'          -> nodes and connectivities between two chambers. \n    '....P'         -> additional option for 'ENSIGHT6 BINARY'. Invokes the visualization of the metaplanes. Very useful for debugging. \n   \n   \n\n\n\n\nList of members:\n\n\nASCII  ...  computation results column-wise in an ASCII formatted file \nTECPLOT  ...  computation results in TECPLOT format \nENSIGHT6  ...  computation results in Ensight6 format \nERFHDF5  ...  computation results in ESI format ERF-HDF5 \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/Save/USER_save_data.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Saving.Results.SAVE_format.html", 
        "id": 736, 
        "title": "SAVE_format"
    }, 
    {
        "body": "\n\nASCII ...  computation results column-wise in an ASCII formatted file \n\n\n   \n   \n  SAVE_format(3) = 'ASCII N---' \n  SAVE_ITEM = ( %SAVE_scalar%, [ Y%ind_cluster% ], \"iCluster\" ) \n  SAVE_ITEM = ( %SAVE_scalar%, [ Y%ind_Vi% ],      \"VolumePerPoint\" ) \n   \n   \n  Per save time, FPM creates one big result file. It columnwise contains the values for each active FPM point. \n  1st column       : time \n  2nd column       : x-component of position \n  3rd column       : y-component of position \n  4th column       : z-component of position \n  5th column and up: results as defined by the SAVE_ITEM statements in the order as given in USER_common_variables.dat. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/Save/USER_save_data.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Saving.Results.SAVE_format.ASCII.html", 
        "id": 737, 
        "title": "ASCII"
    }, 
    {
        "body": "\n\nTECPLOT ...  computation results in TECPLOT format \n\n\n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/Save/USER_save_data.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Saving.Results.SAVE_format.TECPLOT.html", 
        "id": 738, 
        "title": "TECPLOT"
    }, 
    {
        "body": "\n\nENSIGHT6 ...  computation results in Ensight6 format \n\n\n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/Save/USER_save_data.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Saving.Results.SAVE_format.ENSIGHT6.html", 
        "id": 739, 
        "title": "ENSIGHT6"
    }, 
    {
        "body": "\n\nERFHDF5 ...  computation results in ESI format ERF-HDF5 \n\n\n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/Save/USER_save_data.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Saving.Results.SAVE_format.ERFHDF5.html", 
        "id": 740, 
        "title": "ERFHDF5"
    }, 
    {
        "body": "\n\nSAVE_interval ...  control saving frequency \n\n\n   \n  SAVE_interval allows to control the frequency of saving result files. \n  Its interpretation is either the number of timesteps or the simulation \n  time depending on SAVE_choose_meth. \n   \n  The output frequency can be refined in intervals of interest by providing \n  multiple SAVE_first and SAVE_interval statements. These apply to each \n  SAVE_format. \n   \n  Example for timestep-dependent writeouts: \n   \n  SAVE_choose_meth = 'CONT' \n  SAVE_first(1)    = 1 \n  SAVE_interval(1) = 5 \n  SAVE_first(2)    = 1000 \n  SAVE_interval(2) = 1 \n  SAVE_first(3)    = 1100 \n  SAVE_interval(3) = 5 \n   \n  Here, starting from the first time step, after every 5 time cycles a result file is generated. \n  After 1000 time cycles, a result is generated after every time step. \n  Finally, after 1100 time cycles, the output again is generated after every 5 time steps. \n   \n   \n  Example for simulation time dependent writeouts: \n   \n  SAVE_choose_meth = 'TIME' \n  SAVE_first(1)    = 0.5 \n  SAVE_interval(1) = 0.1 \n   \n  This writes out a result file each time a simulation time of 0.5 + n*0.1 seconds (n >= 0) \n  has been reached (or surpassed). \n   \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/Save/USER_save_data.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Saving.Results.SAVE_interval.html", 
        "id": 741, 
        "title": "SAVE_interval"
    }, 
    {
        "body": "\n\nSAVE_path ...  absolute or relative path for the simulation results \n\n\n  Use SAVE_file and SAVE_path to set the location for the results. \n   \n  SAVE_file = 'FileBaseName' \n  SAVE_path = 'FilePath' \n   \n   \n  Several save paths can be determined, if the same results shall be saved into different directories (hard drive and USB for example). \n   \n  Example: \n   \n  SAVE_file = 'simulation' \n  SAVE_path(1) = 'results' \n  SAVE_path(2) = '/media/usb/simulation/results' \n   \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/Save/USER_save_data.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Saving.Results.SAVE_path.html", 
        "id": 742, 
        "title": "SAVE_path"
    }, 
    {
        "body": "\n\nSelection ...  Switch/Case-type selection statement \n\n\n  Allows to use selections depending on aliases. Besides exact matches a default case is supported. \n   \n  In the simple case selection statements work on scalar aliases. \n   \n   begin_alias{} \n    \"SelectionAlias\" = \"ON\" \n  end_alias \n  ... \n  begin_selection{\"SelectionAlias\"} \n    case{\"OFF\"} \n      ... \n    case{\"ON\"} \n      ... \n    case_else{} \n      ... \n  end_selection  \n   \n   Remark: The alias used by the selection needs to be defined before the selection statement!  \n   \n  The 'case_else{}' is optional. Within the case blocks all USER_common_variables syntax is allowed. All statements \n  of a valid case block, i.e. the case which is matches the current value of the SelectionAlias, are globally visible. \n   \n  It is also possible to use selections on alias vectors: \n   begin_alias{} \n    \"SelectionAliasVector\" = \"ON,OFF,OFF,ON\" \n  end_alias \n  ... \n  begin_selection{\"SelectionAliasVector\"} \n    case{\"2,OFF\"} \n      ... \n    case{...} \n      ... \n    case_else{} \n      ... \n  end_selection \n   \n  For alias vectors the case statement contains the index (starting from 1) and the value to be checked. \n   \n  In general, selection statements can be nested up to a certain limit. \n   \n  An extension of the Selection to mathematical expressions is possible: \n   begin_alias{} \n    \"SelectionAliasVector\" = \"-3.1415926\" \n  end_alias \n  ... \n  begin_selection{} \n    case{[&SelectionAliasVector;&>0]} \n      ... \n    case{[&SelectionAliasVector;&<0]} \n      ... \n    case_else{} \n      ... \n  end_selection \n   \n  This is the so called mathematical-selection, and represents a way to mimic if-elseif-else constructions in the input file. The \n  begin_selection{}-clause must not contain any argument. \n   \n  Soon, the direct implementation of if-elseif-else will follow. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_Ucv.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.Selection.html", 
        "id": 743, 
        "title": "Selection"
    }, 
    {
        "body": "\n\nSmoothingLength ...  define the smoothing length by a set of commands \n\n\n\n\n\nList of members:\n\n\nUSER_h_funct  ...  choose either constant, locally variable, or adaptive smoothing length \nUSER_h_min  ...  minimum allowed smoothing length \nUSER_h_max  ...  maximum allowed smoothing length \nSMOOTH_LENGTH  ...  provide a function of smoothing length \n\n\n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.SmoothingLength.html", 
        "id": 744, 
        "title": "SmoothingLength"
    }, 
    {
        "body": "\n\nUSER_h_funct ...  choose either constant, locally variable, or adaptive smoothing length \n\n\n  Currently implemented: \n  USER_h_funct = 'CONS'        (constant, see CONS) \n  USER_h_funct = 'DSCR'        (discrete, see DSCR) \n  USER_h_funct = 'ADTV'        (adaptive, see ADTV) \n\n\n\n\nList of members:\n\n\nCONS  ...  constant smoothing length defintion \nDSCR  ...  discrete (locally variable) smoothing length definition \nADTV  ...  adaptive smoothing length definition \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_smooth_length.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.SmoothingLength.USER_h_funct.html", 
        "id": 745, 
        "title": "USER_h_funct"
    }, 
    {
        "body": "\n\nCONS ...  constant smoothing length defintion \n\n\n  For constant smoothing length, choose \n   \n  USER_h_funct = 'CONS' \n  USER_h_min = RealNumber \n  USER_h_max = sameRealNumber \n   \n   \n   \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_smooth_length.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.SmoothingLength.USER_h_funct.CONS___SL___.html", 
        "id": 746, 
        "title": "CONS___SL___"
    }, 
    {
        "body": "\n\nDSCR ...  discrete (locally variable) smoothing length definition \n\n\n  For locally variable smoothing length, choose \n   \n  USER_h_funct = 'DSCR' \n  SMOOTH_LENGTH ($SLflag$) = (%H_BuiltInFunction%, ..., ... ) \n  USER_h_min = RealNumber \n  USER_h_max = anotherRealNumber \n   \n   \n   \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_smooth_length.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.SmoothingLength.USER_h_funct.DSCR___SL___.html", 
        "id": 747, 
        "title": "DSCR___SL___"
    }, 
    {
        "body": "\n\nADTV ...  adaptive smoothing length definition \n\n\n  Current experimental development is the adaptive smoothing length: \n   \n  USER_h_funct = 'ADTV' \n  USER_h_min = RealNumber \n  USER_h_max = anotherRealNumber \n   \n  The idea here is to write a proposed smoothing length value for each particle into the index %ind_h_adaptive% : \n   \n  CODI_eq($Material$,%ind_h_adaptive%) = [ ... some equation ... ] \n   \n  The following rules: \n  1. This equation is evaluated at the end of each time step. \n  2. At the beginning of the next time step, theses values are copied to %ind_h%, and thus taken as the smoothing length distribution for the new time step. \n      WARNING: The new %ind_h% - values are not undertaken any further checking of consistency, currently, that explicitely means:  \n  3. The user has to carefully verify the smoothing length distribution for the next time step. One way to go is given in the example below. \n  4. The method currently has one drawback: as the adaptive h-values are determined at the END of the time step, currently there is no way \n     of defining the INITIAL h-distribution. \n     Current assumption: h_Initial= USER_h_max. \n     Planned for the future: use the SMOOTH_LENGTH capacities to more distintively define the initial smoothinge length. \n   \n  EXAMPLE: \n   \n  begin_alias{} \n    \"H_min\"              = \"0.1\" \n    \"H_max\"              = \"0.5\" \n    \"HchangePerTimeStep\" = \"0.1\" \n  '   \"SpeedOfBox\"         = \"4.0\" \n  end_alias \n   \n  USER_h_funct = 'ADTV' \n  USER_h_min = &H;_min& \n  USER_h_max = &H;_max& \n   \n  CODI_eq($Mat1$,%ind_addvar(1)%) = [ sqrt(dYdx(%ind_v(1)%)^2+dYdy(%ind_v(1)%)^2+dYdx(%ind_v(2)%)^2+dYdy(%ind_v(2)%)^2)*&H;_max&/&SpeedOfBox;& ] # some measure of gradient of velocity \n  CODI_eq($Mat1$,%ind_addvar(2)%) = [max( &H;_max&*(1-Y%ind_addvar(1)%) , &H;_min& )]                                                            # set a definition of adaptive smoothing length \n  CODI_eq($Mat1$,%ind_addvar(3)%) = [max( min( Y%ind_addvar(2)% , (1+&HchangePerTimeStep;&)*Y%ind_h% ) , (1-&HchangePerTimeStep;&)*Y%ind_h% ) ]  # make sure H varies not more than a given threshold from time step to time setp \n  CODI_min_max($Mat1$,%ind_addvar(3)%) = (-10000,10000, &dH;_over_dr& )                                                                         # restrict local slope of the adtipte smoothinge length function \n  CODI_eq($Mat1$,%ind_h_adaptive%) = [ Y%ind_addvar(3)% ]                                                                                      # copy the constrcted function to %ind_h_adaptive% \n  frame# \n  See also Equations, CODI, especially CODI_min_max. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_smooth_length.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.SmoothingLength.USER_h_funct.ADTV___SL___.html", 
        "id": 748, 
        "title": "ADTV___SL___"
    }, 
    {
        "body": "\n\nUSER_h_min ...  minimum allowed smoothing length \n\n\n   \n  USER_h_min = RealNumber \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_smooth_length.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.SmoothingLength.USER_h_min.html", 
        "id": 749, 
        "title": "USER_h_min"
    }, 
    {
        "body": "\n\nUSER_h_max ...  maximum allowed smoothing length \n\n\n   \n  USER_h_max = RealNumber \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_smooth_length.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.SmoothingLength.USER_h_max.html", 
        "id": 750, 
        "title": "USER_h_max"
    }, 
    {
        "body": "\n\nSMOOTH_LENGTH ...  provide a function of smoothing length \n\n\n   \n  SMOOTH_LENGTH($SLflag$) = ( %H_constant%, H, optional:weight, optional:d(weight)/d(length) ) \n  SMOOTH_LENGTH($SLflag$) = ( %H_spherical%, H_min, L_min, dH/dr, H_max ) \n  SMOOTH_LENGTH($SLflag$) = ( %H_radial%, H_min, L_min, axis_x, axis_y, axis_z, dH/dr, H_max ) \n  SMOOTH_LENGTH($SLflag$) = ( %H_linear%, H_min, L_min, normal_x, normal_y, normal_z, H_max ) \n  SMOOTH_LENGTH($SLflag$) = ( %H_ring%, H_min, L_min, dH/dr, n_x, n_y, n_z, H_max ) \n   \n\n\n\n\nList of members:\n\n\n%H_constant%  ...  constant smoothing length, or smoothing length given as equation \n%H_spherical%  ...  provide a spherical distribution of H around points or geometry elements \n%H_linear%  ...  constant smoothing length, or smoothing length given as equation \n%H_radial%  ...  constant smoothing length, or smoothing length given as equation \n%H_ring%  ...  constant smoothing length, or smoothing length given as equation \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_smooth_length.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.SmoothingLength.SMOOTH_LENGTH.html", 
        "id": 751, 
        "title": "SMOOTH_LENGTH"
    }, 
    {
        "body": "\n\n%H_constant% ...  constant smoothing length, or smoothing length given as equation \n\n\n  Constant smoothing length, or smoothing length given by an explicit equation. \n   \n  SMOOTH_LENGTH($SLflag$) = ( %H_constant%, H, optional:weight, optional:d(weight)/d(length) ) \n   \n  H                            = smoothing length to be used \n  optional:weight              = the resulting smoothing length will be computed as H_resulting = H*weight \n                                 That makes sense if a normalized function exists which can be used in order to locally refine, for example refinement due to accuracy constraints. \n  optional:d(weight)/d(length) = local change rate of the weight, if known. This has a impact only if working with the original version of UseBoxSystemVersion (=0 or =1). \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_smooth_length.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.SmoothingLength.SMOOTH_LENGTH.%H_constant%.html", 
        "id": 752, 
        "title": "%H_constant%"
    }, 
    {
        "body": "\n\n%H_spherical% ...  provide a spherical distribution of H around points or geometry elements \n\n\n  Form a ball of radius L_min and construct the smoothing length around. \n   \n  SMOOTH_LENGTH($SLflag$) = ( %H_spherical%, H_min, L_min, dH/dr, H_max ) \n   \n  H_min = minimum smoothing length \n  L_min = radius of \"ball\" within which the smoothing length is kept on the level of H_min \n  dH/dr = increase rate of H outside of the L_min-ball \n  H_max = maximum smoothing length \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_smooth_length.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.SmoothingLength.SMOOTH_LENGTH.%H_spherical%.html", 
        "id": 753, 
        "title": "%H_spherical%"
    }, 
    {
        "body": "\n\n%H_linear% ...  constant smoothing length, or smoothing length given as equation \n\n\n  Form a plane. On one side, the smoothing length is constant. On the other side, the smoothing length linearly grows. \n   \n  SMOOTH_LENGTH($SLflag$) = ( %H_linear%, H_min, L_min, normal_x, normal_y, normal_z, H_max ) \n   \n  H_min = minimum smoothing length on the given plane \n  L_min = stripe ontop of the plane where H is kept at the value of H_min \n  (normal_x, normal_y, normal_z) = vector perpendicular to the plane. The norm of the vector gives dH/dr, i.e. the growth rate of H as one tends apart from the plane. \n  H_max = maximum smoothing length \n   \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_smooth_length.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.SmoothingLength.SMOOTH_LENGTH.%H_linear%.html", 
        "id": 754, 
        "title": "%H_linear%"
    }, 
    {
        "body": "\n\n%H_radial% ...  constant smoothing length, or smoothing length given as equation \n\n\n  Form a tube of radius L_min and construct smoothing length around the tube. \n   \n  SMOOTH_LENGTH($SLflag$) = ( %H_radial%, H_min, L_min, axis_x, axis_y, axis_z, dH/dr, H_max ) \n   \n  H_min = minimum smoothing length, \n  L_min = radius of the tube, \n  (axis_x, axis_y, axis_z) = direction of the tube, \n  dH/dr = growth rate of H outside the tube, \n  H_max = maximum smoothing length. \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_smooth_length.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.SmoothingLength.SMOOTH_LENGTH.%H_radial%.html", 
        "id": 755, 
        "title": "%H_radial%"
    }, 
    {
        "body": "\n\n%H_ring% ...  constant smoothing length, or smoothing length given as equation \n\n\n  Form a torus around which the smoothing length is constructed. \n   \n  SMOOTH_LENGTH($SLflag$) = ( %H_ring%, H_min, L_min, dH/dr, n_x, n_y, n_z, H_max ) \n   \n  H_min = minimum H along the ring/torus \n  L_min = small radius of the torus \n  dH/dr = increase of smoothing length per distance from torus. \n  (n_x, n_y, n_z) = vector perpendicular to the plane in which the torus is placed. The length of this vector forms the big radius of the torus. \n  H_max = maximal accepted smoothing length \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_smooth_length.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.SmoothingLength.SMOOTH_LENGTH.%H_ring%.html", 
        "id": 756, 
        "title": "%H_ring%"
    }, 
    {
        "body": "\n\n__overview_of_syntax_elements__ ...  shows all possible syntax in USER_common_variables.dat \n\n\n   \n  On this page, all left-hand-side keywords are updated, which can be used in USER_common_variables.dat . \n  By clicking on one of the keywords, one finds a list of links, where the \n  given keyword appears in one or the other way. \n   \n  As the FPMDOCU is dynamically growing, the links to the given keywords will grow appropriately, \n  which makes the navigation within FPMDOCU more easy. \n   \n\n\n\n\nList of members:\n\n\nACTIVE  ...  \nAbaqusInterpolation  ...  \nActivateChamberAtTime  ...  \nAggregationKernel  ...  \nAllowContactToChambers  ...  NOT USED, but planned \nBCON_CNTCT  ...  \nBCON  ...  \nBC_CNTFORCE  ...  \nBC_SUBSON  ...  \nBC_SUPERSON  ...  \nBC_S  ...  \nBC_T  ...  \nBC_TearOffCriterion  ...  \nBC_WettingAngle  ...  \nBC_eps  ...  \nBC_k  ...  \nBC_p  ...  \nBC_v  ...  \nBUBBLE_DoTheManagement  ...  \nBUBBLE_EnforceAveragePressure  ...  \nBUBBLE_pOffset  ...  \nBreakageKernel  ...  \nCCC_CuttingDistance  ...  \nCCC_clusterAllTriangles  ...  \nCCC_maxSegmentLength  ...  \nCCC_minNewEdgeLength  ...  \nCCC_relativeEdgeLength  ...  \nCODI_A  ...  \nCODI_D  ...  \nCODI_EQ  ...  \nCODI_Integration  ...  \nCODI_Q  ...  \nCODI_V  ...  \nCODI_Vimplicit  ...  \nCODI_c  ...  \nCODI_eq  ...  \nCODI_min_max_RejectLinearSolution  ...  \nCODI_min_max  ...  \nCODI_rho  ...  \nCOEFF_dt_Darcy  ...  \nCOEFF_dt_SurfaceTension_A  ...  \nCOEFF_dt_SurfaceTension_B  ...  \nCOEFF_dt_SurfaceTension_C  ...  \nCOEFF_dt  ...  \nCOEFF_dt_free  ...  \nCOEFF_dt_virt  ...  \nCOEFF_mue  ...  \nCOMP_CosEdgeAngle  ...  \nCOMP_DropletphaseWithDisturbance  ...  \nCOMP_RemeshBoundary  ...  \nCOMP_dt_indep  ...  \nCOMP_facSmooth_Eta  ...  \nCOMP_nbSmooth_Eta  ...  \nCOORDTRANS  ...  \nContinuousPhase  ...  \nDELT_dt_AddCond  ...  \nDELT_dt  ...  \nDELT_dt_start  ...  \nDELT_dt_variable  ...  \nDIFFOP_ConsistentGradient  ...  \nDIFFOP_kernel_Gradient  ...  \nDIFFOP_kernel_Laplace  ...  \nDIFFOP_kernel_Neumann  ...  \nDIFFOP_kernel_Transport  ...  \nDIFFOP_laplace  ...  \nDarcyBasisVelocity  ...  \nDarcyConstant  ...  \nDaughterParticleDistribution  ...  \nDaughterParticleProbability  ...  \nDiffLaw  ...  \nDovmmUntilTime_DovpmFromTime  ...  \nDovpmFromTime  ...  \nENFORCE_min_max_RejectLinearSolution  ...  \nENFORCE_min_max  ...  \nEVENT  ...  \nEventMessage  ...  \nFLIQUID_CorrectionPressure_Version  ...  \nFOFTLIQUID_AdditionalCorrectionLoops  ...  \nForbidContactToChambers  ...  NOT USED, but planned \nGenerateBubbleAtInflow  ...  \nIGES_Accuracy  ...  \nINITDATA  ...  \nINTEGRATION  ...  \nKOP  ...  \nKindOfProblem  ...  \nLINEQN_scaling  ...  \nLINEQN_solver_ScalarSystems  ...  \nLINEQN_solver  ...  \nMONITORPOINTS_CREATION_FunctionEvaluation  ...  \nMONITORPOINTS_CREATION  ...  \nMONITORPOINTS_DELETION  ...  \nMONITORPOINTS_STOP  ...  \nMOVE  ...  \nMeanNumberDaughterDroplets  ...  \nNumberOfDaughterParticles  ...  \nPBE_Developement  ...  \nPBE_Model_Alpha_Max  ...  \nPBE_Model_Alpha_Min  ...  \nPBE_Model_ContinuousDragSwitch  ...  \nPBE_Model_DiffusionSwitch  ...  \nPBE_Model_E_DropletSource  ...  \nPBE_Model_KEPS_DropletVisibilitySwitch  ...  \nPBE_Model_K_DropletSource  ...  \nPBE_Model_Vmax  ...  \nPBE_Model_Vmin  ...  \nPBE_SolverSetup  ...  \nPHASE_distinction  ...  invoke detection of interface connections between boundary points \nPOSTBND  ...  \nPOSTVOL  ...  \nParticlePhase  ...  \nPointDsplMethod  ...  \nRconst  ...  \nRelaxationTime  ...  \nRemeshBoundary_OrientationBuiltInComponents  ...  \nRemeshBoundary_RemoveTinyClusters  ...  \nRepairGeometry  ...  \nRestartStepSize  ...  \nRestart_AdditionalBE  ...  \nRestart_Copying  ...  \nRestart_ToBeRemoved  ...  \nRestart  ...  \nSAVE_ABAQUS  ...  \nSAVE_BE_MONITOR_ITEM  ...  \nSAVE_CoordinateSystem  ...  \nSAVE_ITEM  ...  \nSAVE_MONITOR_ITEM  ...  \nSAVE_PID_ITEM  ...  \nSAVE_QUALITYCHECK_ITEM  ...  \nSAVE_ShareScalars  ...  \nSAVE_atEndOfTimestep  ...  \nSAVE_choose_meth  ...  \nSAVE_file  ...  \nSAVE_first  ...  \nSAVE_format  ...  \nSAVE_interval  
...  \nSAVE_intervall  ...  \nSAVE_list_of_var  ...  \nSAVE_path  ...  \nSMOOTH_LENGTH  ...  \nSTRESSTENSOR_Variante_Factor  ...  \nSTRESSTENSOR_Variante  ...  \nTOUCH  ...  \nTaylorQuinneyCoefficient  ...  \nTend  ...  \nTimeIntegration_N_final  ...  \nTstart  ...  \nUSER_h_funct  ...  \nUSER_h_max  ...  \nUSER_h_min  ...  \nV00_SmoothDivV  ...  \nVOLUME_correction_FreeSurface  ...  \nVOLUME_correction  ...  \nVOLUME_correction_local  ...  \nVP0_VelocityCorrection  ...  \nbegin_CCC_seeds2D  ...  \nbegin_CCC_seeds3D  ...  \nbegin_CCC_seeds6D  ...  \nbegin_alias{}  ...  \nbegin_boundary_elements{}  ...  \nbegin_construct_atRestart{}  ...  \nbegin_construct{}  ...  \nbegin_curve{}  ...  \nbegin_equation{}  ...  \nbegin_material{}  ...  \ncompute_phase_boundary  ...  \ncv  ...  \ndamping_p_corr  ...  \ndensity  ...  \ndivergenceV  ...  \ndt_TEMPERATURE  ...  \ndt_VELOCITY  ...  \neps_T  ...  \neps_p  ...  \neps_phyd  ...  \neps_v  ...  \neta  ...  \ngravity  ...  \nheatsource  ...  \ninclude_CCC_curves  ...  \ninclude_CCC_seeds2D  ...  \ninclude_CCC_seeds3D  ...  \ninclude_CCC_seeds6D  ...  \nlambda  ...  \nlatentheat  ...  \nmax_N_stencil  ...  \nmax_vl  ...  \nmin_vl  ...  \nmue  ...  \nord_eval  ...  \nord_gradient  ...  \nord_laplace  ...  \nradius_hole  ...  \nrel_dist  ...  \nrel_dist_bound  ...  \nrestart  ...  \nrestart_additionalBE  ...  \nrestart_copying  ...  \nrestart_step_size  ...  \nrestart_toberemoved  ...  \nrestartnewBE_filling  ...  \nshearmodulus  ...  \nsigma  ...  \nspecificheat  ...  \nsurfacetension  ...  \ntau  ...  \nthermalconduction  ...  \nv_transport  ...  \nviscosity  ...  \nx_p1  ...  \nx_p  ...  \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.html", 
        "id": 757, 
        "title": "__overview_of_syntax_elements__"
    }, 
    {
        "body": "\n\nACTIVE ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n%GEO_RemoveClusterClosestToGivenPoint%_GEO  ... %GEO_RemoveClusterClosestToGivenPoint%_GEO\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.ACTIVE___ucv___.html", 
        "id": 758, 
        "title": "ACTIVE___ucv___"
    }, 
    {
        "body": "\n\nAbaqusInterpolation ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.AbaqusInterpolation___ucv___.html", 
        "id": 759, 
        "title": "AbaqusInterpolation___ucv___"
    }, 
    {
        "body": "\n\nActivateChamberAtTime ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.ActivateChamberAtTime___ucv___.html", 
        "id": 760, 
        "title": "ActivateChamberAtTime___ucv___"
    }, 
    {
        "body": "\n\nAggregationKernel ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.AggregationKernel___ucv___.html", 
        "id": 761, 
        "title": "AggregationKernel___ucv___"
    }, 
    {
        "body": "\n\nAllowContactToChambers ...  NOT USED, but planned \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.AllowContactToChambers___ucv___.html", 
        "id": 762, 
        "title": "AllowContactToChambers___ucv___"
    }, 
    {
        "body": "\n\nBCON_CNTCT ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nBCON_CNTCT  ...  general setting of boundary conditions \n%ind_v(1)%  ...  Velocity boundary conditions at interfaces \n%BND_slip_InContact%  ...  Velocity boundary conditions at interfaces, implicit \n%BND_slip_InContact_Explicit%  ...  Velocity boundary conditions at interfaces, explicit \nPHASE_distinction  ...  invoke detection of interface connections \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.BCON_CNTCT___ucv___.html", 
        "id": 763, 
        "title": "BCON_CNTCT___ucv___"
    }, 
    {
        "body": "\n\nBCON ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nBoundaryConditions  ...  Prescribe physical boundary conditions for partitions of boundary \nBCON  ...  general setting of boundary conditions \n%ind_p_dyn%  ...  Dynamic Pressure boundary conditions \n%BND_wall%  ...  Quasi-stationary dynamic pressure boundary condition \n%BND_free%  ...  Direct dynamic pressure boundary conditions at free surface \n%BND_free_implicit%  ...  Direct dynamic pressure boundary conditions at free surface \n%BND_free_implicit_InContact_explicit%  ...  Direct dynamic pressure boundary conditions at phase boundary \nBC_v  ...  Velocity boundary conditions \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.BCON___ucv___.html", 
        "id": 764, 
        "title": "BCON___ucv___"
    }, 
    {
        "body": "\n\nBC_CNTFORCE ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nBC_CNTFORCE  ...  force contact between phases \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.BC_CNTFORCE___ucv___.html", 
        "id": 765, 
        "title": "BC_CNTFORCE___ucv___"
    }, 
    {
        "body": "\n\nBC_SUBSON ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.BC_SUBSON___ucv___.html", 
        "id": 766, 
        "title": "BC_SUBSON___ucv___"
    }, 
    {
        "body": "\n\nBC_SUPERSON ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.BC_SUPERSON___ucv___.html", 
        "id": 767, 
        "title": "BC_SUPERSON___ucv___"
    }, 
    {
        "body": "\n\nBC_S ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.BC_S___ucv___.html", 
        "id": 768, 
        "title": "BC_S___ucv___"
    }, 
    {
        "body": "\n\nBC_T ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nALIAS  ...  alias defintions within a begin_alias-end_alias-block \nBCON  ...  general setting of boundary conditions \nBC_T  ...  Temperature boundary conditions \n%BND_ROBIN%  ...  Robin boundary condition \nEquations  ...  define functions, equations, and algebraic expressions \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.BC_T___ucv___.html", 
        "id": 769, 
        "title": "BC_T___ucv___"
    }, 
    {
        "body": "\n\nBC_TearOffCriterion ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nBC_TearOffCriterion  ...  establish a tear-off criterion for release from walls \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.BC_TearOffCriterion___ucv___.html", 
        "id": 770, 
        "title": "BC_TearOffCriterion___ucv___"
    }, 
    {
        "body": "\n\nBC_WettingAngle ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nBC_WettingAngle  ...  Define the contact angle between free surface\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.BC_WettingAngle___ucv___.html", 
        "id": 771, 
        "title": "BC_WettingAngle___ucv___"
    }, 
    {
        "body": "\n\nequn ...  define functions, equations, and algebraic expressions \n\n\n  See Equations  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/equation_parser.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.equn.html", 
        "id": 772, 
        "title": "equn"
    }, 
    {
        "body": "\n\nBC_eps ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.BC_eps___ucv___.html", 
        "id": 773, 
        "title": "BC_eps___ucv___"
    }, 
    {
        "body": "\n\nBC_k ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.BC_k___ucv___.html", 
        "id": 774, 
        "title": "BC_k___ucv___"
    }, 
    {
        "body": "\n\nBC_p ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nBlindOutSubstring  ...  blinds out a marked substring such that it is not rendered in the html-document  \nBCON  ...  general setting of boundary conditions \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.BC_p___ucv___.html", 
        "id": 775, 
        "title": "BC_p___ucv___"
    }, 
    {
        "body": "\n\nBC_v ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nBlindOutSubstring  ...  blinds out a marked substring such that it is not rendered in the html-document  \nTextDecoration  ...  give colors of emphasis on the text \nBCON  ...  general setting of boundary conditions \nBC_v  ...  Velocity boundary conditions \n%BND_slip%  ...  Velocity boundary conditions: slip with viscous friction \n%BND_wall%  ...  Velocity boundary conditions: pure slip \n%BND_wall_nosl%  ...  Velocity boundary conditions: pure noslip \n%BCON_Vdot%  ...  Velocity boundary conditions based on the volume flux \nRightHandSideExpression  ...  syntax for right hand side expressions in USER_common_variables \n%MOVE_TranslationRotation%  ...  prescribe a translation with rotation on top of it \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.BC_v___ucv___.html", 
        "id": 776, 
        "title": "BC_v___ucv___"
    }, 
    {
        "body": "\n\nBUBBLE_DoTheManagement ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n%ind_ClusterSurface%  ...  clustering of free surface or of initial regular boundary \nBUBBLE_DoTheManagement  ...  switch on bubble analysis for a given chamber index \nuse_BubbleManagement  ...  switch on bubble analysis for a given chamber index \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.BUBBLE_DoTheManagement___ucv___.html", 
        "id": 777, 
        "title": "BUBBLE_DoTheManagement___ucv___"
    }, 
    {
        "body": "\n\nBUBBLE_EnforceAveragePressure ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nBUBBLE_EnforceAveragePressure  ...  fix average pressure for all bubbles \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.BUBBLE_EnforceAveragePressure___ucv___.html", 
        "id": 778, 
        "title": "BUBBLE_EnforceAveragePressure___ucv___"
    }, 
    {
        "body": "\n\nBUBBLE_pOffset ...  \n\n\n\n\n\nThis item is referenced in:\n\n\npBubble_Offset  ...  define offset pressure for bubble pressure-on-volume analysis \nBUBBLE_pOffset  ...  define offset pressure for bubble pressure-on-volume analysis \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.BUBBLE_pOffset___ucv___.html", 
        "id": 779, 
        "title": "BUBBLE_pOffset___ucv___"
    }, 
    {
        "body": "\n\nBreakageKernel ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.BreakageKernel___ucv___.html", 
        "id": 780, 
        "title": "BreakageKernel___ucv___"
    }, 
    {
        "body": "\n\nCCC_CuttingDistance ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nCCC_CuttingDistance  ...  distance up to which boundary element nodes are considered to lie on a cutting curve (optional) \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/CuttingCurves/InOutput/USER_ScanCCC_Other.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.CCC_CuttingDistance___ucv___.html", 
        "id": 781, 
        "title": "CCC_CuttingDistance___ucv___"
    }, 
    {
        "body": "\n\nCCC_clusterAllTriangles ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nCCC_clusterAllTriangles  ...  flag whether or not to determine clusters without given starting points (optional) \nCCC_seeds  ...  seeds  starting points for CuttingCurveCluster (optional) \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/CuttingCurves/InOutput/USER_ScanCCC_Other.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.CCC_clusterAllTriangles___ucv___.html", 
        "id": 782, 
        "title": "CCC_clusterAllTriangles___ucv___"
    }, 
    {
        "body": "\n\nCCC_maxSegmentLength ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nCCC_maxSegmentLength  ...  maximum segment length for linearization of cutting curves (optional) \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/CuttingCurves/InOutput/USER_ScanCCC_Other.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.CCC_maxSegmentLength___ucv___.html", 
        "id": 783, 
        "title": "CCC_maxSegmentLength___ucv___"
    }, 
    {
        "body": "\n\nCCC_minNewEdgeLength ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nCCC_minNewEdgeLength  ...  minimum absolute length for new triangle edges (optional) \nCCC_relativeEdgeLength  ...  minimum relative length for new triangle edges (optional) \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/CuttingCurves/InOutput/USER_ScanCCC_Other.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.CCC_minNewEdgeLength___ucv___.html", 
        "id": 784, 
        "title": "CCC_minNewEdgeLength___ucv___"
    }, 
    {
        "body": "\n\nCCC_relativeEdgeLength ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/CuttingCurves/InOutput/USER_ScanCCC_Other.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.CCC_relativeEdgeLength___ucv___.html", 
        "id": 785, 
        "title": "CCC_relativeEdgeLength___ucv___"
    }, 
    {
        "body": "\n\nCODI_A ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nCODI  ...  solve additional COnvection-DIffusion-problems (CODI) \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.CODI_A___ucv___.html", 
        "id": 786, 
        "title": "CODI_A___ucv___"
    }, 
    {
        "body": "\n\nCODI_D ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nBCON  ...  general setting of boundary conditions \nCODI  ...  solve additional COnvection-DIffusion-problems (CODI) \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.CODI_D___ucv___.html", 
        "id": 787, 
        "title": "CODI_D___ucv___"
    }, 
    {
        "body": "\n\nCODI_EQ ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.CODI_EQ___ucv___.html", 
        "id": 788, 
        "title": "CODI_EQ___ucv___"
    }, 
    {
        "body": "\n\nCODI_Integration ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.CODI_Integration___ucv___.html", 
        "id": 789, 
        "title": "CODI_Integration___ucv___"
    }, 
    {
        "body": "\n\nCODI_Q ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nBCON  ...  general setting of boundary conditions \nCODI  ...  solve additional COnvection-DIffusion-problems (CODI) \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.CODI_Q___ucv___.html", 
        "id": 790, 
        "title": "CODI_Q___ucv___"
    }, 
    {
        "body": "\n\nCODI_V ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nCODI  ...  solve additional COnvection-DIffusion-problems (CODI) \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.CODI_V___ucv___.html", 
        "id": 791, 
        "title": "CODI_V___ucv___"
    }, 
    {
        "body": "\n\nCODI_Vimplicit ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nCODI  ...  solve additional COnvection-DIffusion-problems (CODI) \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.CODI_Vimplicit___ucv___.html", 
        "id": 792, 
        "title": "CODI_Vimplicit___ucv___"
    }, 
    {
        "body": "\n\nCODI_c ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.CODI_c___ucv___.html", 
        "id": 793, 
        "title": "CODI_c___ucv___"
    }, 
    {
        "body": "\n\nCODI_eq ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nCODI  ...  solve additional COnvection-DIffusion-problems (CODI) \nDruckerPragerModel  ...  use the GeneralYieldStress functionality to derive behavior of granular materials \nADTV  ...  adaptive smoothing length definition \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.CODI_eq___ucv___.html", 
        "id": 794, 
        "title": "CODI_eq___ucv___"
    }, 
    {
        "body": "\n\nCODI_min_max_RejectLinearSolution ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nCODI  ...  solve additional COnvection-DIffusion-problems (CODI) \nENFORCE_min_max_RejectLinearSolution  ...  rejection of the solution of a sparse linear system if minimum-maximum criteria are not fulfilled \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.CODI_min_max_RejectLinearSolution___ucv___.html", 
        "id": 795, 
        "title": "CODI_min_max_RejectLinearSolution___ucv___"
    }, 
    {
        "body": "\n\nCODI_min_max ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nBC_v  ...  Velocity boundary conditions \nCODI  ...  solve additional COnvection-DIffusion-problems (CODI) \nENFORCE_min_max  ...  set lower and upper bound for any FPM-variable \nADTV  ...  adaptive smoothing length definition \nReleases  ...  information on the MESHFREE releases \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.CODI_min_max___ucv___.html", 
        "id": 796, 
        "title": "CODI_min_max___ucv___"
    }, 
    {
        "body": "\n\nCODI_rho ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nCODI  ...  solve additional COnvection-DIffusion-problems (CODI) \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.CODI_rho___ucv___.html", 
        "id": 797, 
        "title": "CODI_rho___ucv___"
    }, 
    {
        "body": "\n\nCOEFF_dt_Darcy ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.COEFF_dt_Darcy___ucv___.html", 
        "id": 798, 
        "title": "COEFF_dt_Darcy___ucv___"
    }, 
    {
        "body": "\n\nCOEFF_dt_SurfaceTension_A ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.COEFF_dt_SurfaceTension_A___ucv___.html", 
        "id": 799, 
        "title": "COEFF_dt_SurfaceTension_A___ucv___"
    }, 
    {
        "body": "\n\nCOEFF_dt_SurfaceTension_B ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.COEFF_dt_SurfaceTension_B___ucv___.html", 
        "id": 800, 
        "title": "COEFF_dt_SurfaceTension_B___ucv___"
    }, 
    {
        "body": "\n\nCOEFF_dt_SurfaceTension_C ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.COEFF_dt_SurfaceTension_C___ucv___.html", 
        "id": 801, 
        "title": "COEFF_dt_SurfaceTension_C___ucv___"
    }, 
    {
        "body": "\n\nCOEFF_dt ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.COEFF_dt___ucv___.html", 
        "id": 802, 
        "title": "COEFF_dt___ucv___"
    }, 
    {
        "body": "\n\nCOEFF_dt_free ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.COEFF_dt_free___ucv___.html", 
        "id": 803, 
        "title": "COEFF_dt_free___ucv___"
    }, 
    {
        "body": "\n\nCOEFF_dt_virt ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.COEFF_dt_virt___ucv___.html", 
        "id": 804, 
        "title": "COEFF_dt_virt___ucv___"
    }, 
    {
        "body": "\n\nCOEFF_mue ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.COEFF_mue___ucv___.html", 
        "id": 805, 
        "title": "COEFF_mue___ucv___"
    }, 
    {
        "body": "\n\nCOMP_CosEdgeAngle ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.COMP_CosEdgeAngle___ucv___.html", 
        "id": 806, 
        "title": "COMP_CosEdgeAngle___ucv___"
    }, 
    {
        "body": "\n\nCOMP_DropletphaseWithDisturbance ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.COMP_DropletphaseWithDisturbance___ucv___.html", 
        "id": 807, 
        "title": "COMP_DropletphaseWithDisturbance___ucv___"
    }, 
    {
        "body": "\n\nCOMP_RemeshBoundary ...  \n\n\n\n\n\nThis item is referenced in:\n\n\ninclude{File}  ...  definition a geometry file to be read by FPM \nCOMP_RemeshBoundary  ...  \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.COMP_RemeshBoundary___ucv___.html", 
        "id": 808, 
        "title": "COMP_RemeshBoundary___ucv___"
    }, 
    {
        "body": "\n\nCOMP_dt_indep ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.COMP_dt_indep___ucv___.html", 
        "id": 809, 
        "title": "COMP_dt_indep___ucv___"
    }, 
    {
        "body": "\n\nCOMP_facSmooth_Eta ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.COMP_facSmooth_Eta___ucv___.html", 
        "id": 810, 
        "title": "COMP_facSmooth_Eta___ucv___"
    }, 
    {
        "body": "\n\nCOMP_nbSmooth_Eta ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.COMP_nbSmooth_Eta___ucv___.html", 
        "id": 811, 
        "title": "COMP_nbSmooth_Eta___ucv___"
    }, 
    {
        "body": "\n\nCOORDTRANS ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.COORDTRANS___ucv___.html", 
        "id": 812, 
        "title": "COORDTRANS___ucv___"
    }, 
    {
        "body": "\n\nContinuousPhase ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.ContinuousPhase___ucv___.html", 
        "id": 813, 
        "title": "ContinuousPhase___ucv___"
    }, 
    {
        "body": "\n\nDELT_dt ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.DELT_dt___ucv___.html", 
        "id": 814, 
        "title": "DELT_dt___ucv___"
    }, 
    {
        "body": "\n\nDELT_dt_AddCond ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.DELT_dt_AddCond___ucv___.html", 
        "id": 815, 
        "title": "DELT_dt_AddCond___ucv___"
    }, 
    {
        "body": "\n\nDELT_dt_start ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.DELT_dt_start___ucv___.html", 
        "id": 816, 
        "title": "DELT_dt_start___ucv___"
    }, 
    {
        "body": "\n\nDELT_dt_variable ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.DELT_dt_variable___ucv___.html", 
        "id": 817, 
        "title": "DELT_dt_variable___ucv___"
    }, 
    {
        "body": "\n\nDIFFOP_ConsistentGradient ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nDIFFOP_ConsistentGradient  ...  consistent gradient in the sense d/dn = n*grad \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.DIFFOP_ConsistentGradient___ucv___.html", 
        "id": 818, 
        "title": "DIFFOP_ConsistentGradient___ucv___"
    }, 
    {
        "body": "\n\nDIFFOP_kernel_Gradient ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.DIFFOP_kernel_Gradient___ucv___.html", 
        "id": 819, 
        "title": "DIFFOP_kernel_Gradient___ucv___"
    }, 
    {
        "body": "\n\nDIFFOP_kernel_Laplace ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.DIFFOP_kernel_Laplace___ucv___.html", 
        "id": 820, 
        "title": "DIFFOP_kernel_Laplace___ucv___"
    }, 
    {
        "body": "\n\nDIFFOP_kernel_Neumann ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nDIFFOP_kernel_Neumann  ...  kernel shape parameter for the d/dn-Operators (Neumann-operators) \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.DIFFOP_kernel_Neumann___ucv___.html", 
        "id": 821, 
        "title": "DIFFOP_kernel_Neumann___ucv___"
    }, 
    {
        "body": "\n\nDIFFOP_kernel_Transport ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.DIFFOP_kernel_Transport___ucv___.html", 
        "id": 822, 
        "title": "DIFFOP_kernel_Transport___ucv___"
    }, 
    {
        "body": "\n\nDIFFOP_laplace ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.DIFFOP_laplace___ucv___.html", 
        "id": 823, 
        "title": "DIFFOP_laplace___ucv___"
    }, 
    {
        "body": "\n\nDarcyBasisVelocity ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.DarcyBasisVelocity___ucv___.html", 
        "id": 824, 
        "title": "DarcyBasisVelocity___ucv___"
    }, 
    {
        "body": "\n\nDarcyConstant ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.DarcyConstant___ucv___.html", 
        "id": 825, 
        "title": "DarcyConstant___ucv___"
    }, 
    {
        "body": "\n\nDaughterParticleDistribution ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.DaughterParticleDistribution___ucv___.html", 
        "id": 826, 
        "title": "DaughterParticleDistribution___ucv___"
    }, 
    {
        "body": "\n\nDaughterParticleProbability ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.DaughterParticleProbability___ucv___.html", 
        "id": 827, 
        "title": "DaughterParticleProbability___ucv___"
    }, 
    {
        "body": "\n\nDiffLaw ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.DiffLaw___ucv___.html", 
        "id": 828, 
        "title": "DiffLaw___ucv___"
    }, 
    {
        "body": "\n\nDovmmUntilTime_DovpmFromTime ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.DovmmUntilTime_DovpmFromTime___ucv___.html", 
        "id": 829, 
        "title": "DovmmUntilTime_DovpmFromTime___ucv___"
    }, 
    {
        "body": "\n\nDovpmFromTime ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.DovpmFromTime___ucv___.html", 
        "id": 830, 
        "title": "DovpmFromTime___ucv___"
    }, 
    {
        "body": "\n\nENFORCE_min_max_RejectLinearSolution ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nCODI_min_max_RejectLinearSolution  ...  rejection of the solution of a sparse linear system if minimum-maximum criteria are not fulfilled \nENFORCE_min_max  ...  set lower and upper bound for any FPM-variable \nENFORCE_min_max_RejectLinearSolution  ...  rejection of the solution of a sparse linear system if minimum-maximum criteria are not fulfilled \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.ENFORCE_min_max_RejectLinearSolution___ucv___.html", 
        "id": 831, 
        "title": "ENFORCE_min_max_RejectLinearSolution___ucv___"
    }, 
    {
        "body": "\n\nENFORCE_min_max ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nCODI_min_max  ...  set lower and upper bound for any FPM-variable \nENFORCE_min_max  ...  set lower and upper bound for any FPM-variable \nENFORCE_min_max_RejectLinearSolution  ...  rejection of the solution of a sparse linear system if minimum-maximum criteria are not fulfilled \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.ENFORCE_min_max___ucv___.html", 
        "id": 832, 
        "title": "ENFORCE_min_max___ucv___"
    }, 
    {
        "body": "\n\nEVENT ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nEVENT  ...  events defined for the point cloud \nEventMessage  ...  define event message with message code \nReleases  ...  information on the MESHFREE releases \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.EVENT___ucv___.html", 
        "id": 833, 
        "title": "EVENT___ucv___"
    }, 
    {
        "body": "\n\nEventMessage ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nEVENT  ...  events defined for the point cloud \nEventMessage  ...  define event message with message code \nReleases  ...  information on the MESHFREE releases \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.EventMessage___ucv___.html", 
        "id": 834, 
        "title": "EventMessage___ucv___"
    }, 
    {
        "body": "\n\ncommon_variables ...  input file for development and debugging purposes \n\n\n\n\n\nList of members:\n\n\nAMFPMJ_CommonAdministrationDirectory  ...  define a directory that FPM uses for synchronization of multiple FPM jobs \nAPPROXIMATENEWPOINTS_HowToApproximateKEPS  ...  \nAPPROXIMATENEWPOINTS_SeparateInteriorAndBoundaryPoints  ...  \nAPPROXIMATENEWPOINTS_SeparateInteriorBoundary  ...  \nBCGSL_ell  ...  \nBE_COLLAPSE_collapsebeforeflip  ...  \nBE_COLLAPSE_specifycollapse  ...  \nBE_COLLAPSE_tocollapse  ...  \nBE_COLLAPSE_tolerance  ...  \nBND_SearchTreeAdministration_NbTimeStepsUntilFirstSkip  ...  skip the construction of the boundary element search tree after this many time cycles \nBND_SearchTreeAdministration_RefreshTreeAfterHowManyCycles  ...  refresh the boundary element search tree after this many time cycles \nBND_alpha  ...  \nBND_beta  ...  \nBND_gamma  ...  \nBUBBLE_DoTheManagement  ...  switch on bubble analysis for a given chamber index \nBUBBLE_EnforceAveragePressure  ...  fix average pressure for all bubbles \nBUBBLE_UseTopologyConstraint  ...  use topoly analysis for bubble-volume computation \nBUBBLE_pOffset  ...  define offset pressure for bubble pressure-on-volume analysis \nCLUSTER_Size  ...  \nCOEFF_Iopp_Repair  ...  \nCOEFF_dt  ...  \nCOEFF_dt_Darcy  ...  \nCOEFF_dt_SurfaceTension_A  ...  \nCOEFF_dt_SurfaceTension_B  ...  \nCOEFF_dt_SurfaceTension_C  ...  \nCOEFF_dt_free  ...  \nCOEFF_dt_virt  ...  \nCOEFF_mue  ...  \nCOEFF_p_divV  ...  \nCOEFF_penalty  ...  \nCOMP_AddBoundaryParticles  ...  \nCOMP_AddInteriorParticles  ...  \nCOMP_AdjustEtaEff  ...  \nCOMP_CheckConservationDuringOrganization  ...  \nCOMP_CosEdgeAngle  ...  \nCOMP_CosOpenEdge  ...  pretent how the boundary continues at an open edge \nCOMP_DeflationLevel  ...  \nCOMP_DoOrganizePointsUntil  ...  \nCOMP_DropletphaseWithDisturbance  ...  \nCOMP_FastBoundaryRefill  ...  \nCOMP_FillEdges  ...  \nCOMP_GradtEtaGrad_Version  ...  \nCOMP_HydrostaticPressure  ...  \nCOMP_IsolatedParticles_MinNbOfInteriorNeigh  ...  minimum number of interior neighbors a particles should have \nCOMP_IsolatedParticles_MinNbOfNeigh  ...  minimum number of neighbors (total) a particles should have \nCOMP_MaxSubCycle  ...  \nCOMP_MemCheck  ...  \nCOMP_MinSubCycle  ...  \nCOMP_OppositePoints_NoFreeSurface  ...  \nCOMP_RandomizedFilling  ...  \nCOMP_ReduceSn  ...  \nCOMP_RemeshBoundary  ...  \nCOMP_RemoveBoundaryParticles  ...  \nCOMP_RemoveInteriorParticles  ...  \nCOMP_SkipHighVelocities  ...  for how many consecutive cycles a corrupt solution of velocity is accepted, before FPM stops  \nCOMP_SortBEintoBoxes_Version  ...  version how to organize/prepare boundary elements for efficient computation \nCOMP_StressRelaxAtFreeAndSlipSurface  ...  \nCOMP_TimeCheck  ...  switch on time measurements for the main tasks of FPM \nCOMP_WettingAngleVariante  ...  \nCOMP_WettingAngleWeight  ...  \nCOMP_dt_indep  ...  \nCOMP_evoid  ...  \nCOMP_facSmooth_Eta  ...  \nCOMP_nbSmooth_Darcy  ...  \nCOMP_nbSmooth_Eta  ...  \nCOMP_nbSmooth_pCorr  ...  \nCONTROL_DirectTesting  ...  Instead of launching the computation, FPM goes into a separate testing branch for different tasks \nCONTROL_DirectTesting_Param1  ...  additional parameter for the testing environment \nCONTROL_DirectTesting_Param2  ...  additional parameter for the testing environment \nCONTROL_StopAfterReadingGeometry  ...  stops the FPM program after geometry is read \nCONTROL_writeUcvLines  ...  write out the Ucv-lines read during startup (debugging fewature) \nCoarsenGeometry  ...  \nCompDistToBoundary_Acc  ...  threshold of distance until which the distance to different BE is treated as equal \nCompDistToBoundary_EffectiveSearchRadius  ...  \nDEBUG_Check_CCOR  ...  generate control writeout for correction pressure \nDEBUG_Check_PDYN  ...  generate control writeout for dynamic pressure \nDEBUG_Check_PHYD  ...  generate control writeout for hydrostatic pressure \nDEBUG_Check_VELO  ...  generate control writeout for velocity \nDEBUG_DefaultRescue  ...  \nDEL_rel_dist_shuffle  ...  \nDIFFOP_
ConsistentGradient  ...  consistent gradient in the sense d/dn = n*grad \nDIFFOP_Neumann_ExcludeBND  ...  exclude boundary particles from neighborhood for computation of Neumann operator \nDIFFOP_PPI_Gradient  ...  \nDIFFOP_PPI_Laplace  ...  \nDIFFOP_PPI_Neumann  ...  \nDIFFOP_Version  ...  \nDIFFOP_WeightReductionInCaseOfDeactivation  ...  reduce weight of neighbor particle by this factor in case of deactivation \nDIFFOP_gradient  ...  \nDIFFOP_kernel_Gradient  ...  \nDIFFOP_kernel_Laplace  ...  \nDIFFOP_kernel_Neumann  ...  kernel shape parameter for the d/dn-Operators (Neumann-operators) \nDIFFOP_kernel_Transport  ...  \nDIFFOP_laplace  ...  \nDarcy_PrimaryDirection  ...  \nDarcy_PrimaryDirectionFactor  ...  \nELASTOPLASTIC_FadeOut_divS_gradP  ...  \nEPS_global  ...  \nExtendSmallGaps  ...  \nFLIQUID_AssignPenalties_EpsilonP  ...  vp- coupled linear system: lower bound for ratio between pressure and velocity entries, PRESSURE EQUATION \nFLIQUID_AssignPenalties_EpsilonV  ...  vp- coupled linear system: upper bound for ratio between velocity and pressure entries, VELOCITY EQUATION \nFLIQUID_ConsistentPressure_CoeffJOKER  ...  TEMPORARY: factor to study consistent pressure version 2 \nFLIQUID_ConsistentPressure_CoeffMM  ...  TEMPORARY: factor to study consistent pressure version 2 \nFLIQUID_ConsistentPressure_CoeffNN  ...  TEMPORARY: factor to study consistent pressure version 2 \nFLIQUID_ConsistentPressure_CoeffTT  ...  TEMPORARY: factor to study consistent pressure version 2 \nFLIQUID_ConsistentPressure_CoeffWEIGHT  ...  TEMPORARY: factor to study consistent pressure version 2 \nFLIQUID_ConsistentPressure_UseDivV  ...  use numerical approximations of div(v) in direct computation of dynamic pressure (i.e. consistent pressure) \nFLIQUID_ConsistentPressure_Version  ...  version how to compute the consistent pressure \nFLIQUID_CorrectionPressure_Version  ...  (Experimental) Choice among different ways to compute correction pressure \nFOFTLIQUID_AdditionalCorrectionLoops  ...  \nGASDYN_CorrectEnergy  ...  \nGASDYN_CorrectMass  ...  \nGASDYN_T_gain  ...  \nGASDYN_T_loss  ...  \nGASDYN_p_gain  ...  \nGASDYN_p_loss  ...  \nGASDYN_r_gain  ...  \nGASDYN_r_loss  ...  \nGLOBAL_N_iterations  ...  \nGLOBAL_eps_mass  ...  \nGLOBAL_eps_momentum  ...  \nHowToTreatPause  ...  \nIGES_Accuracy  ...  \nINTEGRATION_ReopenTimestpFilesAfterHowManyCycles  ...  *.timestep-Files close and reopen again after how many cycles (debug reasons) \nIS_GPU  ...  \nITERATION_EstimatedFutureStressTensor  ...  \nITERATION_evoid  ...  \nITWMESI_PressureMapping_Filter  ...  coupling ITWMESI filter for mapping the pressure solution to the boundary elements \nITWMESI_PressureMapping_WeightPdyn  ...  coupling ITWMESI weight for mapping dynamic pressure \nITWMESI_PressureMapping_WeightPhyd  ...  coupling ITWMESI weight for mapping hydrostatic pressure \nITWMESI_ShearForceMapping_BasedOnStresses  ...  coupling ITWMESI: decide whether the shear forces be projected as stress values (N/m^2) or as forces (N) \nITWMESI_ShearForceMapping_Filter  ...  coupling ITWMESI filter for mapping the shear force solution to the VPS boundary elements \nITWMESI_ShearForceMapping_Weight  ...  coupling ITWMESI weight for mapping the shear forces \nLINEQN_scaling  ...  choose the way how to scale/normalize the linear systems (so far implemented only for the SAMG-case) \nLINEQN_solver  ...  linear solver to be used for the coupled vp- or v-- system \nLINEQN_solver_ScalarSystems  ...  linear solver to be used for the scalar systems like pressure, temperature, etc. \nMPI_CommunicationMethod  ...  \nMPI_ExcludeDirectionFromBisection  ...  \nMULTIGRID_CutOff  ...  \nMaximumNumberOfPointsDuringComputation  ...  \nNEIGHBOR_FilterMethod  ...  chose how to exclude neighbors from FPM-points at critical geometry parts \nNEIGHBOR_filter_level  ...  \nN_addvar  ...  definition of the number of %ind_addvar% to be used in the project \nNb_InflowLayers  ... Nb_InflowLayers\nOPTIMIZATION_InitialGuessOfVi_Fast  ...  \nORGANIZE_CheckAllPointsForFreeSurfaceUntilTimeStep  ...  \nORGANIZE_CheckPointsAtFS_
PerformPreCheck  ...  invoke additional algorithm in order to find candidates for free surface detection \nORGANIZE_DevelopperCheck_Version  ...  version of the debugging routine ORGANIZE_DevelopperCheck \nORGANIZE_ForceInsideCheckForAllParticles  ...  \nORGANIZE_ForceInsideCheckForNewParticles  ...  \nORGANIZE_ForceTouchCheckAtWalls  ...  \nORGANIZE_PSTOneReductionStep_Version  ...  version how to reduce FPM points if they become to close to each other \nORGANIZE_PSTOneRefillStep3_UseFromWhichTime  ...  use the new implementation of PST_OneRefillStep_3 from which time \nORGANIZE_QualityCheck_ListNbOfNeighbors  ...  number of neighbors per particle for whcih the quality check has to be performed \nORGANIZE_ReducedFillingOfWalls  ...  allow reduced filling of boundaries marked as walls \nORGANIZE_ReducedFillingOfWallsIgnoreNofillForStartup  ...  \nORGANIZE_RefillOnlyForActiveBoundaryParticles  ...  FPM-point refilling procedure along the boundary triggered only for active boundary particles \nORGANIZE_ToleranceForGapAnalysisOfRegularBoundary  ...  \nORGANIZE_USER_update_boundary_particles_Version  ...  version of USER_update_boundary_particles.f90 to be used \nPARTPHASE_elasticity  ...  \nPARTPHASE_friction  ...  \nPARTPHASE_wall_friction  ...  \nPHASE_distinction  ...  invoke detection of interface connections \nPointDsplMethod  ...  (Experimental) Choice among different ways to move points in Lagrangian framework \nQUICKVIEW_SaveHowOften  ...  \nQUICKVIEW_VariableList  ...  \nQUICKVIEW_Version  ...  \nQUICKVIEW_WhichParticles  ...  \nRepairGeometry  ...  \nSAVE_QuickView  ...  \nSAVE_atEndOfTimestep  ...  Choose to save data for visualization at the end of time-steps (instead of at the start) \nSCAN_ClustersOfConnectivity  ...  switch on cluster checking of FPM pointcloud by neighborhood connectivity \nSIGNAL_LaunchComputationalSteering  ...  launch the computational steering process at FPM startup, i.e. control FPM by the SIGNAL file \nSOLVEV_N_iterations  ...  \nSPAI_eps  ...  \nSPAI_first  ...  \nSPAI_maxentries  ...  \nSPAI_maxiter  ...  \nSPAI_precond_method  ...  \nSPAI_precond_preparation  ...  \nSPAI_restart  ...  \nSPAI_smax  ...  \nSPM_N_iterations  ...  \nSPM_Regularization_Epsilon  ...  adjust numerical parameter epsilon for the matrix regularizations \nSPM_Regularization_Type  ...  regularization type if all boundaries are Neumann-type \nSTRESSTENSOR_NumberSubcycles  ...  \nSTRESSTENSOR_Variante  ...  \nSTRESSTENSOR_Variante_Factor  ...  \nSURFACETENSION_FacSmooth  ...  \nSURFACETENSION_NbSmooth  ...  \nSaveRestartOnInit  ...  \nSimCut  ...  \nSurfaceTesselationActiveBoundary_cRadius  ...  radius of the basic disc for the surface tesselation cells on active boundary, including free surface, excluding inactive points \nSurfaceTesselationRegularBoundary_cRadius  ...  radius of the basic disc for the surface tesselation cells on regular boundary \nT_fin  ...  \nT_st  ...  \nUCV_ConsistencyCheck  ...  \nUSER_curve_interpol_cache  ...  turn on caching in USER_curve_interpol_3 \nUseBoxSystemVersion  ...  force FPM to use a certain tree algorithm for the FPM-point neighbor search \nV00_SmoothDivV  ...  Chorin projection: smooth the local values of div(v) before going into the correction pressure computation \nVOLUME_correction  ...  correct volume by GLOBALLY adjusting the divergence of velocity term \nVOLUME_correction_FreeSurface  ...  correct volume by tiny global lifting of the free surface \nVOLUME_correction_ResetOnRestart  ...  \nVOLUME_correction_local  ...  correct volume by LOCALLY adjusting the divergence of velocity term \nVP0_VelocityCorrection  ...  invoke velocity correction based on correction pressure (%ind_c%) for vp- solver \nWRITEOUTPUT_Level_Organize  ...  \nWallLayer  ...  \nWhichIndexingMethod  ...  \nadditionalPoint_approximation  ...  \nalpha_O1  ...  \ncompute_FS  ...  \ncompute_LAYER  ...  \ncompute_phase_boundary  ...  invoke detection of interface connections \ncorrect_CONS  ...  \ncorrection_pressure  ...  \ncv_DateCompiled  ...  \ncv_DateCompiled_Seed  ...  \ndamping_p_corr  ...  \
ndelta_uw  ...  \ndelta_uw_bp  ...  \ndist_BND_from_FS  ...  \ndist_FS_from_BND  ...  \ndist_FS_new_part  ...  \ndist_LayerThickness  ...  \ndist_aip  ...  initial relative distance to boundary of a newly injected FPM-point (aip = add injected particles) \ndist_between_phases  ...  \ndist_merge_opp_face  ...  \ndist_rab  ...  relative allowed minimum distance of FPM-points to boundary (rab = remove at boundary) \ndist_rip  ...  relative allowed minimum distance between FPM-points (rip = remove interior points) \ndt_TEMPERATURE  ...  \ndt_VELOCITY  ...  \neps_T  ...  \neps_p  ...  \neps_phyd  ...  \neps_v  ...  \nfreq_restart  ...  \ninitial_particles  ...  \nint_BND_part_add  ...  \nint_BND_part_remove  ...  \nint_part_add  ...  \nint_part_cross_BND  ...  \nint_part_remove  ...  \nint_part_smooth  ...  \nkind_of_method  ...  \nlimiter  ...  \nmax_N_stencil  ...  maximum number of neighbor particles accepted for stencil computation and numerics \nmax_N_stencil_INTERIOR  ...  max. number of neighbors accepted for stencil computation and numerics only for interior pooints \nnue  ...  \nord_convection  ...  \nord_eval  ...  \nord_gradient  ...  define approximation order of the gradient operators \nord_laplace  ...  \nord_smooth  ...  \npBubble_Offset  ...  define offset pressure for bubble pressure-on-volume analysis \nprec_act_BND  ...  \nprec_comp_FS_normal  ...  \nprec_seek_FS  ...  \nprec_seek_holes  ...  \nradius_hole  ...  relative allowed hole size \nread_Y  ...  deprecated, not used any more, to be set by restart in USER_common_variables \nrel_dist  ...  \nrel_dist_bound  ...  \nrel_dist_edge  ...  \nrestart_file  ...  \nrestartnewBE_filling  ...  \nsmooth_BND_movement  ...  \nsmooth_BND_normal  ...  \nsmooth_FS  ...  \nsmooth_FS_SurfaceTension  ...  \nstretch_search  ...  \ntime_integration_expl  ...  \ntime_step_gain  ...  \ntime_step_loss  ...  \ntryMaikesTriangulation  ...  \nturn_down_BND_order  ...  automatically reduce the approximation of a boundary particle \nuse_BubbleManagement  ...  switch on bubble analysis for a given chamber index \nvel_dim  ...  \nwho_am_I  ...  \nwrite_debug  ...  \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.html", 
        "id": 835, 
        "title": "common_variables"
    }, 
    {
        "body": "\n\nFLIQUID_CorrectionPressure_Version ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nFLIQUID_CorrectionPressure_Version  ...  (Experimental) Choice among different ways to compute correction pressure \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.FLIQUID_CorrectionPressure_Version___ucv___.html", 
        "id": 836, 
        "title": "FLIQUID_CorrectionPressure_Version___ucv___"
    }, 
    {
        "body": "\n\nFOFTLIQUID_AdditionalCorrectionLoops ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.FOFTLIQUID_AdditionalCorrectionLoops___ucv___.html", 
        "id": 837, 
        "title": "FOFTLIQUID_AdditionalCorrectionLoops___ucv___"
    }, 
    {
        "body": "\n\nForbidContactToChambers ...  NOT USED, but planned \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.ForbidContactToChambers___ucv___.html", 
        "id": 838, 
        "title": "ForbidContactToChambers___ucv___"
    }, 
    {
        "body": "\n\nGenerateBubbleAtInflow ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.GenerateBubbleAtInflow___ucv___.html", 
        "id": 839, 
        "title": "GenerateBubbleAtInflow___ucv___"
    }, 
    {
        "body": "\n\nIGES_Accuracy ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.IGES_Accuracy___ucv___.html", 
        "id": 840, 
        "title": "IGES_Accuracy___ucv___"
    }, 
    {
        "body": "\n\nINITDATA ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nTextDecoration  ...  give colors of emphasis on the text \nDruckerPragerModel  ...  use the GeneralYieldStress functionality to derive behavior of granular materials \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.INITDATA___ucv___.html", 
        "id": 841, 
        "title": "INITDATA___ucv___"
    }, 
    {
        "body": "\n\nINTEGRATION ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nCuttingCurveCluster  ...  define clusters of boundary elements by cutting the geometry along given curves \ninteg()  ...  incorporate integration results in an equation \nINTEGRATION  ...  Integration of the simulation results \n__SelectionFeature__  ...  additional option to further select FPM points for the integration statement \n__HeaderInfoOrComments__  ...  optionally add comments to your intergration items \n%INTEGRATION_Header%  ...  item to signalize that heade information is given \n%INTEGRATION_BND_DIRECT%  ...  Integration of a scalar value along pieces of boundary \n%INTEGRATION_BND%  ...  Integration of a vector valued function along pieces of boundary \n%MAXIMUM_INT%  ...  maximum of a functional based on interior FPM points \n%AVERAGE_INT%  ...  average of a functional based on interior FPM points \n%AVERAGE_BND%  ...  average of a functional based on interior FPM points \n%MINIMUM_INT%  ...  minimum of a functinal based on interior FPM points \n%MAXIMUM_BND%  ...  maximum of a functional based on boundary FPM points \n%MINIMUM_BND%  ...  minimum of a functinal based on boundary FPM points \n%POINT_APPROXIMATE%  ...  approximate any given function at a BND_point by FPM interpolation \n%INTEGRATION_FLUX%  ...  time integration of a flux by simply counting the FPM-points that slip over a given control surface \n%INTEGRATION_ABSFLUX%  ...  absolute value of a flux by simply counting the FPM-points that slip over a given control surface in either direction \n%INTEGRATION_INT%  ...  volume integration of a functional over a given material \n%INTEGRATION_INT_TIME%  ...  volume and time integration of a functional over a given material \n%PUBLICVALUE_CLOCKstatistics%  ...  extract value from a given stop watch \n%PUBLICVALUE_CPUstatistics%  ...  extract value from a given stop watch \nReleases  ...  information on the MESHFREE releases \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.INTEGRATION___ucv___.html", 
        "id": 842, 
        "title": "INTEGRATION___ucv___"
    }, 
    {
        "body": "\n\nKOP ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n%ind_next%  ...  if particles lined up, here the index of the particle next in line is stored \n%ind_prev%  ...  if particles lined up, here the index of the particle previous in line is stored \n%FPM_VOLUME_TARGET%  ...  target value of volume in a given chamber \n%FPM_VOLUME_ACTUAL%  ...  actual value of volume in a given chamber \n%FPM_VOLUME_DeletedAtMetaplanes%  ...  volume reduced by deletion of FPM points at metaplanes in the current time cycle \n%FPM_KineticEnergy_DifferenceInOrganize%  ...  change of kinetic energy in some chamber during the organization step of FPM \n%FPM_KineticEnergy_DifferenceInOrganize2%  ...  change of kinetic energy in some chamber during organizations at the end of the time step (should be strictly zero, just to check) \n%FPM_KineticEnergy_DifferenceInTimeStep%  ...  change of kinetic energy in some chamber during the execution of the time step \n%FPM_KineticEnergy%  ...  provide total kinetic energy of a given chamber \n%FPM_KineticEnergy_Defect_gradPv%  ...  first order defect of kinetic energy during time integration due to pressure \n%FPM_KineticEnergy_Defect_rhogDv%  ...  first order defect of kinetic energy during time integration due to gravity \n%FPM_KineticEnergy_Defect_O2%  ...  second order defect of kinetic energy during time integration \nSHALLOWWATER  ...  Solver for shallow water equations \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.KOP___ucv___.html", 
        "id": 843, 
        "title": "KOP___ucv___"
    }, 
    {
        "body": "\n\nKindOfProblem ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.KindOfProblem___ucv___.html", 
        "id": 844, 
        "title": "KindOfProblem___ucv___"
    }, 
    {
        "body": "\n\nLINEQN_scaling ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nLINEQN_scaling  ...  choose the way how to scale/normalize the linear systems (so far implemented only for the SAMG-case) \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.LINEQN_scaling___ucv___.html", 
        "id": 845, 
        "title": "LINEQN_scaling___ucv___"
    }, 
    {
        "body": "\n\nLINEQN_solver_ScalarSystems ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nLINEQN_solver_ScalarSystems  ...  linear solver to be used for the scalar systems like pressure, temperature, etc. \nCray  ...  special version for CRAY architecture, NO computational steering, WITH SAMG  \nMPI4  ...  FPM version compiled with IntelFortran v14.0 and MPI v4.1 (MPI3 standard), allows computational steering, NO SAMG \nMPI4_noCS  ...  FPM version compiled with IntelFortran v14.0 and MPI v4.1 (MPI3 standard), NO computational steering, NO SAMG \nMPI4_noCS_SAMG  ...  FPM version compiled with IntelFortran v14.0 and MPI v4.1 (MPI3 standard), NO computational steering, WITH SAMG \nStandard  ...  FPM version compiled with IntelFortran v13.1 and MPI v3.2 (MPI2 standard), allows computational steering, NO SAMG \nStandard_noCS  ...  FPM version compiled with IntelFortran v13.1 and MPI v3.2 (MPI2 standard), NO computational steering, NO SAMG \nStandard_noCS_SAMG  ...  FPM version compiled with IntelFortran v13.1 and MPI v3.2 (MPI2 standard), NO computational steering, WITH SAMG \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.LINEQN_solver_ScalarSystems___ucv___.html", 
        "id": 846, 
        "title": "LINEQN_solver_ScalarSystems___ucv___"
    }, 
    {
        "body": "\n\nLINEQN_solver ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nBCGSL_ell  ...  \nLINEQN_solver  ...  linear solver to be used for the coupled vp- or v-- system \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.LINEQN_solver___ucv___.html", 
        "id": 847, 
        "title": "LINEQN_solver___ucv___"
    }, 
    {
        "body": "\n\nMONITORPOINTS_CREATION_FunctionEvaluation ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n%MONITORPOINTS_CREATION_IrreducibleFPMpoint%  ...  mark FPM points to be irreducible \nMONITORPOINTS_CREATION_FunctionEvaluation  ...  provide dedicated function values at creation time to the monitor point \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.MONITORPOINTS_CREATION_FunctionEvaluation___ucv___.html", 
        "id": 848, 
        "title": "MONITORPOINTS_CREATION_FunctionEvaluation___ucv___"
    }, 
    {
        "body": "\n\nMONITORPOINTS_CREATION ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nMONITORPOINTS_CREATION  ...  create monitor points due given conditions \n%MONITORPOINTS_CREATION_AtBoundary%  ...  create monitor points due given conditions and place it AT BOUNDARY \n%MONITORPOINTS_CREATION_Inside%  ...  create monitor points due given conditions, but do not attach to boundary \n%MONITORPOINTS_CREATION_IrreducibleFPMpoint%  ...  mark FPM points to be irreducible \n%MONITORPOINTS_CREATION_PenetrationOfBlindAndEmptyBoundary%  ...  create monitor point if FPM point penetrates BND_BlindAndEmpty boundaries \nSAVE_BE_MONITOR_ITEM  ...  monitor item to be saved per element for visualization \nSAVE_MONITOR_ITEM  ...  monitor item to be saved for visualization \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.MONITORPOINTS_CREATION___ucv___.html", 
        "id": 849, 
        "title": "MONITORPOINTS_CREATION___ucv___"
    }, 
    {
        "body": "\n\nMONITORPOINTS_DELETION ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n%MONITORPOINTS_CREATION_IrreducibleFPMpoint%  ...  mark FPM points to be irreducible \nMONITORPOINTS_DELETION  ...  delete an existing monitor point by a set of conditions \nReleases  ...  information on the MESHFREE releases \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.MONITORPOINTS_DELETION___ucv___.html", 
        "id": 850, 
        "title": "MONITORPOINTS_DELETION___ucv___"
    }, 
    {
        "body": "\n\nMONITORPOINTS_STOP ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nMONITORPOINTS_STOP  ...  delete an existing monitor point by a set of conditions \nReleases  ...  information on the MESHFREE releases \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.MONITORPOINTS_STOP___ucv___.html", 
        "id": 851, 
        "title": "MONITORPOINTS_STOP___ucv___"
    }, 
    {
        "body": "\n\nMOVE ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n%ind_MOVE%  ...  index of boundary move condition \nMOVE  ...  move parts of the boundary by explicit statement \n%MOVE_position%  ...  give s time sequence of positions which is to be followed by the geometry \n%MOVE_rotation%  ...  prescribe a rotation movement \n%MOVE_velocity%  ...  prescribe a movement by given velocity \n%MOVE_rigid%  ...  rigid body movement (translation and rotation) due to acting forces of the flow \n%MOVE_TranslationRotation%  ...  prescribe a translation with rotation on top of it \n%MOVE_vertuschka%  ...  special setting for VERTUSCHKA, a specific scientific laboratory test in geo mechanics \n%MOVE_ElasticBeam%  ...  special setting for a beam-like structure that moves like a dmaped elastic beam \n%MOVE_ProjectionOfMovementOfAnotherPart%  ...  boundary elements will follow the movement of a defined geometry part \nCONTROL_StopAfterReadingGeometry  ...  stops the FPM program after geometry is read \nUSER_curve_interpol_cache  ...  turn on caching in USER_curve_interpol_3 \nReleases  ...  information on the MESHFREE releases \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.MOVE___ucv___.html", 
        "id": 852, 
        "title": "MOVE___ucv___"
    }, 
    {
        "body": "\n\nMeanNumberDaughterDroplets ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.MeanNumberDaughterDroplets___ucv___.html", 
        "id": 853, 
        "title": "MeanNumberDaughterDroplets___ucv___"
    }, 
    {
        "body": "\n\nNumberOfDaughterParticles ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.NumberOfDaughterParticles___ucv___.html", 
        "id": 854, 
        "title": "NumberOfDaughterParticles___ucv___"
    }, 
    {
        "body": "\n\nPBE_Developement ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.PBE_Developement___ucv___.html", 
        "id": 855, 
        "title": "PBE_Developement___ucv___"
    }, 
    {
        "body": "\n\nBCGSL_ell ...  \n\n\n  Choose parameter l for linear solver BiCGstab(l). Default value is 4. \n   \n  LINEQN_solver = 'BCGL' \n  BCGSL_ell = 3 \n   \n\n\n\n\nThis item is referenced in:\n\n\nBCGSL_ell  ...  \nLINEQN_solver  ...  linear solver to be used for the coupled vp- or v-- system \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.BCGSL_ell.html", 
        "id": 856, 
        "title": "BCGSL_ell"
    }, 
    {
        "body": "\n\nPBE_Model_Alpha_Max ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.PBE_Model_Alpha_Max___ucv___.html", 
        "id": 857, 
        "title": "PBE_Model_Alpha_Max___ucv___"
    }, 
    {
        "body": "\n\nPBE_Model_Alpha_Min ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.PBE_Model_Alpha_Min___ucv___.html", 
        "id": 858, 
        "title": "PBE_Model_Alpha_Min___ucv___"
    }, 
    {
        "body": "\n\nPBE_Model_ContinuousDragSwitch ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.PBE_Model_ContinuousDragSwitch___ucv___.html", 
        "id": 859, 
        "title": "PBE_Model_ContinuousDragSwitch___ucv___"
    }, 
    {
        "body": "\n\nPBE_Model_DiffusionSwitch ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.PBE_Model_DiffusionSwitch___ucv___.html", 
        "id": 860, 
        "title": "PBE_Model_DiffusionSwitch___ucv___"
    }, 
    {
        "body": "\n\nPBE_Model_E_DropletSource ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.PBE_Model_E_DropletSource___ucv___.html", 
        "id": 861, 
        "title": "PBE_Model_E_DropletSource___ucv___"
    }, 
    {
        "body": "\n\nPBE_Model_KEPS_DropletVisibilitySwitch ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.PBE_Model_KEPS_DropletVisibilitySwitch___ucv___.html", 
        "id": 862, 
        "title": "PBE_Model_KEPS_DropletVisibilitySwitch___ucv___"
    }, 
    {
        "body": "\n\nPBE_Model_K_DropletSource ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.PBE_Model_K_DropletSource___ucv___.html", 
        "id": 863, 
        "title": "PBE_Model_K_DropletSource___ucv___"
    }, 
    {
        "body": "\n\nPBE_Model_Vmax ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.PBE_Model_Vmax___ucv___.html", 
        "id": 864, 
        "title": "PBE_Model_Vmax___ucv___"
    }, 
    {
        "body": "\n\nPBE_Model_Vmin ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.PBE_Model_Vmin___ucv___.html", 
        "id": 865, 
        "title": "PBE_Model_Vmin___ucv___"
    }, 
    {
        "body": "\n\nPBE_SolverSetup ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.PBE_SolverSetup___ucv___.html", 
        "id": 866, 
        "title": "PBE_SolverSetup___ucv___"
    }, 
    {
        "body": "\n\nPHASE_distinction ...  invoke detection of interface connections between boundary points \n\n\n  This variable can be set in common_variables.dat, too. See PHASE_distinction . \n  However, if set in USER_common_variables.dat, then previous definitions \n  in common_variables.dat will be overwritten, as USER_common_variables is read-in after common_variables. \n\n\n\n\nThis item is referenced in:\n\n\nPHASE_distinction  ...  invoke detection of interface connections between boundary points \ncompute_phase_boundary  ...  invoke detection of interface connections \nPHASE_distinction  ...  invoke detection of interface connections \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.PHASE_distinction___ucv___.html", 
        "id": 867, 
        "title": "PHASE_distinction___ucv___"
    }, 
    {
        "body": "\n\nPOSTBND ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.POSTBND___ucv___.html", 
        "id": 868, 
        "title": "POSTBND___ucv___"
    }, 
    {
        "body": "\n\nPOSTVOL ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.POSTVOL___ucv___.html", 
        "id": 869, 
        "title": "POSTVOL___ucv___"
    }, 
    {
        "body": "\n\nParticlePhase ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.ParticlePhase___ucv___.html", 
        "id": 870, 
        "title": "ParticlePhase___ucv___"
    }, 
    {
        "body": "\n\nPointDsplMethod ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nPointDsplMethod  ...  (Experimental) Choice among different ways to move points in Lagrangian framework \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.PointDsplMethod___ucv___.html", 
        "id": 871, 
        "title": "PointDsplMethod___ucv___"
    }, 
    {
        "body": "\n\nRconst ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.Rconst___ucv___.html", 
        "id": 872, 
        "title": "Rconst___ucv___"
    }, 
    {
        "body": "\n\nRelaxationTime ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.RelaxationTime___ucv___.html", 
        "id": 873, 
        "title": "RelaxationTime___ucv___"
    }, 
    {
        "body": "\n\nRemeshBoundary_OrientationBuiltInComponents ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.RemeshBoundary_OrientationBuiltInComponents___ucv___.html", 
        "id": 874, 
        "title": "RemeshBoundary_OrientationBuiltInComponents___ucv___"
    }, 
    {
        "body": "\n\nRemeshBoundary_RemoveTinyClusters ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.RemeshBoundary_RemoveTinyClusters___ucv___.html", 
        "id": 875, 
        "title": "RemeshBoundary_RemoveTinyClusters___ucv___"
    }, 
    {
        "body": "\n\nRepairGeometry ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.RepairGeometry___ucv___.html", 
        "id": 876, 
        "title": "RepairGeometry___ucv___"
    }, 
    {
        "body": "\n\nRestartStepSize ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nRestartStepSize  ...  define after how many time cycles a restart file has to be generated \n%RESTART_sequence%  ...  define a sequence of restart files \n%RESTART_single%  ...  define the production of a single restart file \nDefineRestart  ...  save restart files \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.RestartStepSize___ucv___.html", 
        "id": 877, 
        "title": "RestartStepSize___ucv___"
    }, 
    {
        "body": "\n\nRestart_AdditionalBE ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.Restart_AdditionalBE___ucv___.html", 
        "id": 878, 
        "title": "Restart_AdditionalBE___ucv___"
    }, 
    {
        "body": "\n\nRestart_Copying ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.Restart_Copying___ucv___.html", 
        "id": 879, 
        "title": "Restart_Copying___ucv___"
    }, 
    {
        "body": "\n\nRestart_ToBeRemoved ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.Restart_ToBeRemoved___ucv___.html", 
        "id": 880, 
        "title": "Restart_ToBeRemoved___ucv___"
    }, 
    {
        "body": "\n\nRestart ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nLaunchRestart  ...  launch FPM on the basis of a restart file \nsave  ...  write an FPM restart file after the end of the current time step \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.Restart___ucv___.html", 
        "id": 881, 
        "title": "Restart___ucv___"
    }, 
    {
        "body": "\n\nSAVE_ABAQUS ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.SAVE_ABAQUS___ucv___.html", 
        "id": 882, 
        "title": "SAVE_ABAQUS___ucv___"
    }, 
    {
        "body": "\n\nSAVE_BE_MONITOR_ITEM ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nSAVE_BE_MONITOR_ITEM  ...  monitor item to be saved per element for visualization \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.SAVE_BE_MONITOR_ITEM___ucv___.html", 
        "id": 883, 
        "title": "SAVE_BE_MONITOR_ITEM___ucv___"
    }, 
    {
        "body": "\n\nSAVE_CoordinateSystem ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.SAVE_CoordinateSystem___ucv___.html", 
        "id": 884, 
        "title": "SAVE_CoordinateSystem___ucv___"
    }, 
    {
        "body": "\n\nSAVE_ITEM ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nCuttingCurveCluster  ...  define clusters of boundary elements by cutting the geometry along given curves \nResults  ...  save computational results in different formats \nSAVE_ITEM  ...  item to be saved for visualization \nSAVE_MONITOR_ITEM  ...  monitor item to be saved for visualization \nSAVE_PID_ITEM  ...  save computational results in different formats \nASCII  ...  computation results column-wise in an ASCII formatted file \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.SAVE_ITEM___ucv___.html", 
        "id": 885, 
        "title": "SAVE_ITEM___ucv___"
    }, 
    {
        "body": "\n\nSAVE_MONITOR_ITEM ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nSAVE_MONITOR_ITEM  ...  monitor item to be saved for visualization \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.SAVE_MONITOR_ITEM___ucv___.html", 
        "id": 886, 
        "title": "SAVE_MONITOR_ITEM___ucv___"
    }, 
    {
        "body": "\n\nSAVE_PID_ITEM ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nSAVE_PID_ITEM  ...  save computational results in different formats \nReleases  ...  information on the MESHFREE releases \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.SAVE_PID_ITEM___ucv___.html", 
        "id": 887, 
        "title": "SAVE_PID_ITEM___ucv___"
    }, 
    {
        "body": "\n\nSAVE_QUALITYCHECK_ITEM ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.SAVE_QUALITYCHECK_ITEM___ucv___.html", 
        "id": 888, 
        "title": "SAVE_QUALITYCHECK_ITEM___ucv___"
    }, 
    {
        "body": "\n\nSAVE_ShareScalars ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nReleases  ...  information on the MESHFREE releases \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.SAVE_ShareScalars___ucv___.html", 
        "id": 889, 
        "title": "SAVE_ShareScalars___ucv___"
    }, 
    {
        "body": "\n\nSAVE_atEndOfTimestep ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nSAVE_atEndOfTimestep  ...  Choose to save data for visualization at the end of time-steps (instead of at the start) \nReleases  ...  information on the MESHFREE releases \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.SAVE_atEndOfTimestep___ucv___.html", 
        "id": 890, 
        "title": "SAVE_atEndOfTimestep___ucv___"
    }, 
    {
        "body": "\n\nSAVE_choose_meth ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nResults  ...  save computational results in different formats \nSAVE_PID_ITEM  ...  save computational results in different formats \nSAVE_choose_meth  ...  save computational results in different formats \nSAVE_interval  ...  control saving frequency \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.SAVE_choose_meth___ucv___.html", 
        "id": 891, 
        "title": "SAVE_choose_meth___ucv___"
    }, 
    {
        "body": "\n\nSAVE_file ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nLaunchRestart  ...  launch FPM on the basis of a restart file \n%RESTART_sequence%  ...  define a sequence of restart files \nResults  ...  save computational results in different formats \nSAVE_PID_ITEM  ...  save computational results in different formats \nSAVE_path  ...  absolute or relative path for the simulation results \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.SAVE_file___ucv___.html", 
        "id": 892, 
        "title": "SAVE_file___ucv___"
    }, 
    {
        "body": "\n\nSAVE_first ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nResults  ...  save computational results in different formats \nSAVE_PID_ITEM  ...  save computational results in different formats \nSAVE_interval  ...  control saving frequency \nCONTROL_StopAfterReadingGeometry  ...  stops the FPM program after geometry is read \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.SAVE_first___ucv___.html", 
        "id": 893, 
        "title": "SAVE_first___ucv___"
    }, 
    {
        "body": "\n\nSAVE_format ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nResults  ...  save computational results in different formats \nSAVE_PID_ITEM  ...  save computational results in different formats \nSAVE_format  ...  format to save simulation data \nASCII  ...  computation results column-wise in an ASCII formatted file \nSAVE_interval  ...  control saving frequency \nplot{}  ...  write ensight, tecplot, ascii or other result formats \nTankSloshingApplication  ...  how to install and run FPM sloshing tool under WINDOWS \nLinux  ...  how to install and run FPM under LINUX \nReleases  ...  information on the MESHFREE releases \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.SAVE_format___ucv___.html", 
        "id": 894, 
        "title": "SAVE_format___ucv___"
    }, 
    {
        "body": "\n\nSAVE_interval ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nSAVE_intervall  ...  consecutively save after a number of time cycles or a given real time interval \nResults  ...  save computational results in different formats \nSAVE_BE_MONITOR_ITEM  ...  monitor item to be saved per element for visualization \nSAVE_PID_ITEM  ...  save computational results in different formats \nSAVE_choose_meth  ...  save computational results in different formats \nSAVE_first  ...  control first save \nSAVE_interval  ...  control saving frequency \nCONTROL_StopAfterReadingGeometry  ...  stops the FPM program after geometry is read \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.SAVE_interval___ucv___.html", 
        "id": 895, 
        "title": "SAVE_interval___ucv___"
    }, 
    {
        "body": "\n\nSAVE_intervall ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.SAVE_intervall___ucv___.html", 
        "id": 896, 
        "title": "SAVE_intervall___ucv___"
    }, 
    {
        "body": "\n\nSAVE_list_of_var ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.SAVE_list_of_var___ucv___.html", 
        "id": 897, 
        "title": "SAVE_list_of_var___ucv___"
    }, 
    {
        "body": "\n\nSAVE_path ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nLaunchRestart  ...  launch FPM on the basis of a restart file \nResults  ...  save computational results in different formats \nSAVE_PID_ITEM  ...  save computational results in different formats \nSAVE_file  ...  file name for the results \nSAVE_path  ...  absolute or relative path for the simulation results \nCOMP_RemeshBoundary  ...  \nCOMP_TimeCheck  ...  switch on time measurements for the main tasks of FPM \nqualitycheck  ...  force a quality check of the FPM point cloud after the next organization step \nwrite_cv  ...  write the complete set of numerical parameters to file \nTankSloshingApplication  ...  how to install and run FPM sloshing tool under WINDOWS \nLinux  ...  how to install and run FPM under LINUX \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.SAVE_path___ucv___.html", 
        "id": 898, 
        "title": "SAVE_path___ucv___"
    }, 
    {
        "body": "\n\nSMOOTH_LENGTH ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nBND_point  ...  create an independent point of the geometry \nDSCR  ...  discrete (locally variable) smoothing length definition \nADTV  ...  adaptive smoothing length definition \nSMOOTH_LENGTH  ...  provide a function of smoothing length \n%H_constant%  ...  constant smoothing length, or smoothing length given as equation \n%H_spherical%  ...  provide a spherical distribution of H around points or geometry elements \n%H_linear%  ...  constant smoothing length, or smoothing length given as equation \n%H_radial%  ...  constant smoothing length, or smoothing length given as equation \n%H_ring%  ...  constant smoothing length, or smoothing length given as equation \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.SMOOTH_LENGTH___ucv___.html", 
        "id": 899, 
        "title": "SMOOTH_LENGTH___ucv___"
    }, 
    {
        "body": "\n\nSTRESSTENSOR_Variante_Factor ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.STRESSTENSOR_Variante_Factor___ucv___.html", 
        "id": 900, 
        "title": "STRESSTENSOR_Variante_Factor___ucv___"
    }, 
    {
        "body": "\n\nSTRESSTENSOR_Variante ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.STRESSTENSOR_Variante___ucv___.html", 
        "id": 901, 
        "title": "STRESSTENSOR_Variante___ucv___"
    }, 
    {
        "body": "\n\nTOUCH ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.TOUCH___ucv___.html", 
        "id": 902, 
        "title": "TOUCH___ucv___"
    }, 
    {
        "body": "\n\nTaylorQuinneyCoefficient ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.TaylorQuinneyCoefficient___ucv___.html", 
        "id": 903, 
        "title": "TaylorQuinneyCoefficient___ucv___"
    }, 
    {
        "body": "\n\nTend ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.Tend___ucv___.html", 
        "id": 904, 
        "title": "Tend___ucv___"
    }, 
    {
        "body": "\n\nTimeIntegration_N_final ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.TimeIntegration_N_final___ucv___.html", 
        "id": 905, 
        "title": "TimeIntegration_N_final___ucv___"
    }, 
    {
        "body": "\n\nTstart ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.Tstart___ucv___.html", 
        "id": 906, 
        "title": "Tstart___ucv___"
    }, 
    {
        "body": "\n\nUSER_h_funct ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n%ind_h_adaptive%  ...  local smoothing length proposed for adaptive treatment of H, unit=meters \nUSER_h_funct  ...  choose either constant, locally variable, or adaptive smoothing length \nCONS  ...  constant smoothing length defintion \nDSCR  ...  discrete (locally variable) smoothing length definition \nADTV  ...  adaptive smoothing length definition \nReleases  ...  information on the MESHFREE releases \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.USER_h_funct___ucv___.html", 
        "id": 907, 
        "title": "USER_h_funct___ucv___"
    }, 
    {
        "body": "\n\nUSER_h_max ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nCONS  ...  constant smoothing length defintion \nDSCR  ...  discrete (locally variable) smoothing length definition \nADTV  ...  adaptive smoothing length definition \nUSER_h_max  ...  maximum allowed smoothing length \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.USER_h_max___ucv___.html", 
        "id": 908, 
        "title": "USER_h_max___ucv___"
    }, 
    {
        "body": "\n\nUSER_h_min ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nCONS  ...  constant smoothing length defintion \nDSCR  ...  discrete (locally variable) smoothing length definition \nADTV  ...  adaptive smoothing length definition \nUSER_h_min  ...  minimum allowed smoothing length \nReleases  ...  information on the MESHFREE releases \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.USER_h_min___ucv___.html", 
        "id": 909, 
        "title": "USER_h_min___ucv___"
    }, 
    {
        "body": "\n\nV00_SmoothDivV ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nV00_SmoothDivV  ...  Chorin projection: smooth the local values of div(v) before going into the correction pressure computation \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.V00_SmoothDivV___ucv___.html", 
        "id": 910, 
        "title": "V00_SmoothDivV___ucv___"
    }, 
    {
        "body": "\n\nVOLUME_correction_FreeSurface ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nVOLUME_correction_FreeSurface  ...  correct volume by tiny global lifting of the free surface \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.VOLUME_correction_FreeSurface___ucv___.html", 
        "id": 911, 
        "title": "VOLUME_correction_FreeSurface___ucv___"
    }, 
    {
        "body": "\n\nVOLUME_correction ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nVOLUME_correction  ...  correct volume by GLOBALLY adjusting the divergence of velocity term \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.VOLUME_correction___ucv___.html", 
        "id": 912, 
        "title": "VOLUME_correction___ucv___"
    }, 
    {
        "body": "\n\nVOLUME_correction_local ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nVOLUME_correction_local  ...  correct volume by LOCALLY adjusting the divergence of velocity term \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.VOLUME_correction_local___ucv___.html", 
        "id": 913, 
        "title": "VOLUME_correction_local___ucv___"
    }, 
    {
        "body": "\n\nVP0_VelocityCorrection ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nVP0_VelocityCorrection  ...  invoke velocity correction based on correction pressure (%ind_c%) for vp- solver \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.VP0_VelocityCorrection___ucv___.html", 
        "id": 914, 
        "title": "VP0_VelocityCorrection___ucv___"
    }, 
    {
        "body": "\n\nbegin_CCC_seeds2D ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nbegin_CCC_seeds2D  ...  add 2D seeds for CuttingCurveCluster (optional) \ninclude_CCC_seeds2D  ...  include 2D seeds for CuttingCurveCluster from file (optional) \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/CuttingCurves/InOutput/USER_ScanCCC_Other.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.begin_CCC_seeds2D___ucv___.html", 
        "id": 915, 
        "title": "begin_CCC_seeds2D___ucv___"
    }, 
    {
        "body": "\n\nbegin_CCC_seeds3D ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nbegin_CCC_seeds3D  ...  add 3D seeds for CuttingCurveCluster (optional) \ninclude_CCC_seeds3D  ...  include 3D seeds for CuttingCurveCluster from file (optional) \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/CuttingCurves/InOutput/USER_ScanCCC_Other.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.begin_CCC_seeds3D___ucv___.html", 
        "id": 916, 
        "title": "begin_CCC_seeds3D___ucv___"
    }, 
    {
        "body": "\n\nbegin_CCC_seeds6D ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nbegin_CCC_seeds6D  ...  add 6D seeds for CuttingCurveCluster (optional) \ninclude_CCC_seeds6D  ...  include 6D seeds for CuttingCurveCluster from file (optional) \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/CuttingCurves/InOutput/USER_ScanCCC_Other.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.begin_CCC_seeds6D___ucv___.html", 
        "id": 917, 
        "title": "begin_CCC_seeds6D___ucv___"
    }, 
    {
        "body": "\n\nbegin_alias{} ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nALIAS  ...  alias defintions within a begin_alias-end_alias-block \nBoundaryConditions  ...  Prescribe physical boundary conditions for partitions of boundary \nBC_TearOffCriterion  ...  establish a tear-off criterion for release from walls \nmanipulate{Alias}  ...  manipulate (move, rotate, ...) the geometry belonging to an alias-group \nBNDpoints_ExtractFromNodes{}  ...  create BND_points from existing geometry nodes \n%MAXIMUM_INT%  ...  maximum of a functional based on interior FPM points \n%AVERAGE_INT%  ...  average of a functional based on interior FPM points \n%AVERAGE_BND%  ...  average of a functional based on interior FPM points \n%MINIMUM_INT%  ...  minimum of a functinal based on interior FPM points \n%MAXIMUM_BND%  ...  maximum of a functional based on boundary FPM points \n%MINIMUM_BND%  ...  minimum of a functinal based on boundary FPM points \n%INTEGRATION_FLUX%  ...  time integration of a flux by simply counting the FPM-points that slip over a given control surface \n%INTEGRATION_ABSFLUX%  ...  absolute value of a flux by simply counting the FPM-points that slip over a given control surface in either direction \n%INTEGRATION_INT%  ...  volume integration of a functional over a given material \n%INTEGRATION_INT_TIME%  ...  volume and time integration of a functional over a given material \n%MOVE_ProjectionOfMovementOfAnotherPart%  ...  boundary elements will follow the movement of a defined geometry part \nDruckerPragerModel  ...  use the GeneralYieldStress functionality to derive behavior of granular materials \nSelection  ...  Switch/Case-type selection statement \nADTV  ...  adaptive smoothing length definition \nSHALLOWWATER  ...  Solver for shallow water equations \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.begin_alias{}___ucv___.html", 
        "id": 918, 
        "title": "begin_alias{}___ucv___"
    }, 
    {
        "body": "\n\nbegin_boundary_elements{} ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nBoundaryElements  ...  definition of the boundary elements to be used during simulation \ninclude{File}  ...  definition a geometry file to be read by FPM \nGeometryManipulations  ...  geometrical modifications of boundary elements files read \n%GEO_RemoveClusterByIndex%_GEO  ... %GEO_RemoveClusterByIndex%_GEO\n%GEO_Tube%  ...  reorient a part of the geometry in the tube sense \nsymmetryfaceByCluster{}  ...  automatic distribution of SYMMETRYFACE-flags to geometry components \nonly{}  ...  read onle elements of a given alias from file \nignore{}  ...  ignore listed aliases from a geometry file \nsloppy{}  ...  do not stop program if geometry file contains an undefined alias \nexportGeometry{}  ...  export the actually imported geometry file in STL or OBJ format \nmanipulate{Alias}  ...  manipulate (move, rotate, ...) the geometry belonging to an alias-group \ndelete{Alias}  ...  delete all the geometry belonging to a given alias-group \nCreateBEfromGeometry  ...  from the already existing geometry, create new boundary elements such as BND_point \nBNDpoints_ExtractFromNodes{}  ...  create BND_points from existing geometry nodes \nConstructClause  ...  Mathematical construction of scalars and vectors \nplainBoundaryElements  ...  definition a geometry file to be read by FPM \n%POINT_APPROXIMATE%  ...  approximate any given function at a BND_point by FPM interpolation \nLoops  ...  loop over a block lines in the input file \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.begin_boundary_elements{}___ucv___.html", 
        "id": 919, 
        "title": "begin_boundary_elements{}___ucv___"
    }, 
    {
        "body": "\n\nbegin_construct_atRestart{} ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nReleases  ...  information on the MESHFREE releases \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.begin_construct_atRestart{}___ucv___.html", 
        "id": 920, 
        "title": "begin_construct_atRestart{}___ucv___"
    }, 
    {
        "body": "\n\nbegin_construct{} ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nBoundaryElements  ...  definition of the boundary elements to be used during simulation \nmanipulate{Alias}  ...  manipulate (move, rotate, ...) the geometry belonging to an alias-group \nConstructClause  ...  Mathematical construction of scalars and vectors \n%CONSTRUCT_EstablishCurveVolumeVersusHeight%  ...  establish a 2-row-curve that provides the height-volume-relation of a closed part of geometry \n%CONSTRUCT_VolumeForGivenHeight%  ...  compute the volume of a closed body restricted by a certain height \n%INTEGRATION_FLUX%  ...  time integration of a flux by simply counting the FPM-points that slip over a given control surface \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.begin_construct{}___ucv___.html", 
        "id": 921, 
        "title": "begin_construct{}___ucv___"
    }, 
    {
        "body": "\n\nbegin_curve{} ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.begin_curve{}___ucv___.html", 
        "id": 922, 
        "title": "begin_curve{}___ucv___"
    }, 
    {
        "body": "\n\nbegin_equation{} ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.begin_equation{}___ucv___.html", 
        "id": 923, 
        "title": "begin_equation{}___ucv___"
    }, 
    {
        "body": "\n\nbegin_material{} ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.begin_material{}___ucv___.html", 
        "id": 924, 
        "title": "begin_material{}___ucv___"
    }, 
    {
        "body": "\n\ncompute_phase_boundary ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nPHASE_distinction  ...  invoke detection of interface connections \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.compute_phase_boundary___ucv___.html", 
        "id": 925, 
        "title": "compute_phase_boundary___ucv___"
    }, 
    {
        "body": "\n\ncv ...  \n\n\n\n\n\nThis item is referenced in:\n\n\ncv  ...  specific heat of the material in kJ/(kg*K) \nReleases  ...  information on the MESHFREE releases \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.cv___ucv___.html", 
        "id": 926, 
        "title": "cv___ucv___"
    }, 
    {
        "body": "\n\ndamping_p_corr ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.damping_p_corr___ucv___.html", 
        "id": 927, 
        "title": "damping_p_corr___ucv___"
    }, 
    {
        "body": "\n\ndensity ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n%ind_div_bar%  ...  compression rate due to given temperature or hydrostatic pressure or density time change rate \nCurves  ...  define curves in the input file \n1D_Curves  ...  define curves with one independent variable \nDruckerPragerModel  ...  use the GeneralYieldStress functionality to derive behavior of granular materials \ndensity  ...  material density [kg/m^3] \nCorrectionPressure  ...  compute the correction pressure according to a Chorin-like correction ansatz \nDeriveDivergenceOfVelocity  ...  how to compute the divergence of velocity from mass conservation \nv--  ...  segregated, directly incompressible solver \nvp-  ...  directly incompresssible, implicit solver with penalty formulation \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.density___ucv___.html", 
        "id": 928, 
        "title": "density___ucv___"
    }, 
    {
        "body": "\n\ndivergenceV ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.divergenceV___ucv___.html", 
        "id": 929, 
        "title": "divergenceV___ucv___"
    }, 
    {
        "body": "\n\ndt_TEMPERATURE ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.dt_TEMPERATURE___ucv___.html", 
        "id": 930, 
        "title": "dt_TEMPERATURE___ucv___"
    }, 
    {
        "body": "\n\ndt_VELOCITY ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.dt_VELOCITY___ucv___.html", 
        "id": 931, 
        "title": "dt_VELOCITY___ucv___"
    }, 
    {
        "body": "\n\neps_T ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.eps_T___ucv___.html", 
        "id": 932, 
        "title": "eps_T___ucv___"
    }, 
    {
        "body": "\n\neps_p ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.eps_p___ucv___.html", 
        "id": 933, 
        "title": "eps_p___ucv___"
    }, 
    {
        "body": "\n\neps_phyd ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.eps_phyd___ucv___.html", 
        "id": 934, 
        "title": "eps_phyd___ucv___"
    }, 
    {
        "body": "\n\neps_v ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.eps_v___ucv___.html", 
        "id": 935, 
        "title": "eps_v___ucv___"
    }, 
    {
        "body": "\n\neta ...  \n\n\n\n\n\nThis item is referenced in:\n\n\neta  ...  viscosity definition [Pa*s] \nDruckerPragerModel  ...  use the GeneralYieldStress functionality to derive behavior of granular materials \nFLIQUID_ConsistentPressure_Version  ...  version how to compute the consistent pressure \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.eta___ucv___.html", 
        "id": 936, 
        "title": "eta___ucv___"
    }, 
    {
        "body": "\n\ngravity ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n1D_Curves  ...  define curves with one independent variable \nHydrostaticPressure  ...  hydrostatic pressure derived from momentum equation \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.gravity___ucv___.html", 
        "id": 937, 
        "title": "gravity___ucv___"
    }, 
    {
        "body": "\n\nheatsource ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.heatsource___ucv___.html", 
        "id": 938, 
        "title": "heatsource___ucv___"
    }, 
    {
        "body": "\n\ninclude_CCC_curves ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nCuttingCurveCluster  ...  define clusters of boundary elements by cutting the geometry along given curves \ninclude_CCC_curves  ...  define the geometry file containing cutting curves for clustering \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/CuttingCurves/InOutput/USER_ScanCCC_Other.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.include_CCC_curves___ucv___.html", 
        "id": 939, 
        "title": "include_CCC_curves___ucv___"
    }, 
    {
        "body": "\n\nBND_alpha ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.BND_alpha.html", 
        "id": 940, 
        "title": "BND_alpha"
    }, 
    {
        "body": "\n\ninclude_CCC_seeds2D ...  \n\n\n\n\n\nThis item is referenced in:\n\n\ninclude_CCC_seeds2D  ...  include 2D seeds for CuttingCurveCluster from file (optional) \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/CuttingCurves/InOutput/USER_ScanCCC_Other.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.include_CCC_seeds2D___ucv___.html", 
        "id": 941, 
        "title": "include_CCC_seeds2D___ucv___"
    }, 
    {
        "body": "\n\ninclude_CCC_seeds3D ...  \n\n\n\n\n\nThis item is referenced in:\n\n\ninclude_CCC_seeds3D  ...  include 3D seeds for CuttingCurveCluster from file (optional) \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/CuttingCurves/InOutput/USER_ScanCCC_Other.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.include_CCC_seeds3D___ucv___.html", 
        "id": 942, 
        "title": "include_CCC_seeds3D___ucv___"
    }, 
    {
        "body": "\n\ninclude_CCC_seeds6D ...  \n\n\n\n\n\nThis item is referenced in:\n\n\ninclude_CCC_seeds6D  ...  include 6D seeds for CuttingCurveCluster from file (optional) \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PreAndPostprocessing/CuttingCurves/InOutput/USER_ScanCCC_Other.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.include_CCC_seeds6D___ucv___.html", 
        "id": 943, 
        "title": "include_CCC_seeds6D___ucv___"
    }, 
    {
        "body": "\n\nlambda ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n%BND_ROBIN%  ...  Robin boundary condition \nlambda  ...  thermal conductivity [W/(m*K)] \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.lambda___ucv___.html", 
        "id": 944, 
        "title": "lambda___ucv___"
    }, 
    {
        "body": "\n\nlatentheat ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.latentheat___ucv___.html", 
        "id": 945, 
        "title": "latentheat___ucv___"
    }, 
    {
        "body": "\n\nmax_N_stencil ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n%ind_nbRegularNeighbors%  ...  number of regular neighbors found in the ball of radius h \nmax_N_stencil  ...  maximum number of neighbor particles accepted for stencil computation and numerics \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.max_N_stencil___ucv___.html", 
        "id": 946, 
        "title": "max_N_stencil___ucv___"
    }, 
    {
        "body": "\n\nmax_vl ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.max_vl___ucv___.html", 
        "id": 947, 
        "title": "max_vl___ucv___"
    }, 
    {
        "body": "\n\nmin_vl ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.min_vl___ucv___.html", 
        "id": 948, 
        "title": "min_vl___ucv___"
    }, 
    {
        "body": "\n\nmue ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nPureElastic  ...  give value for the elastic modulus \nJohnsonCook  ...  Johnson-Cook model  \nGeneralYieldStress  ...  provide a genreal formulation/model of the yield stress  \nDruckerPragerModel  ...  use the GeneralYieldStress functionality to derive behavior of granular materials \nStressTensorAlgorithm  ...  update the stress tensor towards the next time level \n%MED_JOHNSON_COOK%  ...  specifier for the Johnson Cook Stress flow stress model \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.mue___ucv___.html", 
        "id": 949, 
        "title": "mue___ucv___"
    }, 
    {
        "body": "\n\nord_eval ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.ord_eval___ucv___.html", 
        "id": 950, 
        "title": "ord_eval___ucv___"
    }, 
    {
        "body": "\n\nord_gradient ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nord_gradient  ...  define approximation order of the gradient operators \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.ord_gradient___ucv___.html", 
        "id": 951, 
        "title": "ord_gradient___ucv___"
    }, 
    {
        "body": "\n\nord_laplace ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.ord_laplace___ucv___.html", 
        "id": 952, 
        "title": "ord_laplace___ucv___"
    }, 
    {
        "body": "\n\nradius_hole ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nradius_hole  ...  relative allowed hole size \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.radius_hole___ucv___.html", 
        "id": 953, 
        "title": "radius_hole___ucv___"
    }, 
    {
        "body": "\n\nrel_dist ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.rel_dist___ucv___.html", 
        "id": 954, 
        "title": "rel_dist___ucv___"
    }, 
    {
        "body": "\n\nrel_dist_bound ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.rel_dist_bound___ucv___.html", 
        "id": 955, 
        "title": "rel_dist_bound___ucv___"
    }, 
    {
        "body": "\n\nrestart ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nLaunchRestart  ...  launch FPM on the basis of a restart file \nRestartStepSize  ...  define after how many time cycles a restart file has to be generated \n%RESTART_sequence%  ...  define a sequence of restart files \n%RESTART_single%  ...  define the production of a single restart file \nDefineRestart  ...  save restart files \nread_Y  ...  deprecated, not used any more, to be set by restart in USER_common_variables \nsave  ...  write an FPM restart file after the end of the current time step \nReleases  ...  information on the MESHFREE releases \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.restart___ucv___.html", 
        "id": 956, 
        "title": "restart___ucv___"
    }, 
    {
        "body": "\n\nrestart_additionalBE ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.restart_additionalBE___ucv___.html", 
        "id": 957, 
        "title": "restart_additionalBE___ucv___"
    }, 
    {
        "body": "\n\nrestart_copying ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.restart_copying___ucv___.html", 
        "id": 958, 
        "title": "restart_copying___ucv___"
    }, 
    {
        "body": "\n\nrestart_step_size ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.restart_step_size___ucv___.html", 
        "id": 959, 
        "title": "restart_step_size___ucv___"
    }, 
    {
        "body": "\n\nrestart_toberemoved ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.restart_toberemoved___ucv___.html", 
        "id": 960, 
        "title": "restart_toberemoved___ucv___"
    }, 
    {
        "body": "\n\nrestartnewBE_filling ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.restartnewBE_filling___ucv___.html", 
        "id": 961, 
        "title": "restartnewBE_filling___ucv___"
    }, 
    {
        "body": "\n\nBND_beta ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.BND_beta.html", 
        "id": 962, 
        "title": "BND_beta"
    }, 
    {
        "body": "\n\nshearmodulus ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.shearmodulus___ucv___.html", 
        "id": 963, 
        "title": "shearmodulus___ucv___"
    }, 
    {
        "body": "\n\nsigma ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nsigma  ...  surface tension [N/m] \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.sigma___ucv___.html", 
        "id": 964, 
        "title": "sigma___ucv___"
    }, 
    {
        "body": "\n\nspecificheat ...  \n\n\n\n\n\nThis item is referenced in:\n\n\ncv  ...  specific heat of the material in kJ/(kg*K) \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.specificheat___ucv___.html", 
        "id": 965, 
        "title": "specificheat___ucv___"
    }, 
    {
        "body": "\n\nsurfacetension ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nsigma  ...  surface tension [N/m] \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.surfacetension___ucv___.html", 
        "id": 966, 
        "title": "surfacetension___ucv___"
    }, 
    {
        "body": "\n\ntau ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.tau___ucv___.html", 
        "id": 967, 
        "title": "tau___ucv___"
    }, 
    {
        "body": "\n\nthermalconduction ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nlambda  ...  thermal conductivity [W/(m*K)] \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.thermalconduction___ucv___.html", 
        "id": 968, 
        "title": "thermalconduction___ucv___"
    }, 
    {
        "body": "\n\nv_transport ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.v_transport___ucv___.html", 
        "id": 969, 
        "title": "v_transport___ucv___"
    }, 
    {
        "body": "\n\nviscosity ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nCurves  ...  define curves in the input file \neta  ...  viscosity definition [Pa*s] \nDruckerPragerModel  ...  use the GeneralYieldStress functionality to derive behavior of granular materials \nCorrectionPressure  ...  compute the correction pressure according to a Chorin-like correction ansatz \nStressTensorAlgorithm  ...  update the stress tensor towards the next time level \nv--  ...  segregated, directly incompressible solver \nvp-  ...  directly incompresssible, implicit solver with penalty formulation \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.viscosity___ucv___.html", 
        "id": 970, 
        "title": "viscosity___ucv___"
    }, 
    {
        "body": "\n\nx_p1 ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.x_p1___ucv___.html", 
        "id": 971, 
        "title": "x_p1___ucv___"
    }, 
    {
        "body": "\n\nx_p ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.USER_common_variables.__overview_of_syntax_elements__.x_p___ucv___.html", 
        "id": 972, 
        "title": "x_p___ucv___"
    }, 
    {
        "body": "\n\nAMFPMJ_CommonAdministrationDirectory ...  define a directory that FPM uses for synchronization of multiple FPM jobs \n\n\n   \n   \n  AMFPMJ_CommonAdministrationDirectory = '/home/WhoAmI/FPMsynchro/'     # for example Linux \n  AMFPMJ_CommonAdministrationDirectory = 'D:\\home\\WhoAmI\\FPMsynchro\\'   # for example in WINDOWS \n   \n  puts a file with the name \"FPM_ID=????????????????????\" into the directory given in AMFPMJ_CommonAdministrationDirectory. \n  This file contains information about job index, requested resources as well as start time and last report time. \n  The last report time is updated each time FPM starts a new time cycle. This information is used to decide, which FPM \n  has now priority and which one has to sleep until ressources are available. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.AMFPMJ_CommonAdministrationDirectory.html", 
        "id": 973, 
        "title": "AMFPMJ_CommonAdministrationDirectory"
    }, 
    {
        "body": "\n\nAPPROXIMATENEWPOINTS_HowToApproximateKEPS ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.APPROXIMATENEWPOINTS_HowToApproximateKEPS.html", 
        "id": 974, 
        "title": "APPROXIMATENEWPOINTS_HowToApproximateKEPS"
    }, 
    {
        "body": "\n\nAPPROXIMATENEWPOINTS_SeparateInteriorAndBoundaryPoints ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.APPROXIMATENEWPOINTS_SeparateInteriorAndBoundaryPoints.html", 
        "id": 975, 
        "title": "APPROXIMATENEWPOINTS_SeparateInteriorAndBoundaryPoints"
    }, 
    {
        "body": "\n\nAPPROXIMATENEWPOINTS_SeparateInteriorBoundary ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.APPROXIMATENEWPOINTS_SeparateInteriorBoundary.html", 
        "id": 976, 
        "title": "APPROXIMATENEWPOINTS_SeparateInteriorBoundary"
    }, 
    {
        "body": "\n\nBE_COLLAPSE_collapsebeforeflip ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.BE_COLLAPSE_collapsebeforeflip.html", 
        "id": 977, 
        "title": "BE_COLLAPSE_collapsebeforeflip"
    }, 
    {
        "body": "\n\nBE_COLLAPSE_specifycollapse ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.BE_COLLAPSE_specifycollapse.html", 
        "id": 978, 
        "title": "BE_COLLAPSE_specifycollapse"
    }, 
    {
        "body": "\n\nBE_COLLAPSE_tocollapse ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.BE_COLLAPSE_tocollapse.html", 
        "id": 979, 
        "title": "BE_COLLAPSE_tocollapse"
    }, 
    {
        "body": "\n\nBE_COLLAPSE_tolerance ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.BE_COLLAPSE_tolerance.html", 
        "id": 980, 
        "title": "BE_COLLAPSE_tolerance"
    }, 
    {
        "body": "\n\nBND_SearchTreeAdministration_NbTimeStepsUntilFirstSkip ...  skip the construction of the boundary element search tree after this many time cycles \n\n\n   \n  BND_SearchTreeAdministration_NbTimeStepsUntilFirstSkip = 10 \n   \n  default: 10000000 \n  Additional parameter (optional) to be set when defining COMP_SortBEintoBoxes_Version . \n  In the first BND_SearchTreeAdministration_NbTimeStepsUntilFirstSkip FPM time cycles, the boudnary element search tree is established at the beginning \n  of the time cycle. After this, the period of establishing the search tree is given by the variable BND_SearchTreeAdministration_RefreshTreeAfterHowManyCycles . \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.BND_SearchTreeAdministration_NbTimeStepsUntilFirstSkip.html", 
        "id": 981, 
        "title": "BND_SearchTreeAdministration_NbTimeStepsUntilFirstSkip"
    }, 
    {
        "body": "\n\nBND_SearchTreeAdministration_RefreshTreeAfterHowManyCycles ...  refresh the boundary element search tree after this many time cycles \n\n\n   \n  BND_SearchTreeAdministration_RefreshTreeAfterHowManyCycles = 50 \n   \n  default: 1 \n  Additional parameter (optional) to be set when defining COMP_SortBEintoBoxes_Version . \n  See also BND_SearchTreeAdministration_NbTimeStepsUntilFirstSkip . \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.BND_SearchTreeAdministration_RefreshTreeAfterHowManyCycles.html", 
        "id": 982, 
        "title": "BND_SearchTreeAdministration_RefreshTreeAfterHowManyCycles"
    }, 
    {
        "body": "\n\nBND_gamma ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.BND_gamma.html", 
        "id": 983, 
        "title": "BND_gamma"
    }, 
    {
        "body": "\n\nBUBBLE_DoTheManagement ...  switch on bubble analysis for a given chamber index \n\n\n   \n  BUBBLE_DoTheManagement = 1 \n   \n  This switches on the bubble management for all chambers. \n  default: BUBBLE_DoTheManagement = 0 \n   \n  Chamberwise declaration: \n   \n  BUBBLE_DoTheManagement(i) = 1 \n   where \"i\" is the chamber index \n   \n  Especially see BubbleAlgorithm . \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.BUBBLE_DoTheManagement.html", 
        "id": 984, 
        "title": "BUBBLE_DoTheManagement"
    }, 
    {
        "body": "\n\nBUBBLE_EnforceAveragePressure ...  fix average pressure for all bubbles \n\n\n   \n BUBBLE_EnforceAveragePressure = 1.0e5 #atmospheric pressure \n   \n  In a closed computational domain with fixed amount of gas and air (for example tank half full with liquid) \n  it makes sense to fix the average pressure of the bubbles a a whole. I.e., for all times we require \n   \n   \n   \n  If a positive number is given, all bubbles' pressure values are corrected by a constant value such that the average \n  pressure constraint is fulfilled. \n  \n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.BUBBLE_EnforceAveragePressure.html", 
        "id": 985, 
        "title": "BUBBLE_EnforceAveragePressure"
    }, 
    {
        "body": "\n\nBUBBLE_UseTopologyConstraint ...  use topoly analysis for bubble-volume computation \n\n\n   \n  BUBBLE_UseTopologyConstraint = 1 \n   \n  This switches on the bubble management for all chambers. \n  default: BUBBLE_UseTopologyConstraint = 0 \n   \n  Chamberwise declaration: \n   \n  BUBBLE_UseTopologyConstraint(i) = 1 \n   where \"i\" is the chamber index \n   \n  If the volume is positive, it is a true bubble, if negative, it is a droplet. Sometime, the FPM-particle \n  configuration is bad, such that the measured volume might change the sign. However, if there was no topology change, i.e. no \n  splitting or merging, the pressure and volume changes are ignored for the current time step, if the sign of mesured volume flipped. \n   \n  BUBBLE_UseTopologyConstraint = 1 : topology check for both way ( minus->plus and plus->minus) \n  BUBBLE_UseTopologyConstraint = 2 : topology check for bubble ( plus->minus ) \n  BUBBLE_UseTopologyConstraint = 3 : topology check for droplet ( minus->plus ) \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.BUBBLE_UseTopologyConstraint.html", 
        "id": 986, 
        "title": "BUBBLE_UseTopologyConstraint"
    }, 
    {
        "body": "\n\nBUBBLE_pOffset ...  define offset pressure for bubble pressure-on-volume analysis \n\n\n   \n  BUBBLE_pOffset = 1.0e5 # !atmospheric pressure \n   \n  The bubble`s pressure-volume-law is \n   \n   \n   \n  based on the bubbles total interior pressure. \n  With the pressure offset, we are able to work with any reference pressure, using the pressure \n  offset to map the pressure analysis to the correct total pressure. \n   \n   \n   \n   \n    \n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.BUBBLE_pOffset.html", 
        "id": 987, 
        "title": "BUBBLE_pOffset"
    }, 
    {
        "body": "\n\nCLUSTER_Size ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.CLUSTER_Size.html", 
        "id": 988, 
        "title": "CLUSTER_Size"
    }, 
    {
        "body": "\n\nCOEFF_Iopp_Repair ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.COEFF_Iopp_Repair.html", 
        "id": 989, 
        "title": "COEFF_Iopp_Repair"
    }, 
    {
        "body": "\n\nCOEFF_dt ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.COEFF_dt.html", 
        "id": 990, 
        "title": "COEFF_dt"
    }, 
    {
        "body": "\n\nCOEFF_dt_Darcy ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.COEFF_dt_Darcy.html", 
        "id": 991, 
        "title": "COEFF_dt_Darcy"
    }, 
    {
        "body": "\n\nCOEFF_dt_SurfaceTension_A ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.COEFF_dt_SurfaceTension_A.html", 
        "id": 992, 
        "title": "COEFF_dt_SurfaceTension_A"
    }, 
    {
        "body": "\n\nCOEFF_dt_SurfaceTension_B ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.COEFF_dt_SurfaceTension_B.html", 
        "id": 993, 
        "title": "COEFF_dt_SurfaceTension_B"
    }, 
    {
        "body": "\n\nCOEFF_dt_SurfaceTension_C ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.COEFF_dt_SurfaceTension_C.html", 
        "id": 994, 
        "title": "COEFF_dt_SurfaceTension_C"
    }, 
    {
        "body": "\n\nCOEFF_dt_free ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.COEFF_dt_free.html", 
        "id": 995, 
        "title": "COEFF_dt_free"
    }, 
    {
        "body": "\n\nCOEFF_dt_virt ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.COEFF_dt_virt.html", 
        "id": 996, 
        "title": "COEFF_dt_virt"
    }, 
    {
        "body": "\n\nCOEFF_mue ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.COEFF_mue.html", 
        "id": 997, 
        "title": "COEFF_mue"
    }, 
    {
        "body": "\n\nCOEFF_p_divV ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.COEFF_p_divV.html", 
        "id": 998, 
        "title": "COEFF_p_divV"
    }, 
    {
        "body": "\n\nCOEFF_penalty ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.COEFF_penalty.html", 
        "id": 999, 
        "title": "COEFF_penalty"
    }, 
    {
        "body": "\n\nCOMP_AddBoundaryParticles ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.COMP_AddBoundaryParticles.html", 
        "id": 1000, 
        "title": "COMP_AddBoundaryParticles"
    }, 
    {
        "body": "\n\nCOMP_AddInteriorParticles ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.COMP_AddInteriorParticles.html", 
        "id": 1001, 
        "title": "COMP_AddInteriorParticles"
    }, 
    {
        "body": "\n\nCOMP_AdjustEtaEff ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.COMP_AdjustEtaEff.html", 
        "id": 1002, 
        "title": "COMP_AdjustEtaEff"
    }, 
    {
        "body": "\n\nCOMP_CheckConservationDuringOrganization ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.COMP_CheckConservationDuringOrganization.html", 
        "id": 1003, 
        "title": "COMP_CheckConservationDuringOrganization"
    }, 
    {
        "body": "\n\nCOMP_CosEdgeAngle ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.COMP_CosEdgeAngle.html", 
        "id": 1004, 
        "title": "COMP_CosEdgeAngle"
    }, 
    {
        "body": "\n\nCOMP_CosOpenEdge ...  pretent how the boundary continues at an open edge \n\n\n   \n  COMP_CosOpenEdge = -0.5 \n   \n  default: COMP_CosOpenEdge = -0.3 \n  If a boundary ends in an open edge (triangle edge with no topological connectivity to another, adjacent triangle), \n  then with COMP_CosOpenEdge a virtual continuation direction of the boundary is given. The condition is \n  cos(OpenEdge) = t*n, \n  where t is the virtual continuation tangent, and n is the boundary normal of the present boundary element. \n  A given point x, which projects onto the open edge, is considered to be inside if \n   \n  (x-x_proj)*n/norm(x-x_proj) > COMP_CosOpenEdge \n   \n  otherwise it is outside. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.COMP_CosOpenEdge.html", 
        "id": 1005, 
        "title": "COMP_CosOpenEdge"
    }, 
    {
        "body": "\n\nCOMP_DeflationLevel ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.COMP_DeflationLevel.html", 
        "id": 1006, 
        "title": "COMP_DeflationLevel"
    }, 
    {
        "body": "\n\nCOMP_DoOrganizePointsUntil ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.COMP_DoOrganizePointsUntil.html", 
        "id": 1007, 
        "title": "COMP_DoOrganizePointsUntil"
    }, 
    {
        "body": "\n\nCOMP_DropletphaseWithDisturbance ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.COMP_DropletphaseWithDisturbance.html", 
        "id": 1008, 
        "title": "COMP_DropletphaseWithDisturbance"
    }, 
    {
        "body": "\n\nCOMP_FastBoundaryRefill ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.COMP_FastBoundaryRefill.html", 
        "id": 1009, 
        "title": "COMP_FastBoundaryRefill"
    }, 
    {
        "body": "\n\nCOMP_FillEdges ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.COMP_FillEdges.html", 
        "id": 1010, 
        "title": "COMP_FillEdges"
    }, 
    {
        "body": "\n\nCOMP_GradtEtaGrad_Version ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.COMP_GradtEtaGrad_Version.html", 
        "id": 1011, 
        "title": "COMP_GradtEtaGrad_Version"
    }, 
    {
        "body": "\n\nCOMP_HydrostaticPressure ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.COMP_HydrostaticPressure.html", 
        "id": 1012, 
        "title": "COMP_HydrostaticPressure"
    }, 
    {
        "body": "\n\nCOMP_IsolatedParticles_MinNbOfInteriorNeigh ...  minimum number of interior neighbors a particles should have \n\n\n  otherwise, the particle will be deleted. \n  The default is \n   \n  COMP_IsolatedParticles_MinNbOfInteriorNeigh = 1 \n   \n  See also COMP_IsolatedParticles_MinNbOfNeigh . \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.COMP_IsolatedParticles_MinNbOfInteriorNeigh.html", 
        "id": 1013, 
        "title": "COMP_IsolatedParticles_MinNbOfInteriorNeigh"
    }, 
    {
        "body": "\n\nCOMP_IsolatedParticles_MinNbOfNeigh ...  minimum number of neighbors (total) a particles should have \n\n\n  otherwise, the particle will be deleted. \n  The default is \n   \n  COMP_IsolatedParticles_MinNbOfNeigh = 6 \n   \n  See also COMP_IsolatedParticles_MinNbOfInteriorNeigh . \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.COMP_IsolatedParticles_MinNbOfNeigh.html", 
        "id": 1014, 
        "title": "COMP_IsolatedParticles_MinNbOfNeigh"
    }, 
    {
        "body": "\n\nCOMP_MaxSubCycle ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.COMP_MaxSubCycle.html", 
        "id": 1015, 
        "title": "COMP_MaxSubCycle"
    }, 
    {
        "body": "\n\nCOMP_MemCheck ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.COMP_MemCheck.html", 
        "id": 1016, 
        "title": "COMP_MemCheck"
    }, 
    {
        "body": "\n\nCOMP_MinSubCycle ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.COMP_MinSubCycle.html", 
        "id": 1017, 
        "title": "COMP_MinSubCycle"
    }, 
    {
        "body": "\n\nCOMP_OppositePoints_NoFreeSurface ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.COMP_OppositePoints_NoFreeSurface.html", 
        "id": 1018, 
        "title": "COMP_OppositePoints_NoFreeSurface"
    }, 
    {
        "body": "\n\nCOMP_RandomizedFilling ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.COMP_RandomizedFilling.html", 
        "id": 1019, 
        "title": "COMP_RandomizedFilling"
    }, 
    {
        "body": "\n\nCOMP_ReduceSn ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.COMP_ReduceSn.html", 
        "id": 1020, 
        "title": "COMP_ReduceSn"
    }, 
    {
        "body": "\n\nCOMP_RemeshBoundary ...  \n\n\n   \n  COMP_RemeshBoundary=1 \n   \n  default: COMP_RemeshBoundary=-1 \n  The boundary is remeshed if COMP_RemeshBoundary>0. \n  That makes sense only if an IGES-file is used. In this case, the triangle size is taken by COMP_RemeshBoundary*SmoothingLength. \n  The result of the meshing operation is written in the file .FPMproject_CompleteGeometry.FDNEUT \n  In order to visualize, a .case-file is written in SAVE_path . \n\n\n\n\nThis item is referenced in:\n\n\ninclude{File}  ...  definition a geometry file to be read by FPM \nCOMP_RemeshBoundary  ...  \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.COMP_RemeshBoundary.html", 
        "id": 1021, 
        "title": "COMP_RemeshBoundary"
    }, 
    {
        "body": "\n\nCOMP_RemoveBoundaryParticles ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.COMP_RemoveBoundaryParticles.html", 
        "id": 1022, 
        "title": "COMP_RemoveBoundaryParticles"
    }, 
    {
        "body": "\n\nCOMP_RemoveInteriorParticles ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.COMP_RemoveInteriorParticles.html", 
        "id": 1023, 
        "title": "COMP_RemoveInteriorParticles"
    }, 
    {
        "body": "\n\nCOMP_SkipHighVelocities ...  for how many consecutive cycles a corrupt solution of velocity is accepted, before FPM stops  \n\n\n   \n  COMP_SkipHighVelocities = NumberOfTimeCycles \n   \n  default: COMP_SkipHighVelocities = 10 \n   \n  If the solution to the linear system of the velocity fails (no convergence of iterative solver or \n  production of unphysical velocity magnitudes), the FPM ignores this solution and goes on to the next time step. \n  The hope is, that in the next time step, the problems will be gone due to the movement/change of the point cloud. \n  HOWEVER, if the velocity-solution fails for \"COMP_SkipHighVelocities\" consecutive times, FPM will stop execution \n  and provide an error message, accordingly. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.COMP_SkipHighVelocities.html", 
        "id": 1024, 
        "title": "COMP_SkipHighVelocities"
    }, 
    {
        "body": "\n\nCOMP_SortBEintoBoxes_Version ...  version how to organize/prepare boundary elements for efficient computation \n\n\n  otherwise, the particle will be deleted. \n  The default is \n   \n  COMP_SortBEintoBoxes_Version = 2 \n   \n  COMP_SortBEintoBoxes_Version = 1    :: original, box-based search algorithm. The boundary triangles/elements (BE) are sorted into a regular box grid. \n                                         If the triangles in a local region around a given point are requested, those triangles are chosen \n                                         which intersect with the box the point is placed in. \n  COMP_SortBEintoBoxes_Version = 2    :: bintree-based search algorithm. The ordered hierarchically by cutting the set of BE by a plane into two equal \n                                         half blocks. The equal half blocks are again cut into equal half blocks. In this manner, an adaptive box configuration \n                                         evolved. If the triangles in a local region around a given point are requested, those triangles are chose \n                                         which intersect with the adaptive box the point is placed in. \n  COMP_SortBEintoBoxes_Version = 21   :: same as COMP_SortBEintoBoxes_Version=2. The bintree is not re-established in every time cycle. Modalities of search \n                                         treat organization are then given by BND_SearchTreeAdministration_NbTimeStepsUntilFirstSkip and BND_SearchTreeAdministration_RefreshTreeAfterHowManyCycles . \n  COMP_SortBEintoBoxes_Version = 4    :: a very fast, hierarchical implementation (bintree-like) using adaptive, rotated boxes. \n                                         Also here, BND_SearchTreeAdministration_NbTimeStepsUntilFirstSkip and BND_SearchTreeAdministration_RefreshTreeAfterHowManyCycles are taken into account. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.COMP_SortBEintoBoxes_Version.html", 
        "id": 1025, 
        "title": "COMP_SortBEintoBoxes_Version"
    }, 
    {
        "body": "\n\nCOMP_StressRelaxAtFreeAndSlipSurface ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.COMP_StressRelaxAtFreeAndSlipSurface.html", 
        "id": 1026, 
        "title": "COMP_StressRelaxAtFreeAndSlipSurface"
    }, 
    {
        "body": "\n\nCOMP_TimeCheck ...  switch on time measurements for the main tasks of FPM \n\n\n   \n  COMP_TimeCheck = 1 \n   \n  default: COMP_TimeCheck = 0 \n   \n  COMP_TimeCheck = 1 :: run the time measurements (using the internal clock-function) and print the result in \n                        in the program`s stadart output. Possibly filter the output in order to see it. \n  COMP_TimeCheck = 2 :: run the time measurements, BUT do not print the result anywhere. Instead, the results of the \n                        time measurement can be retrieved by the the command time_check in the framework of ComputationalSteering. \n                        The results of the measurement is appended to the .signallog-file. \n  COMP_TimeCheck = 3 :: run the time measurements, BUT do not print the result in the FPM standart output. \n                        Instead, the results of the time measurement are written to the file TIMECHECK.dat in the SAVE_path . \n   \n  By putting a MINUS (-) in front of the number, one is able to just produce the output in hierarchy-structures, separated with commas, \n  such that one can copy-paste the time-check-writeout directly into MS_Excel or LibreOffice. \n\n\n\n\nThis item is referenced in:\n\n\nCOMP_TimeCheck  ...  switch on time measurements for the main tasks of FPM \ntime_check  ...  write out a detailled time check listing \ntime_check_sum  ...  write out a sum-up conclusion of the time check  \nTIMECHECK  ...  measure performance (simulation time) for different tasks of FPM \nReleases  ...  information on the MESHFREE releases \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.COMP_TimeCheck.html", 
        "id": 1027, 
        "title": "COMP_TimeCheck"
    }, 
    {
        "body": "\n\nCOMP_WettingAngleVariante ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.COMP_WettingAngleVariante.html", 
        "id": 1028, 
        "title": "COMP_WettingAngleVariante"
    }, 
    {
        "body": "\n\nCOMP_WettingAngleWeight ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.COMP_WettingAngleWeight.html", 
        "id": 1029, 
        "title": "COMP_WettingAngleWeight"
    }, 
    {
        "body": "\n\nCOMP_dt_indep ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.COMP_dt_indep.html", 
        "id": 1030, 
        "title": "COMP_dt_indep"
    }, 
    {
        "body": "\n\nCOMP_evoid ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.COMP_evoid.html", 
        "id": 1031, 
        "title": "COMP_evoid"
    }, 
    {
        "body": "\n\nCOMP_facSmooth_Eta ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.COMP_facSmooth_Eta.html", 
        "id": 1032, 
        "title": "COMP_facSmooth_Eta"
    }, 
    {
        "body": "\n\nCOMP_nbSmooth_Darcy ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.COMP_nbSmooth_Darcy.html", 
        "id": 1033, 
        "title": "COMP_nbSmooth_Darcy"
    }, 
    {
        "body": "\n\nCOMP_nbSmooth_Eta ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.COMP_nbSmooth_Eta.html", 
        "id": 1034, 
        "title": "COMP_nbSmooth_Eta"
    }, 
    {
        "body": "\n\nCOMP_nbSmooth_pCorr ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.COMP_nbSmooth_pCorr.html", 
        "id": 1035, 
        "title": "COMP_nbSmooth_pCorr"
    }, 
    {
        "body": "\n\nCONTROL_DirectTesting ...  Instead of launching the computation, FPM goes into a separate testing branch for different tasks \n\n\n   \n  FPM steps into a different branch and executes only the implemented testing routines. \n  Thus, the key routines of FPM can be checked within the currently compiled FPM-version, \n  i.e. the functionality of theses modules can be bverified withing the framework of \n  dedicated FPM-deliverables. \n   \n   \n  CONTROL_DirectTesting = 1 \n   \n   \n  default: CONTROL_DirectTesting = 0  (switched off) \n   \n   \n  The currently implemented options: \n   \n  CONTROL_DirectTesting = 1: PerformanceDistancePointToTriangle \n\n\n\n\nList of members:\n\n\nPerformanceDistancePointToTriangle  ...  performance for distance point-to-triangle computation \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.CONTROL_DirectTesting.html", 
        "id": 1036, 
        "title": "CONTROL_DirectTesting"
    }, 
    {
        "body": "\n\nPerformanceDistancePointToTriangle ...  performance for distance point-to-triangle computation \n\n\n  Here we check the performance of the originally implemented algorithm, i.e. the one used for COMP_SortBEintoBoxes_Version == 21 or COMP_SortBEintoBoxes_Version == 2. \n   \n  Run a performance test (flops per call, flops per second) for M points, for each point check the diatance to N triangles. \n  The points and triangles are etsblished using random number generator. \n   \n  M = CONTROL_DirectTesting_Param1 (number of points) \n  N = CONTROL_DirectTesting_Param2 (number of triangles) \n   \n  If the parameters are not defined, the default values are \n  M = 100000 \n  N = 1000 \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/DirectTesting/test_DistToTria.f90 \n\n\n\n\n\n COMPREHENSIVE EXAMPLE:  Click here  \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.CONTROL_DirectTesting.PerformanceDistancePointToTriangle.html", 
        "id": 1037, 
        "title": "PerformanceDistancePointToTriangle"
    }, 
    {
        "body": "\n\nCONTROL_DirectTesting_Param1 ...  additional parameter for the testing environment \n\n\n   \n  see CONTROL_DirectTesting . \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.CONTROL_DirectTesting_Param1.html", 
        "id": 1038, 
        "title": "CONTROL_DirectTesting_Param1"
    }, 
    {
        "body": "\n\nCONTROL_DirectTesting_Param2 ...  additional parameter for the testing environment \n\n\n   \n  see CONTROL_DirectTesting . \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.CONTROL_DirectTesting_Param2.html", 
        "id": 1039, 
        "title": "CONTROL_DirectTesting_Param2"
    }, 
    {
        "body": "\n\nCONTROL_StopAfterReadingGeometry ...  stops the FPM program after geometry is read \n\n\n   \n  CONTROL_StopAfterReadingGeometry = 1 \n   \n   \n  default: CONTROL_StopAfterReadingGeometry = 0  (no geometry checking) \n   \n  CONTROL_StopAfterReadingGeometry = 1: FPM reads the geometry, writes a result file and then the computation stops. \n                                        Some simple checks concerning the geometry can be done without waiting for the whole point cloud generation. \n  CONTROL_StopAfterReadingGeometry = 2: FPM reads the geometry, and then goes into the time integration without creating the FPM pointcloud. \n                                        I.e. the geometry is moving due to the MOVE statements given in USER_common_variables.dat. \n                                        Results are written due to the SAVE_first and SAVE_interval statements, enabling the user to veryfy the MOVE commands. \n\n\n\n\nThis item is referenced in:\n\n\nexportGeometry{}  ...  export the actually imported geometry file in STL or OBJ format \nCONTROL_StopAfterReadingGeometry  ...  stops the FPM program after geometry is read \nReleases  ...  information on the MESHFREE releases \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.CONTROL_StopAfterReadingGeometry.html", 
        "id": 1040, 
        "title": "CONTROL_StopAfterReadingGeometry"
    }, 
    {
        "body": "\n\nCONTROL_writeUcvLines ...  write out the Ucv-lines read during startup (debugging fewature) \n\n\n   \n  CONTROL_writeUcvLines = 1 \n   \n   \n  default: CONTROL_writeUcvLines = 0  (no writeout) \n   \n  CONTROL_writeUcvLines = 1 # write all lines read \n  CONTROL_writeUcvLines = 2 # write only those lines which are active (there might be lines dropped due to Selection -environment \n  CONTROL_writeUcvLines = 3 # write both all lines and selected lines \n  CONTROL_writeUcvLines = 4 # write both all lines and selected lines and pause after each line (WILL NOT WORK IN MPI-MODUS!!!!!!) \n\n\n\n\nThis item is referenced in:\n\n\nCONTROL_writeUcvLines  ...  write out the Ucv-lines read during startup (debugging fewature) \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.CONTROL_writeUcvLines.html", 
        "id": 1041, 
        "title": "CONTROL_writeUcvLines"
    }, 
    {
        "body": "\n\nCoarsenGeometry ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.CoarsenGeometry.html", 
        "id": 1042, 
        "title": "CoarsenGeometry"
    }, 
    {
        "body": "\n\nCompDistToBoundary_Acc ...  threshold of distance until which the distance to different BE is treated as equal \n\n\n  For a given point x, the distance of the point to two different boundary elements (BE1, BE2) is treated as EQUAL \n  if abs(dist(x,BE1)-dist(x,BE2)) < CompDistToBoundary_Acc*h(x) \n  where h(x) is the smoothing length at the location x. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.CompDistToBoundary_Acc.html", 
        "id": 1043, 
        "title": "CompDistToBoundary_Acc"
    }, 
    {
        "body": "\n\nCompDistToBoundary_EffectiveSearchRadius ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.CompDistToBoundary_EffectiveSearchRadius.html", 
        "id": 1044, 
        "title": "CompDistToBoundary_EffectiveSearchRadius"
    }, 
    {
        "body": "\n\nDEBUG_Check_CCOR ...  generate control writeout for correction pressure \n\n\n  DEBUG_Check_CCOR=1  In the project directory, a file is created containing the maximum/minimum values of the  dynamic pressure at several instants during one FPM-time cycle.  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.DEBUG_Check_CCOR.html", 
        "id": 1045, 
        "title": "DEBUG_Check_CCOR"
    }, 
    {
        "body": "\n\nDEBUG_Check_PDYN ...  generate control writeout for dynamic pressure \n\n\n  DEBUG_Check_PDYN=1  In the project directory, a file is created containing the maximum/minimum values of the  dynamic pressure at several instants during one FPM-time cycle.  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.DEBUG_Check_PDYN.html", 
        "id": 1046, 
        "title": "DEBUG_Check_PDYN"
    }, 
    {
        "body": "\n\nDEBUG_Check_PHYD ...  generate control writeout for hydrostatic pressure \n\n\n  DEBUG_Check_PHYD=1  In the project directory, a file is created containing the maximum/minimum values of  the hydrostatic pressure at several instants during one FPM-time cycle.  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.DEBUG_Check_PHYD.html", 
        "id": 1047, 
        "title": "DEBUG_Check_PHYD"
    }, 
    {
        "body": "\n\nDEBUG_Check_VELO ...  generate control writeout for velocity \n\n\n  DEBUG_Check_VELO=1  In the project directory, a file is created containing the maximum/minimum values of the  magnitude of the velocity at several instants during one FPM-time cycle.  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.DEBUG_Check_VELO.html", 
        "id": 1048, 
        "title": "DEBUG_Check_VELO"
    }, 
    {
        "body": "\n\nDEBUG_DefaultRescue ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.DEBUG_DefaultRescue.html", 
        "id": 1049, 
        "title": "DEBUG_DefaultRescue"
    }, 
    {
        "body": "\n\nDEL_rel_dist_shuffle ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.DEL_rel_dist_shuffle.html", 
        "id": 1050, 
        "title": "DEL_rel_dist_shuffle"
    }, 
    {
        "body": "\n\nDIFFOP_ConsistentGradient ...  consistent gradient in the sense d/dn = n*grad \n\n\n   \n  DIFFOP_ConsistentGradient = 1 \n   \n  default: DIFFOP_ConsistentGradient = 0 \n  adapt normal direction of the gradient operator such that n*grad = d/dn, where d/dn is the Neumann (i.e. very stable) operator \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.DIFFOP_ConsistentGradient.html", 
        "id": 1051, 
        "title": "DIFFOP_ConsistentGradient"
    }, 
    {
        "body": "\n\nDIFFOP_Neumann_ExcludeBND ...  exclude boundary particles from neighborhood for computation of Neumann operator \n\n\n   \n  DIFFOP_Neumann_ExcludeBND = 90.0 \n   \n  default: DIFFOP_Neumann_ExcludeBND = -1.0  (do not exclude any boundary particle from the neighborhood) \n  In order to exclude all neighbor boundary particles from the stencil, set \n   \n  DIFFOP_Neumann_ExcludeBND = 360 \n   \n  A boundary particle j is excluded from the Neumann stencil computation of particle i, if the angle between the two boundary normals fulfills \n   \n  where alpha is the value of DIFFOP_Neumann_ExcludeBND, to be given in degrees . \n   \n  DIFFOP_Neumann_ExcludeBND can be given chamberwise, i.e. \n   \n  DIFFOP_Neumann_ExcludeBND(n) = 90.0 \n   \n  sets the appropriate value only for the chamber with the index n. \n  \n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.DIFFOP_Neumann_ExcludeBND.html", 
        "id": 1052, 
        "title": "DIFFOP_Neumann_ExcludeBND"
    }, 
    {
        "body": "\n\nDIFFOP_PPI_Gradient ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.DIFFOP_PPI_Gradient.html", 
        "id": 1053, 
        "title": "DIFFOP_PPI_Gradient"
    }, 
    {
        "body": "\n\nDIFFOP_PPI_Laplace ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.DIFFOP_PPI_Laplace.html", 
        "id": 1054, 
        "title": "DIFFOP_PPI_Laplace"
    }, 
    {
        "body": "\n\nDIFFOP_PPI_Neumann ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.DIFFOP_PPI_Neumann.html", 
        "id": 1055, 
        "title": "DIFFOP_PPI_Neumann"
    }, 
    {
        "body": "\n\nDIFFOP_Version ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.DIFFOP_Version.html", 
        "id": 1056, 
        "title": "DIFFOP_Version"
    }, 
    {
        "body": "\n\nDIFFOP_WeightReductionInCaseOfDeactivation ...  reduce weight of neighbor particle by this factor in case of deactivation \n\n\n   \n  DIFFOP_WeightReductionInCaseOfDeactivation = 0.0 \n   \n  default: DIFFOP_WeightReductionInCaseOfDeactivation = 0.0001  (by default, keep a small value in order not to run into numerical singularity of the leaset-squares-systems if all neighbors deactivated hazardously) \n   \n  DIFFOP_WeightReductionInCaseOfDeactivation can be given chamberwise, i.e. \n   \n  DIFFOP_WeightReductionInCaseOfDeactivation(n) = 0.000001 \n   \n  sets the appropriate value only for the chamber with the index n. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.DIFFOP_WeightReductionInCaseOfDeactivation.html", 
        "id": 1057, 
        "title": "DIFFOP_WeightReductionInCaseOfDeactivation"
    }, 
    {
        "body": "\n\nDIFFOP_gradient ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.DIFFOP_gradient.html", 
        "id": 1058, 
        "title": "DIFFOP_gradient"
    }, 
    {
        "body": "\n\nDIFFOP_kernel_Gradient ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.DIFFOP_kernel_Gradient___cv___.html", 
        "id": 1059, 
        "title": "DIFFOP_kernel_Gradient___cv___"
    }, 
    {
        "body": "\n\nDIFFOP_kernel_Laplace ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.DIFFOP_kernel_Laplace.html", 
        "id": 1060, 
        "title": "DIFFOP_kernel_Laplace"
    }, 
    {
        "body": "\n\nDIFFOP_kernel_Neumann ...  kernel shape parameter for the d/dn-Operators (Neumann-operators) \n\n\n   \n  DIFFOP_kernel_Neumann = 5.0 \n   \n  default: DIFFOP_kernel_Neumann = 2.0 \n  The weight for the computation of the differential Neumann operators is given by \n   \n  where alpha is equal to the value of DIFFOP_kernel_Neumann. \n   \n  DIFFOP_kernel_Neumann can be given chamberwise, i.e. \n   \n  DIFFOP_kernel_Neumann(n) = 5.0 \n   \n  sets the appropriate value only for the chamber with the index n. \n  \n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.DIFFOP_kernel_Neumann.html", 
        "id": 1061, 
        "title": "DIFFOP_kernel_Neumann"
    }, 
    {
        "body": "\n\nDIFFOP_kernel_Transport ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.DIFFOP_kernel_Transport___cv___.html", 
        "id": 1062, 
        "title": "DIFFOP_kernel_Transport___cv___"
    }, 
    {
        "body": "\n\nDIFFOP_laplace ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.DIFFOP_laplace.html", 
        "id": 1063, 
        "title": "DIFFOP_laplace"
    }, 
    {
        "body": "\n\nDarcy_PrimaryDirection ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.Darcy_PrimaryDirection.html", 
        "id": 1064, 
        "title": "Darcy_PrimaryDirection"
    }, 
    {
        "body": "\n\nDarcy_PrimaryDirectionFactor ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.Darcy_PrimaryDirectionFactor.html", 
        "id": 1065, 
        "title": "Darcy_PrimaryDirectionFactor"
    }, 
    {
        "body": "\n\nELASTOPLASTIC_FadeOut_divS_gradP ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.ELASTOPLASTIC_FadeOut_divS_gradP.html", 
        "id": 1066, 
        "title": "ELASTOPLASTIC_FadeOut_divS_gradP"
    }, 
    {
        "body": "\n\nEPS_global ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.EPS_global.html", 
        "id": 1067, 
        "title": "EPS_global"
    }, 
    {
        "body": "\n\nExtendSmallGaps ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.ExtendSmallGaps.html", 
        "id": 1068, 
        "title": "ExtendSmallGaps"
    }, 
    {
        "body": "\n\nFLIQUID_AssignPenalties_EpsilonP ...  vp- coupled linear system: lower bound for ratio between pressure and velocity entries, PRESSURE EQUATION \n\n\n  For example, \n   \n  FLIQUID_AssignPenalties_EpsilonP = 0.3 \n   \n  In the coupled linear system \"vp-\", for the pressure equation, the ratio of the matrix entries referring to pressure and velocity \n  can be limited, such that the off-diagonal submatrix does not become too dominant. I.e. \n   \n  'IIp' is the order of magnitude of the pressure relevant parts \n  'IIv' is the order of magnitude of the velocity relevant parts \n  in the PRESSURE equation. \n  More details can be found in the document  DOCUMATH_ScalingOfLinearSystem_MxV.pdf . \n  section 4.1. \"Conditions on matrix normalization\", \n \n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.FLIQUID_AssignPenalties_EpsilonP.html", 
        "id": 1069, 
        "title": "FLIQUID_AssignPenalties_EpsilonP"
    }, 
    {
        "body": "\n\nFLIQUID_AssignPenalties_EpsilonV ...  vp- coupled linear system: upper bound for ratio between velocity and pressure entries, VELOCITY EQUATION \n\n\n  For example, \n   \n  FLIQUID_AssignPenalties_EpsilonV = 0.3 \n   \n  In the coupled linear system \"vp-\", for the velocity equation(s), the ratio of the matrix entries referring to velocity and pressure \n  can be limited, such that the off-diagonal submatrix does not become too dominant. I.e. \n   \n  'Iv' is the order of magnitude of the velocity relevant parts \n  'Ip' is the order of magnitude of the pressure relevant parts \n  in the VELOCUTY equation. \n  More details can be found in the document  DOCUMATH_ScalingOfLinearSystem_MxV.pdf , \n  section 4.1. \"Conditions on matrix normalization\", \n \n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.FLIQUID_AssignPenalties_EpsilonV.html", 
        "id": 1070, 
        "title": "FLIQUID_AssignPenalties_EpsilonV"
    }, 
    {
        "body": "\n\nFLIQUID_ConsistentPressure_CoeffJOKER ...  TEMPORARY: factor to study consistent pressure version 2 \n\n\n   \n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.FLIQUID_ConsistentPressure_CoeffJOKER.html", 
        "id": 1071, 
        "title": "FLIQUID_ConsistentPressure_CoeffJOKER"
    }, 
    {
        "body": "\n\nFLIQUID_ConsistentPressure_CoeffMM ...  TEMPORARY: factor to study consistent pressure version 2 \n\n\n   \n  FLIQUID_ConsistentPressure_CoeffMM = 0.01 \n   \n  default: FLIQUID_ConsistentPressure_CoeffMM = 0.0 \n  In the AlternativeDPA -algorithm, it provides a possibility to derfine the vector  \n \n\n\n\nThis item is referenced in:\n\n\nFLIQUID_ConsistentPressure_CoeffMM  ...  TEMPORARY: factor to study consistent pressure version 2 \nAlternativeDPA  ...  compute the consistent pressure as a (postprocessing) result to the current velocity field \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.FLIQUID_ConsistentPressure_CoeffMM.html", 
        "id": 1072, 
        "title": "FLIQUID_ConsistentPressure_CoeffMM"
    }, 
    {
        "body": "\n\nFLIQUID_ConsistentPressure_CoeffNN ...  TEMPORARY: factor to study consistent pressure version 2 \n\n\n   \n  FLIQUID_ConsistentPressure_CoeffNN = 0.01 \n   \n  default: FLIQUID_ConsistentPressure_CoeffNN = 0.0 \n  In the AlternativeDPA -algorithm, it provides a possibility to derfine the vector  \n \n\n\n\nThis item is referenced in:\n\n\nFLIQUID_ConsistentPressure_CoeffNN  ...  TEMPORARY: factor to study consistent pressure version 2 \nAlternativeDPA  ...  compute the consistent pressure as a (postprocessing) result to the current velocity field \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.FLIQUID_ConsistentPressure_CoeffNN.html", 
        "id": 1073, 
        "title": "FLIQUID_ConsistentPressure_CoeffNN"
    }, 
    {
        "body": "\n\nFLIQUID_ConsistentPressure_CoeffTT ...  TEMPORARY: factor to study consistent pressure version 2 \n\n\n   \n  FLIQUID_ConsistentPressure_CoeffTT = 0.01 \n   \n  default: FLIQUID_ConsistentPressure_CoeffTT = 0.0 \n  In the AlternativeDPA -algorithm, it provides a possibility to derfine the vector  \n \n\n\n\nThis item is referenced in:\n\n\nFLIQUID_ConsistentPressure_CoeffTT  ...  TEMPORARY: factor to study consistent pressure version 2 \nAlternativeDPA  ...  compute the consistent pressure as a (postprocessing) result to the current velocity field \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.FLIQUID_ConsistentPressure_CoeffTT.html", 
        "id": 1074, 
        "title": "FLIQUID_ConsistentPressure_CoeffTT"
    }, 
    {
        "body": "\n\nFLIQUID_ConsistentPressure_CoeffWEIGHT ...  TEMPORARY: factor to study consistent pressure version 2 \n\n\n   \n  FLIQUID_ConsistentPressure_CoeffWEIGHT = 0.9 \n   \n  default: FLIQUID_ConsistentPressure_CoeffWEIGHT = 1.0 \n  In the AlternativeDPA -algorithm, it provides a possibility to less/more emphasize the weight-approach . \n   currently experimental, better do not touch  \n \n\n\n\nThis item is referenced in:\n\n\nFLIQUID_ConsistentPressure_CoeffWEIGHT  ...  TEMPORARY: factor to study consistent pressure version 2 \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.FLIQUID_ConsistentPressure_CoeffWEIGHT.html", 
        "id": 1075, 
        "title": "FLIQUID_ConsistentPressure_CoeffWEIGHT"
    }, 
    {
        "body": "\n\nFLIQUID_ConsistentPressure_UseDivV ...  use numerical approximations of div(v) in direct computation of dynamic pressure (i.e. consistent pressure) \n\n\n   \n  FLIQUID_ConsistentPressure_UseDivV = 0 \n   \n  default: FLIQUID_ConsistentPressure_UseDivV = 1 \n  Use or DO NOT use the term containing the divergence of velocity in the Poisson equation for the dynamic pressure, see \n  equations (3.43) and (3.44) in   DOCUMATH_NumericalSchemeIncompressible.pdf . \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.FLIQUID_ConsistentPressure_UseDivV.html", 
        "id": 1076, 
        "title": "FLIQUID_ConsistentPressure_UseDivV"
    }, 
    {
        "body": "\n\nFLIQUID_ConsistentPressure_Version ...  version how to compute the consistent pressure \n\n\n   \n  FLIQUID_ConsistentPressure_Version = 211 \n   \n  default: FLIQUID_ConsistentPressure_Version = 111 \n  First digit:  Version of how to compute the consistent dynamic pressure. A document that describes the two approaches (version 1 and 2) is found here (to follow). \n                In short: Version 1: div((1/rho)*grad_p) = ...   see ClassicalDPA \n                          Version 2: sum( W_ij*(p_j-p_i) ) = ... see AlternativeDPA \n                          else:      dynamic pressure is not computed (i.e. it remains what is there from the step p_dyn^(n+1) = p_dyn^n + c \n                                     c = correction pressure in the Chorin (v--) or penalty (vp-) formulation \n  Second digit: Version how to compute PHI. Version 1: PHI = div((v*grad)*v). \n                                            Version 2: div(dv/dt) \n  Third digit:  Version how to compute PSI. Version 1: div(div(eta*grad(v))) \n                                             There is no other option for PSI yet  \n  Fourth digit: (optional) and only if FirstDigit=2: Version how to compute the weights. Version 1: W_ij = exp(-10*r_ij) \n                                                                                         Version 2: W_ij = clap_ij (Laplacien stencil) \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.FLIQUID_ConsistentPressure_Version.html", 
        "id": 1077, 
        "title": "FLIQUID_ConsistentPressure_Version"
    }, 
    {
        "body": "\n\nFLIQUID_CorrectionPressure_Version ...  (Experimental) Choice among different ways to compute correction pressure \n\n\n  For example, \n   \n  FLIQUID_CorrectionPressure_Version = 1 \n   \n  default: 1 \n  Options available: \n  1 : Usual Poisson Equation \n  2 : Slightly modified Poisson Equation (Defunct- will revert to version 1) \n  3 : (Experimental) Solves for a vector potential(for gradient of correction pressure directly), using an overdetermined system \n\n\n\n\nThis item is referenced in:\n\n\nFLIQUID_CorrectionPressure_Version  ...  (Experimental) Choice among different ways to compute correction pressure \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.FLIQUID_CorrectionPressure_Version.html", 
        "id": 1078, 
        "title": "FLIQUID_CorrectionPressure_Version"
    }, 
    {
        "body": "\n\nFOFTLIQUID_AdditionalCorrectionLoops ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.FOFTLIQUID_AdditionalCorrectionLoops.html", 
        "id": 1079, 
        "title": "FOFTLIQUID_AdditionalCorrectionLoops"
    }, 
    {
        "body": "\n\nGASDYN_CorrectEnergy ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.GASDYN_CorrectEnergy.html", 
        "id": 1080, 
        "title": "GASDYN_CorrectEnergy"
    }, 
    {
        "body": "\n\nGASDYN_CorrectMass ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.GASDYN_CorrectMass.html", 
        "id": 1081, 
        "title": "GASDYN_CorrectMass"
    }, 
    {
        "body": "\n\nGASDYN_T_gain ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.GASDYN_T_gain.html", 
        "id": 1082, 
        "title": "GASDYN_T_gain"
    }, 
    {
        "body": "\n\nGASDYN_T_loss ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.GASDYN_T_loss.html", 
        "id": 1083, 
        "title": "GASDYN_T_loss"
    }, 
    {
        "body": "\n\nGASDYN_p_gain ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.GASDYN_p_gain.html", 
        "id": 1084, 
        "title": "GASDYN_p_gain"
    }, 
    {
        "body": "\n\nGASDYN_p_loss ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.GASDYN_p_loss.html", 
        "id": 1085, 
        "title": "GASDYN_p_loss"
    }, 
    {
        "body": "\n\nGASDYN_r_gain ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.GASDYN_r_gain.html", 
        "id": 1086, 
        "title": "GASDYN_r_gain"
    }, 
    {
        "body": "\n\nGASDYN_r_loss ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.GASDYN_r_loss.html", 
        "id": 1087, 
        "title": "GASDYN_r_loss"
    }, 
    {
        "body": "\n\nGLOBAL_N_iterations ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.GLOBAL_N_iterations.html", 
        "id": 1088, 
        "title": "GLOBAL_N_iterations"
    }, 
    {
        "body": "\n\nGLOBAL_eps_mass ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.GLOBAL_eps_mass.html", 
        "id": 1089, 
        "title": "GLOBAL_eps_mass"
    }, 
    {
        "body": "\n\nGLOBAL_eps_momentum ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.GLOBAL_eps_momentum.html", 
        "id": 1090, 
        "title": "GLOBAL_eps_momentum"
    }, 
    {
        "body": "\n\nHowToTreatPause ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.HowToTreatPause.html", 
        "id": 1091, 
        "title": "HowToTreatPause"
    }, 
    {
        "body": "\n\nIGES_Accuracy ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.IGES_Accuracy.html", 
        "id": 1092, 
        "title": "IGES_Accuracy"
    }, 
    {
        "body": "\n\nINTEGRATION_ReopenTimestpFilesAfterHowManyCycles ...  *.timestep-Files close and reopen again after how many cycles (debug reasons) \n\n\n  On the cluster, the permanently opened file units of the *.timestep-files get sometimes in \n  conflict with the frequent reopening of these files if FPM_CurveMonitor is used. Try to check, if re-opening can avoid this trouble. \n   \n  On the other hand, keeping the file units open in FPM leads to better performance, especially on slow file systems (like the ITWM-one) \n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.INTEGRATION_ReopenTimestpFilesAfterHowManyCycles.html", 
        "id": 1093, 
        "title": "INTEGRATION_ReopenTimestpFilesAfterHowManyCycles"
    }, 
    {
        "body": "\n\nIS_GPU ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.IS_GPU.html", 
        "id": 1094, 
        "title": "IS_GPU"
    }, 
    {
        "body": "\n\nITERATION_EstimatedFutureStressTensor ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.ITERATION_EstimatedFutureStressTensor.html", 
        "id": 1095, 
        "title": "ITERATION_EstimatedFutureStressTensor"
    }, 
    {
        "body": "\n\nITERATION_evoid ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.ITERATION_evoid.html", 
        "id": 1096, 
        "title": "ITERATION_evoid"
    }, 
    {
        "body": "\n\nITWMESI_PressureMapping_Filter ...  coupling ITWMESI filter for mapping the pressure solution to the boundary elements \n\n\n   \n   \n  ITWMESI_PressureMapping_Filter = 0.0 \n   \n  This is the default. \n  The updated pressure values are computed by \n   \n \n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.ITWMESI_PressureMapping_Filter.html", 
        "id": 1097, 
        "title": "ITWMESI_PressureMapping_Filter"
    }, 
    {
        "body": "\n\nITWMESI_PressureMapping_WeightPdyn ...  coupling ITWMESI weight for mapping dynamic pressure \n\n\n   \n   \n  ITWMESI_PressureMapping_WeightPdyn = 1.0 \n   \n  This is the default. For testing, this value can be changed. 0 would mean: ignore the dynamic pressure. \n  The pressure communicated to VPS is \n   \n  See also ITWMESI_PressureMapping_WeightPhyd. \n \n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.ITWMESI_PressureMapping_WeightPdyn.html", 
        "id": 1098, 
        "title": "ITWMESI_PressureMapping_WeightPdyn"
    }, 
    {
        "body": "\n\nITWMESI_PressureMapping_WeightPhyd ...  coupling ITWMESI weight for mapping hydrostatic pressure \n\n\n   \n   \n  ITWMESI_PressureMapping_WeightPhyd = 1.0 \n   \n  This is the default. For testing, this value can be changed. 0 would mean: ignore the hydrostatic pressure. \n  The pressure communicated to VPS is \n   \n  See also ITWMESI_PressureMapping_WeightPdyn. \n \n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.ITWMESI_PressureMapping_WeightPhyd.html", 
        "id": 1099, 
        "title": "ITWMESI_PressureMapping_WeightPhyd"
    }, 
    {
        "body": "\n\nITWMESI_ShearForceMapping_BasedOnStresses ...  coupling ITWMESI: decide whether the shear forces be projected as stress values (N/m^2) or as forces (N) \n\n\n   \n   \n  ITWMESI_ShearForceMapping_BasedOnStresses = 0 \n   \n  This is the default and projects shear forces (unit: N) per VPS element. \n  In the case of ITWMESI_ShearForceMapping_BasedOnStresses = 1, average shear stresses (unit: N/m^2) are mapped to the VPS shell elements. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.ITWMESI_ShearForceMapping_BasedOnStresses.html", 
        "id": 1100, 
        "title": "ITWMESI_ShearForceMapping_BasedOnStresses"
    }, 
    {
        "body": "\n\nITWMESI_ShearForceMapping_Filter ...  coupling ITWMESI filter for mapping the shear force solution to the VPS boundary elements \n\n\n   \n   \n  ITWMESI_ShearForceMapping_Filter = 0.0 \n   \n  This is the default. \n  The updated shear forces are computed by \n   \n \n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.ITWMESI_ShearForceMapping_Filter.html", 
        "id": 1101, 
        "title": "ITWMESI_ShearForceMapping_Filter"
    }, 
    {
        "body": "\n\nITWMESI_ShearForceMapping_Weight ...  coupling ITWMESI weight for mapping the shear forces \n\n\n   \n   \n  ITWMESI_ShearForceMapping_Weight = 1.0 \n   \n  This is the default. For testing, this value can be changed. 0 would mean: ignore the dynamic shear forces. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.ITWMESI_ShearForceMapping_Weight.html", 
        "id": 1102, 
        "title": "ITWMESI_ShearForceMapping_Weight"
    }, 
    {
        "body": "\n\nLINEQN_scaling ...  choose the way how to scale/normalize the linear systems (so far implemented only for the SAMG-case) \n\n\n   \n   \n  LINEQN_scaling = 'NORM' \n   \n  Always a 4-letter-code. \n  Possible choices: \n  NORM: Normalize, i.e. multiply the rows of the matrix such that the diagonal element becomes 1. \n  PODI: multiply the row of the matrix with -1 if the original diagonal entry is negative \n  NONE: do not normalize at all, i.e. keep the matrix in its original state \n  NATV: Try to construct the vp- system in the sense of Bram`s method, i.e try to establish ( A  B ) \n                                                                                            ( B' C ) \n        where B' is approximately the transpose of B. It would exactly be the transpose, if B was antisymmetric. B contains the d/dx, d/dy, d/dz operators. In FPM, they are not strictily antisymmetric. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.LINEQN_scaling.html", 
        "id": 1103, 
        "title": "LINEQN_scaling"
    }, 
    {
        "body": "\n\nLINEQN_solver ...  linear solver to be used for the coupled vp- or v-- system \n\n\n   \n   \n  LINEQN_solver = 'BCG2' \n   \n  Always a 4-letter-code. \n  Possible choices: \n  BiCG: BiCGstab, using matrix-times-vector emulation for the big system (i.e. do not construct the linear system explicitly, but provide a subroutine that computes the result of the matrix-vector-operation) \n  BCG2: BiCGstab(2), using matrix-times-vector-emulation, default \n  BCX1: BiCGstab, explicitly construct the matrix (takes much more memory) \n  BCX2: BiCGstab(2), explicitly construct the matrix (takes much more memory) \n  SAMG: SAMG-solver, Fraunhofer SCAI \n  GMRE: GMRES  not touched for years  \n  PETS: PetSC  not touched for years  \n  BCGL: BiCGstab(l), using matrix-times-vector emulation,  experimental , see also BCGSL_ell \n   \n  More information: BiCGstab, BiCGstab(2) and BiCGstab(l), SAMG \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.LINEQN_solver.html", 
        "id": 1104, 
        "title": "LINEQN_solver"
    }, 
    {
        "body": "\n\nLINEQN_solver_ScalarSystems ...  linear solver to be used for the scalar systems like pressure, temperature, etc. \n\n\n   \n   \n  LINEQN_solver_ScalarSystems = 'BCG2' \n   \n  Always a 4-letter-code. \n  Possible choices: \n  BiCG/BCG1: BiCGstab, using matrix-times-vector emulation for the big system (i.e. do not construct the linear system explicitly, but provide a subroutine that computes the result of the matrix-vector-operation) \n  BCG2: BiCGstab(2), using matrix-times-vector-emulation \n  SAMG: SAMG-solver, Fraunhofer SCAI \n  BCN1: BiCGstab, no SPAI-preconditioning \n  BCN2: BiCGstab(2), no SPAI-preconditioning \n  PETS: PetSC  not touched for years  \n  SAMG: SAMG solver Fraunhofer SCAI \n   \n  More information: BiCGstab, BiCGstab(2), SAMG \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.LINEQN_solver_ScalarSystems.html", 
        "id": 1105, 
        "title": "LINEQN_solver_ScalarSystems"
    }, 
    {
        "body": "\n\nMPI_CommunicationMethod ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.MPI_CommunicationMethod.html", 
        "id": 1106, 
        "title": "MPI_CommunicationMethod"
    }, 
    {
        "body": "\n\nMPI_ExcludeDirectionFromBisection ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.MPI_ExcludeDirectionFromBisection.html", 
        "id": 1107, 
        "title": "MPI_ExcludeDirectionFromBisection"
    }, 
    {
        "body": "\n\nMULTIGRID_CutOff ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.MULTIGRID_CutOff.html", 
        "id": 1108, 
        "title": "MULTIGRID_CutOff"
    }, 
    {
        "body": "\n\nMaximumNumberOfPointsDuringComputation ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.MaximumNumberOfPointsDuringComputation.html", 
        "id": 1109, 
        "title": "MaximumNumberOfPointsDuringComputation"
    }, 
    {
        "body": "\n\nNEIGHBOR_FilterMethod ...  chose how to exclude neighbors from FPM-points at critical geometry parts \n\n\n   \n  NEIGHBOR_FilterMethod = 1 \n   \n  Default: NEIGHBOR_FilterMethod = 0 \n   \n  Algorithms chosen: \n   \n  NEIGHBOR_FilterMethod == 0 :  NormalBased \n                                PositionBased \n   \n  NEIGHBOR_FilterMethod == 1 :  GeometryBased \n                                NormalBased \n                                ReplugNeighbors \n   \n  NEIGHBOR_FilterMethod == 2 :  GeometryBased \n                                ReplugNeighbors \n   \n   \n\n\n\n\nThis item is referenced in:\n\n\nNEIGHBOR_FilterMethod  ...  chose how to exclude neighbors from FPM-points at critical geometry parts \nExcludeCriticalNeighbors  ...  Exclude critical neighbors from the neighborlists of FPM-points \nGeometryBased  ...  Exclude critical neighbors based on the given, triangulated geometry \nReplugNeighbors  ...  Replug neighbor FPM-points by passon-analysis \nNormalBased  ...  Exclude critical neighbors from the neighborlists of FPM boundary points \nPositionBased  ...  Exclude critical neighbors from the neighborlists of FPM-points \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.NEIGHBOR_FilterMethod.html", 
        "id": 1110, 
        "title": "NEIGHBOR_FilterMethod"
    }, 
    {
        "body": "\n\nNEIGHBOR_filter_level ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.NEIGHBOR_filter_level.html", 
        "id": 1111, 
        "title": "NEIGHBOR_filter_level"
    }, 
    {
        "body": "\n\nN_addvar ...  definition of the number of %ind_addvar% to be used in the project \n\n\n  For example, \n   \n  N_addvar = 3 \n   \n  defines the number for the current project to three. If, in this case, %ind_addvar(4)% will be used, \n  this will lead to serious problems. \n   \n  The maximum number is 9, currently. So, N_addvar=10 or higher is illegal and will lead to errors. \n\n\n\n\nThis item is referenced in:\n\n\n%ind_addvar%  ...  additional variables that can be used for additional tasks \nN_addvar  ...  definition of the number of %ind_addvar% to be used in the project \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.N_addvar.html", 
        "id": 1112, 
        "title": "N_addvar"
    }, 
    {
        "body": "\n\nNb_InflowLayers\n\n\n  For example, \n   \n  Nb_InflowLayers = 5 \n   \n  will produce 5 layers of inflow-fluid, As default, this variable is set to 3 \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.Nb_InflowLayers.html", 
        "id": 1113, 
        "title": "Nb_InflowLayers"
    }, 
    {
        "body": "\n\nOPTIMIZATION_InitialGuessOfVi_Fast ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.OPTIMIZATION_InitialGuessOfVi_Fast.html", 
        "id": 1114, 
        "title": "OPTIMIZATION_InitialGuessOfVi_Fast"
    }, 
    {
        "body": "\n\nORGANIZE_CheckAllPointsForFreeSurfaceUntilTimeStep ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.ORGANIZE_CheckAllPointsForFreeSurfaceUntilTimeStep.html", 
        "id": 1115, 
        "title": "ORGANIZE_CheckAllPointsForFreeSurfaceUntilTimeStep"
    }, 
    {
        "body": "\n\nORGANIZE_CheckPointsAtFS_PerformPreCheck ...  invoke additional algorithm in order to find candidates for free surface detection \n\n\n  In order to activate, set \n   \n  ORGANIZE_CheckPointsAtFS_PerformPreCheck = 1 \n   \n  By default, the algorithm is switched off (ORGANIZE_CheckPointsAtFS_PerformPreCheck = 0) \n\n\n\n\nThis item is referenced in:\n\n\nORGANIZE_CheckPointsAtFS_PerformPreCheck  ...  invoke additional algorithm in order to find candidates for free surface detection \nReleases  ...  information on the MESHFREE releases \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.ORGANIZE_CheckPointsAtFS_PerformPreCheck.html", 
        "id": 1116, 
        "title": "ORGANIZE_CheckPointsAtFS_PerformPreCheck"
    }, 
    {
        "body": "\n\nORGANIZE_DevelopperCheck_Version ...  version of the debugging routine ORGANIZE_DevelopperCheck \n\n\n   \n   \n  ORGANIZE_DevelopperCheck_Version = 1 \n   \n  The default value is ORGANIZE_DevelopperCheck_Version = 0 \n   \n  ORGANIZE_DevelopperCheck_Version = 1 : just writeout the ident number for each call to ORGANIZE_DevelopperCheck \n  ORGANIZE_DevelopperCheck_Version = 2 : just writeout the ident number for each call to ORGANIZE_DevelopperCheck and execute a call to MPI_Barrier() afterwards \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.ORGANIZE_DevelopperCheck_Version.html", 
        "id": 1117, 
        "title": "ORGANIZE_DevelopperCheck_Version"
    }, 
    {
        "body": "\n\nORGANIZE_ForceInsideCheckForAllParticles ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.ORGANIZE_ForceInsideCheckForAllParticles.html", 
        "id": 1118, 
        "title": "ORGANIZE_ForceInsideCheckForAllParticles"
    }, 
    {
        "body": "\n\nORGANIZE_ForceInsideCheckForNewParticles ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.ORGANIZE_ForceInsideCheckForNewParticles.html", 
        "id": 1119, 
        "title": "ORGANIZE_ForceInsideCheckForNewParticles"
    }, 
    {
        "body": "\n\nORGANIZE_ForceTouchCheckAtWalls ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.ORGANIZE_ForceTouchCheckAtWalls.html", 
        "id": 1120, 
        "title": "ORGANIZE_ForceTouchCheckAtWalls"
    }, 
    {
        "body": "\n\nORGANIZE_PSTOneReductionStep_Version ...  version how to reduce FPM points if they become to close to each other \n\n\n   \n   \n  ORGANIZE_PSTOneReductionStep_Version = 2 \n   \n  Default: ORGANIZE_PSTOneReductionStep_Version = 1 \n   \n  ORGANIZE_PSTOneReductionStep_Version==1 : points are remove immediately if they are detected to be too close \n  ORGANIZE_PSTOneReductionStep_Version==2 : if detected to be too close, points are marked by Y%ind_vol%=0 and Y%ind_act%=-1 and Y%ind_OrganizePC(2)%=-1 \n   \n   \n   \n   \n\n\n\n\nThis item is referenced in:\n\n\nORGANIZE_PSTOneReductionStep_Version  ...  version how to reduce FPM points if they become to close to each other \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.ORGANIZE_PSTOneReductionStep_Version.html", 
        "id": 1121, 
        "title": "ORGANIZE_PSTOneReductionStep_Version"
    }, 
    {
        "body": "\n\nORGANIZE_PSTOneRefillStep3_UseFromWhichTime ...  use the new implementation of PST_OneRefillStep_3 from which time \n\n\n   \n   \n  ORGANIZE_PSTOneRefillStep3_UseFromWhichTime = 0.1 \n   \n  The default value is ORGANIZE_PSTOneRefillStep3_UseFromWhichTime = -1.0 \n  If negative, the old version PST_OneRefillStep_2 is used throughout the simulation. \n  If positive, the old version PST_OneRefillStep_2 is used until the given time, then the new version PST_OneRefillStep_3 is employed. \n  This is temporary until PST_OneRefillStep_3 has become standard. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.ORGANIZE_PSTOneRefillStep3_UseFromWhichTime.html", 
        "id": 1122, 
        "title": "ORGANIZE_PSTOneRefillStep3_UseFromWhichTime"
    }, 
    {
        "body": "\n\nORGANIZE_QualityCheck_ListNbOfNeighbors ...  number of neighbors per particle for whcih the quality check has to be performed \n\n\n  Check the quality of the point cloud for each FPM-point for a different umber of neighbors (maximum 3 different values) \n  With this variables, we can define the number of neighbors we wich to check. \n   \n  ORGANIZE_QualityCheck_ListNbOfNeighbors = ( 30, 40, 50 ) # check the quality for the closest 30, 40, and 50 neighbors to each FPM-point \n   \n  default: ORGANIZE_QualityCheck_ListNbOfNeighbors = (25,40,60) \n\n\n\n\nThis item is referenced in:\n\n\nORGANIZE_QualityCheck_ListNbOfNeighbors  ...  number of neighbors per particle for whcih the quality check has to be performed \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.ORGANIZE_QualityCheck_ListNbOfNeighbors.html", 
        "id": 1123, 
        "title": "ORGANIZE_QualityCheck_ListNbOfNeighbors"
    }, 
    {
        "body": "\n\nORGANIZE_ReducedFillingOfWalls ...  allow reduced filling of boundaries marked as walls \n\n\n   \n  ORGANIZE_ReducedFillingOfWalls = 1 \n   \n  default: ORGANIZE_ReducedFillingOfWalls = 0 \n  Allow reduced filling of those boundaries marked with IDEND%BND_wall%, IDENT%BND_slip%, or IDENT%BND_wall_nosl%. \n  Boundary particles ar removed from the walls, if no interior particle is found in the neighborhood. \n  . \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.ORGANIZE_ReducedFillingOfWalls.html", 
        "id": 1124, 
        "title": "ORGANIZE_ReducedFillingOfWalls"
    }, 
    {
        "body": "\n\nORGANIZE_ReducedFillingOfWallsIgnoreNofillForStartup ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.ORGANIZE_ReducedFillingOfWallsIgnoreNofillForStartup.html", 
        "id": 1125, 
        "title": "ORGANIZE_ReducedFillingOfWallsIgnoreNofillForStartup"
    }, 
    {
        "body": "\n\nORGANIZE_RefillOnlyForActiveBoundaryParticles ...  FPM-point refilling procedure along the boundary triggered only for active boundary particles \n\n\n   \n  ORGANIZE_RefillOnlyForActiveBoundaryParticles = 1 \n   \n  default: ORGANIZE_RefillOnlyForActiveBoundaryParticles = 0 \n  In regular intervals, the point cloud along the boundary is check for quality and points are filled or removed. \n  If ORGANIZE_RefillOnlyForActiveBoundaryParticles = 1, this action is executed ONLY for active boundary particles. \n  Inactive boundary particles are kept as they are. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.ORGANIZE_RefillOnlyForActiveBoundaryParticles.html", 
        "id": 1126, 
        "title": "ORGANIZE_RefillOnlyForActiveBoundaryParticles"
    }, 
    {
        "body": "\n\nORGANIZE_ToleranceForGapAnalysisOfRegularBoundary ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.ORGANIZE_ToleranceForGapAnalysisOfRegularBoundary.html", 
        "id": 1127, 
        "title": "ORGANIZE_ToleranceForGapAnalysisOfRegularBoundary"
    }, 
    {
        "body": "\n\nORGANIZE_USER_update_boundary_particles_Version ...  version of USER_update_boundary_particles.f90 to be used \n\n\n   \n   \n  ORGANIZE_USER_update_boundary_particles_Version = 2 \n   \n  The default value is ORGANIZE_USER_update_boundary_particles_Version = 1 \n  Version 1 is original. \n  Version 2 tries to distribute the compuations of the geometry nodes to several MPI-processes, and then broadcast the data by MPI_bcast. \n   \n  ORGANIZE_USER_update_boundary_particles_Version = 264 \n   \n  This invokes version 2 (first integer digit), but also tells FPM to use no more than 64 broadcasting processes. \n  In this logic, \n   \n  ORGANIZE_USER_update_boundary_particles_Version = 20 \n  ORGANIZE_USER_update_boundary_particles_Version = 2 \n   \n  is the same, and 0 broadcasting processes means no broadcasting at all, rather each process computes all necessary movement data on its own. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.ORGANIZE_USER_update_boundary_particles_Version.html", 
        "id": 1128, 
        "title": "ORGANIZE_USER_update_boundary_particles_Version"
    }, 
    {
        "body": "\n\nPARTPHASE_elasticity ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.PARTPHASE_elasticity.html", 
        "id": 1129, 
        "title": "PARTPHASE_elasticity"
    }, 
    {
        "body": "\n\nPARTPHASE_friction ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.PARTPHASE_friction.html", 
        "id": 1130, 
        "title": "PARTPHASE_friction"
    }, 
    {
        "body": "\n\nPARTPHASE_wall_friction ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.PARTPHASE_wall_friction.html", 
        "id": 1131, 
        "title": "PARTPHASE_wall_friction"
    }, 
    {
        "body": "\n\nPHASE_distinction ...  invoke detection of interface connections \n\n\n   \n  PHASE_distinction = 'YES' \n   \n  PHASE_distinction = 'NON' \n  Setting this variable to 'YES' invokes detection of interphase connections. Each boundary points searches for another boundary point \n  of a different chamber, which is close enough and with which it can exchange interphase boundary condition, see BCON_CNTCT. \n   \n  This variable can also be set in USER_common_variables. See PHASE_distinction. \n  If a contact point is found, the index of this point is stored in %ind_iopp%. \n   \n  An obsolete variant of this variables is compute_phase_boundary. \n\n\n\n\nThis item is referenced in:\n\n\nPHASE_distinction  ...  invoke detection of interface connections between boundary points \nPHASE_distinction  ...  invoke detection of interface connections \ncompute_phase_boundary  ...  invoke detection of interface connections \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.PHASE_distinction.html", 
        "id": 1132, 
        "title": "PHASE_distinction"
    }, 
    {
        "body": "\n\nPointDsplMethod ...  (Experimental) Choice among different ways to move points in Lagrangian framework \n\n\n  For example, \n   \n  PointDsplMethod = 4 \n   \n  default: 0 \n  Options available: \n  0 : Same as 2 below, kept for access to legacy code \n  1 : First order. Velocity assumed constant between time levels \n  2 : Second order. Velocity derivative assumed constant between time levels \n  3 : Moves points along the streamlines at that time level \n  4 : Moves points by considering the change of streamlines from the previous time level to this ones \n  5 : Substepping method ( ** WILL NOT WORK WITH MPI for more than one process **) \n\n\n\n\nThis item is referenced in:\n\n\nPointDsplMethod  ...  (Experimental) Choice among different ways to move points in Lagrangian framework \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.PointDsplMethod.html", 
        "id": 1133, 
        "title": "PointDsplMethod"
    }, 
    {
        "body": "\n\nQUICKVIEW_SaveHowOften ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.QUICKVIEW_SaveHowOften.html", 
        "id": 1134, 
        "title": "QUICKVIEW_SaveHowOften"
    }, 
    {
        "body": "\n\nQUICKVIEW_VariableList ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.QUICKVIEW_VariableList.html", 
        "id": 1135, 
        "title": "QUICKVIEW_VariableList"
    }, 
    {
        "body": "\n\nQUICKVIEW_Version ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.QUICKVIEW_Version.html", 
        "id": 1136, 
        "title": "QUICKVIEW_Version"
    }, 
    {
        "body": "\n\nQUICKVIEW_WhichParticles ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.QUICKVIEW_WhichParticles.html", 
        "id": 1137, 
        "title": "QUICKVIEW_WhichParticles"
    }, 
    {
        "body": "\n\nRepairGeometry ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.RepairGeometry.html", 
        "id": 1138, 
        "title": "RepairGeometry"
    }, 
    {
        "body": "\n\nSAVE_QuickView ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.SAVE_QuickView.html", 
        "id": 1139, 
        "title": "SAVE_QuickView"
    }, 
    {
        "body": "\n\nSAVE_atEndOfTimestep ...  Choose to save data for visualization at the end of time-steps (instead of at the start) \n\n\n  For example, \n   \n  SAVE_atEndOfTimestep = 1 \n   \n  default: 0 (data is saved at the start of the time step) \n  Any non-zero value will be treated as 1. \n\n\n\n\nThis item is referenced in:\n\n\nSAVE_atEndOfTimestep  ...  Choose to save data for visualization at the end of time-steps (instead of at the start) \nReleases  ...  information on the MESHFREE releases \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.SAVE_atEndOfTimestep.html", 
        "id": 1140, 
        "title": "SAVE_atEndOfTimestep"
    }, 
    {
        "body": "\n\nSCAN_ClustersOfConnectivity ...  switch on cluster checking of FPM pointcloud by neighborhood connectivity \n\n\n   \n  SCAN_ClustersOfConnectivity = 1 \n   \n  default: SCAN_ClustersOfConnectivity = 0 \n  If switched on, FPM determines each separate cluster of the pointcloud and gives it a unique index. \n  Clusters are formed by the neighborhood connectivities. \n  The cluster index for each particle is store in %ind_cluster%. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.SCAN_ClustersOfConnectivity.html", 
        "id": 1141, 
        "title": "SCAN_ClustersOfConnectivity"
    }, 
    {
        "body": "\n\nSIGNAL_LaunchComputationalSteering ...  launch the computational steering process at FPM startup, i.e. control FPM by the SIGNAL file \n\n\n   \n  SIGNAL_LaunchComputationalSteering = true \n   \n  default: SIGNAL_LaunchComputationalSteering = false (i.e. no computational steering launched) \n  If computational steering is launched, the user can control FPM by commands into the SIGNAL file. \n  Especially see the chapter ComputationalSteering . \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.SIGNAL_LaunchComputationalSteering.html", 
        "id": 1142, 
        "title": "SIGNAL_LaunchComputationalSteering"
    }, 
    {
        "body": "\n\nSOLVEV_N_iterations ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.SOLVEV_N_iterations.html", 
        "id": 1143, 
        "title": "SOLVEV_N_iterations"
    }, 
    {
        "body": "\n\nSPAI_eps ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.SPAI_eps.html", 
        "id": 1144, 
        "title": "SPAI_eps"
    }, 
    {
        "body": "\n\nSPAI_first ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.SPAI_first.html", 
        "id": 1145, 
        "title": "SPAI_first"
    }, 
    {
        "body": "\n\nSPAI_maxentries ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.SPAI_maxentries.html", 
        "id": 1146, 
        "title": "SPAI_maxentries"
    }, 
    {
        "body": "\n\nSPAI_maxiter ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.SPAI_maxiter.html", 
        "id": 1147, 
        "title": "SPAI_maxiter"
    }, 
    {
        "body": "\n\nSPAI_precond_method ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.SPAI_precond_method.html", 
        "id": 1148, 
        "title": "SPAI_precond_method"
    }, 
    {
        "body": "\n\nSPAI_precond_preparation ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.SPAI_precond_preparation.html", 
        "id": 1149, 
        "title": "SPAI_precond_preparation"
    }, 
    {
        "body": "\n\nSPAI_restart ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.SPAI_restart.html", 
        "id": 1150, 
        "title": "SPAI_restart"
    }, 
    {
        "body": "\n\nSPAI_smax ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.SPAI_smax.html", 
        "id": 1151, 
        "title": "SPAI_smax"
    }, 
    {
        "body": "\n\nSPM_N_iterations ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.SPM_N_iterations.html", 
        "id": 1152, 
        "title": "SPM_N_iterations"
    }, 
    {
        "body": "\n\nSPM_Regularization_Epsilon ...  adjust numerical parameter epsilon for the matrix regularizations \n\n\n  Especially see SPM_Regularization_Type. \n  Adjust the parameter epsilon, stated there, in the common_variables.dat file. \n   \n   \n  SPM_Regularization_Epsilon = 1.0e-2 \n   \n  default: SPM_Regularization_Epsilon = 1.0e-6 \n   \n\n\n\n\nThis item is referenced in:\n\n\nSPM_Regularization_Epsilon  ...  adjust numerical parameter epsilon for the matrix regularizations \nSPM_Regularization_Type  ...  regularization type if all boundaries are Neumann-type \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.SPM_Regularization_Epsilon.html", 
        "id": 1153, 
        "title": "SPM_Regularization_Epsilon"
    }, 
    {
        "body": "\n\nSPM_Regularization_Type ...  regularization type if all boundaries are Neumann-type \n\n\n  The PDE`s solved in FPM for the pressure are of the form  with the boundary \n  conditions  (Dirichlet) or  (Neumann). \n  If, for the whole domain, only Neumann-conditions are given, the arising linear sparse system is singular \n  and has to be regularized. \n   \n   \n  SPM_Regularization_Type = 1 \n   \n  default: SPM_Regularization_Type = 2 \n   \n  Type 1: Instead of solving , we solve the perturbed system \n   \n  where  is the identity matrix \n   \n  Type 2: Instead of solving , we solve the perturbed system \n   \n  where  is a matrix that contains 1 in all entries. This amounts of weakly requiering \n  that the sum of the result vector entries is zero, i.e.  \n   \n  Esilon can be adjusted in SPM_Regularization_Epsilon. \n            \n\n\n\nThis item is referenced in:\n\n\nSPM_Regularization_Epsilon  ...  adjust numerical parameter epsilon for the matrix regularizations \nSPM_Regularization_Type  ...  regularization type if all boundaries are Neumann-type \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.SPM_Regularization_Type.html", 
        "id": 1154, 
        "title": "SPM_Regularization_Type"
    }, 
    {
        "body": "\n\nSTRESSTENSOR_NumberSubcycles ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.STRESSTENSOR_NumberSubcycles.html", 
        "id": 1155, 
        "title": "STRESSTENSOR_NumberSubcycles"
    }, 
    {
        "body": "\n\nSTRESSTENSOR_Variante ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.STRESSTENSOR_Variante.html", 
        "id": 1156, 
        "title": "STRESSTENSOR_Variante"
    }, 
    {
        "body": "\n\nSTRESSTENSOR_Variante_Factor ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.STRESSTENSOR_Variante_Factor.html", 
        "id": 1157, 
        "title": "STRESSTENSOR_Variante_Factor"
    }, 
    {
        "body": "\n\nSURFACETENSION_FacSmooth ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.SURFACETENSION_FacSmooth.html", 
        "id": 1158, 
        "title": "SURFACETENSION_FacSmooth"
    }, 
    {
        "body": "\n\nSURFACETENSION_NbSmooth ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.SURFACETENSION_NbSmooth.html", 
        "id": 1159, 
        "title": "SURFACETENSION_NbSmooth"
    }, 
    {
        "body": "\n\nSaveRestartOnInit ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.SaveRestartOnInit.html", 
        "id": 1160, 
        "title": "SaveRestartOnInit"
    }, 
    {
        "body": "\n\nSimCut ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n%GEO_RemoveClusterByIndex%_GEO  ... %GEO_RemoveClusterByIndex%_GEO\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.SimCut.html", 
        "id": 1161, 
        "title": "SimCut"
    }, 
    {
        "body": "\n\nSurfaceTesselationActiveBoundary_cRadius ...  radius of the basic disc for the surface tesselation cells on active boundary, including free surface, excluding inactive points \n\n\n   \n  SurfaceTesselationActiveBoundary_cRadius = 0.35 \n   \n  default: SurfaceTesselationActiveBoundary_cRadius = -1.0 (i.e. no surface tesselation is executed) \n  The surface tesselation is performed in the follwoing way. First, each boundary particles obtains a circular disc \n  with the radius SurfaceTesselationActiveBoundary_cRadius*SmoothingLength. Then the discs cut each other, such that, in the oprimal case, \n  we obtain a set of non-overlapping tesselation cells. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.SurfaceTesselationActiveBoundary_cRadius.html", 
        "id": 1162, 
        "title": "SurfaceTesselationActiveBoundary_cRadius"
    }, 
    {
        "body": "\n\nSurfaceTesselationRegularBoundary_cRadius ...  radius of the basic disc for the surface tesselation cells on regular boundary \n\n\n   \n  SurfaceTesselationRegularBoundary_cRadius = 0.35 \n   \n  default: SurfaceTesselationRegularBoundary_cRadius = -1.0 (i.e. no surface tesselation is executed) \n  The surface tesselation is performed in the follwoing way. First, each boundary particles obtains a circular disc \n  with the radius SurfaceTesselationRegularBoundary_cRadius*SmoothingLength. Then the discs cut each other, such that, in the oprimal case, \n  we obtain a set of non-overlapping tesselation cells. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.SurfaceTesselationRegularBoundary_cRadius.html", 
        "id": 1163, 
        "title": "SurfaceTesselationRegularBoundary_cRadius"
    }, 
    {
        "body": "\n\nT_fin ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.T_fin.html", 
        "id": 1164, 
        "title": "T_fin"
    }, 
    {
        "body": "\n\nT_st ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.T_st.html", 
        "id": 1165, 
        "title": "T_st"
    }, 
    {
        "body": "\n\nUCV_ConsistencyCheck ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.UCV_ConsistencyCheck.html", 
        "id": 1166, 
        "title": "UCV_ConsistencyCheck"
    }, 
    {
        "body": "\n\nUSER_curve_interpol_cache ...  turn on caching in USER_curve_interpol_3 \n\n\n   \n  USER_curve_interpol_cache = 1 \n   \n  default: USER_curve_interpol_cache = 0 (i.e. no caching used) \n  When applying MOVE statements often the same curve parameters are repeatedly evaluated. \n  Use this flag to turn on caching on the first level for this. Note: This only work \n  when MOVE statements are only time-dependent! \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.USER_curve_interpol_cache.html", 
        "id": 1167, 
        "title": "USER_curve_interpol_cache"
    }, 
    {
        "body": "\n\nUseBoxSystemVersion ...  force FPM to use a certain tree algorithm for the FPM-point neighbor search \n\n\n   \n  UseBoxSystemVersion = 2 \n   \n  default: 2 \n  UseBoxSystemVersion = 0 : The original method was the box search, were the whole flow domain was covered with regular \n                            boxes. Different box systems of different box sizes (edge length) were established in order \n                            to pay attention to locally varying smoothing length. \n  UseBoxSystemVersion = 1 : Same as Version 0, but using a list-tree-algorithm in order to be more efficient. \n  UseBoxSystemVersion = 2 : bintree-decomposition of the pointcloud, that avoids different boxsystems. The bisectors of the \n                            bintree form a natural sequence of cells adaptive to the smoothing length. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.UseBoxSystemVersion.html", 
        "id": 1168, 
        "title": "UseBoxSystemVersion"
    }, 
    {
        "body": "\n\nV00_SmoothDivV ...  Chorin projection: smooth the local values of div(v) before going into the correction pressure computation \n\n\n   \n  V00_SmoothDivV = 133 \n   \n  default: V00_SmoothDivV = 000 ; \n  first digit:   0 ... do not project div(v)-values from boundary to interior \n                >0 ... project values from boundary to interior. Value given is the factor for the weight kernel that defines the distribution function \n  second digit: number of smoothing cycles \n  third digit:  factor for the smoothing weight kernel \n   \n  Then, the Chorin correction pressure is established based on the PDE \n   \n  REMARK: - This parameter is used to study conservation properties of FPM. \n          - Surpisingly, it has bad effects on the smoothness of the velocity and pressure solutions, \n            we observed transversal ripples for instance for the flow around and airfoil. \n    \n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.V00_SmoothDivV.html", 
        "id": 1169, 
        "title": "V00_SmoothDivV"
    }, 
    {
        "body": "\n\nVOLUME_correction ...  correct volume by GLOBALLY adjusting the divergence of velocity term \n\n\n   \n   \n  VOLUME_correction = 0.001 \n   \n  The default value is VOLUME_correction = 0.0 \n  The value to be given is the maximum allowed corrected volume per time step, based on the total volume of a chamber. \n  FPM will adjust div(v) in order to artificially provoke expanding or compressing flow for regaining the correct, analytical volume. \n  In the special example given above, the volume must not be changed by more than 0.001*TotalVolume in a singel time step. \n  If the volume correction for different chamber shall be different, use \n   \n  VOLUME_correction = 0.001 \n  VOLUME_correction(3) = 0.01 \n  VOLUME_correction(5) = 0.0 \n   \n  which sets the correction for all chamber first to 0.001, then it changes the values for chamber 3 and chamber 5. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.VOLUME_correction.html", 
        "id": 1170, 
        "title": "VOLUME_correction"
    }, 
    {
        "body": "\n\nVOLUME_correction_FreeSurface ...  correct volume by tiny global lifting of the free surface \n\n\n   \n   \n  VOLUME_correction_FreeSurface = 0.001 \n   \n  The default value is VOLUME_correction_FreeSurface = 0.0 \n  The value to be given is the maximum allowed corrected volume per time step, based on the total volume of a chamber. \n  In the special example given above, the volume must not be changed by more than 0.001*TotalVolume in a singel time step \n  If the volume correction for different chamber shall be different, use \n   \n  VOLUME_correction_FreeSurface = 0.001 \n  VOLUME_correction_FreeSurface(3) = 0.01 \n  VOLUME_correction_FreeSurface(5) = 0.0 \n   \n  which sets the correction for all chamber first to 0.001, then it changes the values for chamber 3 and chamber 5. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.VOLUME_correction_FreeSurface.html", 
        "id": 1171, 
        "title": "VOLUME_correction_FreeSurface"
    }, 
    {
        "body": "\n\nVOLUME_correction_ResetOnRestart ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.VOLUME_correction_ResetOnRestart.html", 
        "id": 1172, 
        "title": "VOLUME_correction_ResetOnRestart"
    }, 
    {
        "body": "\n\nVOLUME_correction_local ...  correct volume by LOCALLY adjusting the divergence of velocity term \n\n\n   \n   \n  VOLUME_correction_local = 0.001 \n   \n  The default value is VOLUME_correction_local = 0.0 \n   EXPERIMENTAL STATUS! DO NOT USE  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.VOLUME_correction_local.html", 
        "id": 1173, 
        "title": "VOLUME_correction_local"
    }, 
    {
        "body": "\n\nVP0_VelocityCorrection ...  invoke velocity correction based on correction pressure (%ind_c%) for vp- solver \n\n\n   \n  VP0_VelocityCorrection = 1 \n   \n  default: VP0_VelocityCorrection = 0 \n   \n  By default, this correction (Chorin-correction) is switched off for the \"vp-\"-option, as we assume \n  the velocity to be sufficiently close to its appropriate value of div(v). However, theoretically it is not wrong to \n  perform the correction, see equation (24) in  Meshfree_Methods_Proceeding_Paper_Jefferies_Kuhnert_17042014.pdf , \n  or equation (2.6) in   DOCUMATH_ScalingOfLinearSystem_MxV.pdf . \n  There is one risk: if the correction pressure (%ind_c%) is corrupt, that will the also mess up the velocity. \n  \n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.VP0_VelocityCorrection.html", 
        "id": 1174, 
        "title": "VP0_VelocityCorrection"
    }, 
    {
        "body": "\n\nWRITEOUTPUT_Level_Organize ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.WRITEOUTPUT_Level_Organize.html", 
        "id": 1175, 
        "title": "WRITEOUTPUT_Level_Organize"
    }, 
    {
        "body": "\n\nWallLayer ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.WallLayer.html", 
        "id": 1176, 
        "title": "WallLayer"
    }, 
    {
        "body": "\n\nWhichIndexingMethod ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.WhichIndexingMethod.html", 
        "id": 1177, 
        "title": "WhichIndexingMethod"
    }, 
    {
        "body": "\n\nadditionalPoint_approximation ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.additionalPoint_approximation.html", 
        "id": 1178, 
        "title": "additionalPoint_approximation"
    }, 
    {
        "body": "\n\nalpha_O1 ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.alpha_O1.html", 
        "id": 1179, 
        "title": "alpha_O1"
    }, 
    {
        "body": "\n\ncompute_FS ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.compute_FS.html", 
        "id": 1180, 
        "title": "compute_FS"
    }, 
    {
        "body": "\n\ncompute_LAYER ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.compute_LAYER.html", 
        "id": 1181, 
        "title": "compute_LAYER"
    }, 
    {
        "body": "\n\ncompute_phase_boundary ...  invoke detection of interface connections \n\n\n  same as PHASE_distinction  \n\n\n\n\nThis item is referenced in:\n\n\nPHASE_distinction  ...  invoke detection of interface connections \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.compute_phase_boundary.html", 
        "id": 1182, 
        "title": "compute_phase_boundary"
    }, 
    {
        "body": "\n\ncorrect_CONS ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.correct_CONS.html", 
        "id": 1183, 
        "title": "correct_CONS"
    }, 
    {
        "body": "\n\ncorrection_pressure ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.correction_pressure.html", 
        "id": 1184, 
        "title": "correction_pressure"
    }, 
    {
        "body": "\n\ncv_DateCompiled ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.cv_DateCompiled.html", 
        "id": 1185, 
        "title": "cv_DateCompiled"
    }, 
    {
        "body": "\n\ncv_DateCompiled_Seed ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.cv_DateCompiled_Seed.html", 
        "id": 1186, 
        "title": "cv_DateCompiled_Seed"
    }, 
    {
        "body": "\n\ndamping_p_corr ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.damping_p_corr.html", 
        "id": 1187, 
        "title": "damping_p_corr"
    }, 
    {
        "body": "\n\ndelta_uw ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.delta_uw.html", 
        "id": 1188, 
        "title": "delta_uw"
    }, 
    {
        "body": "\n\ndelta_uw_bp ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.delta_uw_bp.html", 
        "id": 1189, 
        "title": "delta_uw_bp"
    }, 
    {
        "body": "\n\ndist_BND_from_FS ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.dist_BND_from_FS.html", 
        "id": 1190, 
        "title": "dist_BND_from_FS"
    }, 
    {
        "body": "\n\ndist_FS_from_BND ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.dist_FS_from_BND.html", 
        "id": 1191, 
        "title": "dist_FS_from_BND"
    }, 
    {
        "body": "\n\ndist_FS_new_part ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.dist_FS_new_part.html", 
        "id": 1192, 
        "title": "dist_FS_new_part"
    }, 
    {
        "body": "\n\ndist_LayerThickness ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n%ind_OrganizeDTB%  ...  status for the distance to boundary computation \nReleases  ...  information on the MESHFREE releases \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.dist_LayerThickness.html", 
        "id": 1193, 
        "title": "dist_LayerThickness"
    }, 
    {
        "body": "\n\ndist_aip ...  initial relative distance to boundary of a newly injected FPM-point (aip = add injected particles) \n\n\n  Injection is actively performed at those boundaries who carry the identifier IDENT%BND_inflow% \n   \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.dist_aip.html", 
        "id": 1194, 
        "title": "dist_aip"
    }, 
    {
        "body": "\n\ndist_between_phases ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.dist_between_phases.html", 
        "id": 1195, 
        "title": "dist_between_phases"
    }, 
    {
        "body": "\n\ndist_merge_opp_face ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.dist_merge_opp_face.html", 
        "id": 1196, 
        "title": "dist_merge_opp_face"
    }, 
    {
        "body": "\n\ndist_rab ...  relative allowed minimum distance of FPM-points to boundary (rab = remove at boundary) \n\n\n  FPM-points are removed if they come too close to the regular boundary. \n  The results of the distance to boundary check are retrievable (in an a-posteriori sense) \n  from the variables %ind_dtb%, %ind_OrganizeDTB% . \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.dist_rab.html", 
        "id": 1197, 
        "title": "dist_rab"
    }, 
    {
        "body": "\n\ndist_rip ...  relative allowed minimum distance between FPM-points (rip = remove interior points) \n\n\n  If two points become closer to each other than (dist_rip * H), then they will be clustered. \n  The state of clustering is stored in %ind_OrganizePC(2)% for interior points \n  and in %ind_OrganizePC(4)% for boundary points. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.dist_rip.html", 
        "id": 1198, 
        "title": "dist_rip"
    }, 
    {
        "body": "\n\ndt_TEMPERATURE ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.dt_TEMPERATURE.html", 
        "id": 1199, 
        "title": "dt_TEMPERATURE"
    }, 
    {
        "body": "\n\ndt_VELOCITY ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.dt_VELOCITY.html", 
        "id": 1200, 
        "title": "dt_VELOCITY"
    }, 
    {
        "body": "\n\neps_T ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.eps_T.html", 
        "id": 1201, 
        "title": "eps_T"
    }, 
    {
        "body": "\n\neps_p ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.eps_p.html", 
        "id": 1202, 
        "title": "eps_p"
    }, 
    {
        "body": "\n\neps_phyd ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.eps_phyd.html", 
        "id": 1203, 
        "title": "eps_phyd"
    }, 
    {
        "body": "\n\neps_v ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.eps_v.html", 
        "id": 1204, 
        "title": "eps_v"
    }, 
    {
        "body": "\n\nfreq_restart ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.freq_restart.html", 
        "id": 1205, 
        "title": "freq_restart"
    }, 
    {
        "body": "\n\ninitial_particles ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.initial_particles.html", 
        "id": 1206, 
        "title": "initial_particles"
    }, 
    {
        "body": "\n\nint_BND_part_add ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.int_BND_part_add.html", 
        "id": 1207, 
        "title": "int_BND_part_add"
    }, 
    {
        "body": "\n\nint_BND_part_remove ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.int_BND_part_remove.html", 
        "id": 1208, 
        "title": "int_BND_part_remove"
    }, 
    {
        "body": "\n\nint_part_add ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.int_part_add.html", 
        "id": 1209, 
        "title": "int_part_add"
    }, 
    {
        "body": "\n\nint_part_cross_BND ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.int_part_cross_BND.html", 
        "id": 1210, 
        "title": "int_part_cross_BND"
    }, 
    {
        "body": "\n\nint_part_remove ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.int_part_remove.html", 
        "id": 1211, 
        "title": "int_part_remove"
    }, 
    {
        "body": "\n\nint_part_smooth ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.int_part_smooth.html", 
        "id": 1212, 
        "title": "int_part_smooth"
    }, 
    {
        "body": "\n\nkind_of_method ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.kind_of_method.html", 
        "id": 1213, 
        "title": "kind_of_method"
    }, 
    {
        "body": "\n\nlimiter ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.limiter.html", 
        "id": 1214, 
        "title": "limiter"
    }, 
    {
        "body": "\n\nmax_N_stencil ...  maximum number of neighbor particles accepted for stencil computation and numerics \n\n\n   \n  max_N_stencil = 25 \n   \n  default: max_N_stencil = 40 \n  Defines the maximum number of accepted neighbor particles for the pure numerics (stencil computation, differential operators) \n  Out of the complete neighbor list, FPM selects the  max_N_stencil  closest ones. \n  This number is relevant for ALL particles (interior + boundary) \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.max_N_stencil.html", 
        "id": 1215, 
        "title": "max_N_stencil"
    }, 
    {
        "body": "\n\nmax_N_stencil_INTERIOR ...  max. number of neighbors accepted for stencil computation and numerics only for interior pooints \n\n\n   \n  max_N_stencil_INTERIOR = 25 \n   \n  default: max_N_stencil_INTERIOR = 40 \n  Defines the maximum number of accepted neighbor particles for the pure numerics (stencil computation, differential operators). \n  Only interior particles are concerned. \n  Out of the complete neighbor list, FPM selects the  max_N_stencil_INTERIOR  closest ones. \n  Additionally, we have the constraint \n  max_N_stencil_INTERIOR = min( max_N_stencil, max_N_stencil_INTERIOR ) \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.max_N_stencil_INTERIOR.html", 
        "id": 1216, 
        "title": "max_N_stencil_INTERIOR"
    }, 
    {
        "body": "\n\nnue ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.nue.html", 
        "id": 1217, 
        "title": "nue"
    }, 
    {
        "body": "\n\nord_convection ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.ord_convection.html", 
        "id": 1218, 
        "title": "ord_convection"
    }, 
    {
        "body": "\n\nord_eval ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.ord_eval.html", 
        "id": 1219, 
        "title": "ord_eval"
    }, 
    {
        "body": "\n\nord_gradient ...  define approximation order of the gradient operators \n\n\n   \n  ord_gradient = 2 \n   \n  deafult: ord_gradient = 3 \n   \n   Special feature  \n   \n  ord_gradient = -2 \n   \n  In this case, the gradient operator is not computed directly, but retrieved from the Laplace operator in the sense \n   \n   \n   \n   \n\n\n\nThis item is referenced in:\n\n\nord_gradient  ...  define approximation order of the gradient operators \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.ord_gradient.html", 
        "id": 1220, 
        "title": "ord_gradient"
    }, 
    {
        "body": "\n\nord_laplace ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.ord_laplace.html", 
        "id": 1221, 
        "title": "ord_laplace"
    }, 
    {
        "body": "\n\nord_smooth ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.ord_smooth.html", 
        "id": 1222, 
        "title": "ord_smooth"
    }, 
    {
        "body": "\n\npBubble_Offset ...  define offset pressure for bubble pressure-on-volume analysis \n\n\n  Deprecated version of BUBBLE_pOffset . See there. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.pBubble_Offset.html", 
        "id": 1223, 
        "title": "pBubble_Offset"
    }, 
    {
        "body": "\n\nprec_act_BND ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.prec_act_BND.html", 
        "id": 1224, 
        "title": "prec_act_BND"
    }, 
    {
        "body": "\n\nprec_comp_FS_normal ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.prec_comp_FS_normal.html", 
        "id": 1225, 
        "title": "prec_comp_FS_normal"
    }, 
    {
        "body": "\n\nprec_seek_FS ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.prec_seek_FS.html", 
        "id": 1226, 
        "title": "prec_seek_FS"
    }, 
    {
        "body": "\n\nprec_seek_holes ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.prec_seek_holes.html", 
        "id": 1227, 
        "title": "prec_seek_holes"
    }, 
    {
        "body": "\n\nradius_hole ...  relative allowed hole size \n\n\n  A hole in an FPM point cloud shall not be bigger than radius_hole*FPMinteractionRadius. \n  If a hole is bigger, it will be filled by a new FPM point. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.radius_hole.html", 
        "id": 1228, 
        "title": "radius_hole"
    }, 
    {
        "body": "\n\nread_Y ...  deprecated, not used any more, to be set by restart in USER_common_variables \n\n\n   deprecated   \n  not used any more, to be set by restart in USER_common_variables  \n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.read_Y.html", 
        "id": 1229, 
        "title": "read_Y"
    }, 
    {
        "body": "\n\nrel_dist ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.rel_dist.html", 
        "id": 1230, 
        "title": "rel_dist"
    }, 
    {
        "body": "\n\nrel_dist_bound ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.rel_dist_bound.html", 
        "id": 1231, 
        "title": "rel_dist_bound"
    }, 
    {
        "body": "\n\nrel_dist_edge ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.rel_dist_edge.html", 
        "id": 1232, 
        "title": "rel_dist_edge"
    }, 
    {
        "body": "\n\nrestart_file ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.restart_file.html", 
        "id": 1233, 
        "title": "restart_file"
    }, 
    {
        "body": "\n\nrestartnewBE_filling ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.restartnewBE_filling.html", 
        "id": 1234, 
        "title": "restartnewBE_filling"
    }, 
    {
        "body": "\n\nsmooth_BND_movement ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.smooth_BND_movement.html", 
        "id": 1235, 
        "title": "smooth_BND_movement"
    }, 
    {
        "body": "\n\nsmooth_BND_normal ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.smooth_BND_normal.html", 
        "id": 1236, 
        "title": "smooth_BND_normal"
    }, 
    {
        "body": "\n\nsmooth_FS ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.smooth_FS.html", 
        "id": 1237, 
        "title": "smooth_FS"
    }, 
    {
        "body": "\n\nsmooth_FS_SurfaceTension ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.smooth_FS_SurfaceTension.html", 
        "id": 1238, 
        "title": "smooth_FS_SurfaceTension"
    }, 
    {
        "body": "\n\nstretch_search ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.stretch_search.html", 
        "id": 1239, 
        "title": "stretch_search"
    }, 
    {
        "body": "\n\ntime_integration_expl ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.time_integration_expl.html", 
        "id": 1240, 
        "title": "time_integration_expl"
    }, 
    {
        "body": "\n\ntime_step_gain ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.time_step_gain.html", 
        "id": 1241, 
        "title": "time_step_gain"
    }, 
    {
        "body": "\n\ntime_step_loss ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.time_step_loss.html", 
        "id": 1242, 
        "title": "time_step_loss"
    }, 
    {
        "body": "\n\ntryMaikesTriangulation ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.tryMaikesTriangulation.html", 
        "id": 1243, 
        "title": "tryMaikesTriangulation"
    }, 
    {
        "body": "\n\nturn_down_BND_order ...  automatically reduce the approximation of a boundary particle \n\n\n   \n  turn_down_BND_order = 0.5 \n   \n  default: turn_down_BND_order = 0.25 \n  The approximation order of a boundary particle (including free surfaces!) is reduced automatically reduced by one, \n  if the ratio between number of interior and boundary points in the stencil fulfills \n   \n  \n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.turn_down_BND_order.html", 
        "id": 1244, 
        "title": "turn_down_BND_order"
    }, 
    {
        "body": "\n\nuse_BubbleManagement ...  switch on bubble analysis for a given chamber index \n\n\n  Deprecated version of BUBBLE_DoTheManagement . See there. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.use_BubbleManagement.html", 
        "id": 1245, 
        "title": "use_BubbleManagement"
    }, 
    {
        "body": "\n\nvel_dim ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.vel_dim.html", 
        "id": 1246, 
        "title": "vel_dim"
    }, 
    {
        "body": "\n\nwho_am_I ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.who_am_I.html", 
        "id": 1247, 
        "title": "who_am_I"
    }, 
    {
        "body": "\n\nwrite_debug ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/read_common_variables.f90 \n\n\n\n", 
        "url": "../FPM.InputFiles.common_variables.write_debug.html", 
        "id": 1248, 
        "title": "write_debug"
    }, 
    {
        "body": "\n\nRunTimeTools\n\n\n\n\n\nList of members:\n\n\nComputationalSteering  ...  communication with running FPM-job \nTIMECHECK  ...  measure performance (simulation time) for different tasks of FPM \n\n\n\n\n\n", 
        "url": "../FPM.ProgramExecution.RunTimeTools.html", 
        "id": 1249, 
        "title": "RunTimeTools"
    }, 
    {
        "body": "\n\nComputationalSteering ...  communication with running FPM-job \n\n\n   \n  Write a command into the file with the name SIGNAL in the project folder, i.e. \n  in the folder where the input files USER_common_variables.dat and common_variables.dat \n  are located. \n   \n  Under linux, the most easy way is to use the echo command, for instance \n  linux> echo quit > SIGNAL \n   \n  One can also load SIGNAL into a regular editor. \n   \n  NOTE: after reading of the SIGNAL file, FPM will completely erase its contents. \n  Some editors might give an automatic warning, that the file has changed on disc. \n   \n  The computational steering can run in two different modes: parallel, see ParallelReadingOfSignalFile \n                                                             sequential, see SequentialReadingOfSignalFile \n\n\n\n\nList of members:\n\n\nParallelReadingOfSignalFile  ...  communication with running FPM-job by separate (parallel)  thread \nSequentialReadingOfSignalFile  ...  communication with running FPM-job by sequential reading of SIGNAL-file \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PerformanceAndControl/ComputationalSteering/ComputationalSteering_InterpretSignalSequence.f90 \n\n\n\n", 
        "url": "../FPM.ProgramExecution.RunTimeTools.ComputationalSteering.html", 
        "id": 1250, 
        "title": "ComputationalSteering"
    }, 
    {
        "body": "\n\nParallelReadingOfSignalFile ...  communication with running FPM-job by separate (parallel)  thread \n\n\n   \n  FPM starts a separate thread, that mostly sleeps, but once in a second, it checks if \n  the contents of the SIGNAL-file has changed. If changed, it triggers the appropriate actions \n  by signal handlers. \n   \n  Advantage of this is, that FPM will not have to pause in order to interprete the SIGNAL-file. \n   \n  The parallel preocessing of the SIGNAL-file is invoked ONLY if the option SIGNAL_LaunchComputationalSteering is set. \n\n\n\n\nList of members:\n\n\nbatchmode  ...  pause to FPM execution, allow FPM batch commands that modify the current state of the point cloud \nbatchmode_off  ...  leave the batchmode \nbatchmode_on  ...  enter the batchmode \nbi  ...  stop the currently running iteration of sparse linear systems \nbreak_iteration  ...  stop the currently running iteration of sparse linear systems \npause  ...  let FPM sleep until the next pause command is launched \npause_off  ...  continue FPM execution after pause_on command was given \npause_on  ...  let FPM sleep until the pause_off command is launched \nplot  ...  force a result plot after the end of the current time step \nqualitycheck  ...  force a quality check of the FPM point cloud after the next organization step \nquit  ...  quit FPM execution after the current time cycle \nreread_Ucv  ...  reload USER_common_variables.dat \nreread_all  ...  reloads both USER_common_variables.dat and common_variables.dat \nreread_cv  ...  reload common_variables.dat \nreset_Vanalytical  ...  resets the analytical volume of each chamber to the current values \nsave  ...  write an FPM restart file after the end of the current time step \nset_OMP_threads  ...  redefines the number of OMP threads to be used \ntime_check  ...  write out a detailled time check listing \ntime_check_sum  ...  write out a sum-up conclusion of the time check  \nwrite_cv  ...  write the complete set of numerical parameters to file \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PerformanceAndControl/ComputationalSteering/ComputationalSteering_InterpretSignalSequence.f90 \n\n\n\n", 
        "url": "../FPM.ProgramExecution.RunTimeTools.ComputationalSteering.ParallelReadingOfSignalFile.html", 
        "id": 1251, 
        "title": "ParallelReadingOfSignalFile"
    }, 
    {
        "body": "\n\nbatchmode ...  pause to FPM execution, allow FPM batch commands that modify the current state of the point cloud \n\n\n  This feature might help in debugging or further developing FPM. \n   \n\n\n\n\nList of members:\n\n\nORGANIZE_DevelopperCheck{}  ...  call the FPM subroutine ORGANIZE_DevelopperCheck \nPOINTCLOUD_SetInitialPointToBE{}  ...  call the FPM subroutine POINTCLOUD_SetInitialPointToBE \ndeleteParticlesOn{}  ...  delete FPM points by an arithmetic criterion \ndistanceToBND{}  ...  recompute the distance of each particle with respect to the boundary \necho{}  ...  simple test writeout in order to check the response of FPM \nevaluateEquation{}  ...  evaluate equation particlewise \ninclude{}  ...  read in more geometry elements \norganize_points{}  ...  Execute the complete particle organization subroutine of FPM \nplot{}  ...  write ensight, tecplot, ascii or other result formats \npropagateFunction{}  ...  propagate a function with restricted gradient \nquickview{}  ...  produce a quickview image \nrecomputeMPIbisection{}  ...  recompute MPI bisection on the spot \nrecomputeSearchTree{}  ...  Recompute the particle search tree \nremovePartsOfBEbyAlias{}  ...  remove boundary parts defined by alias name(s) \nsort_BE_into_boxes{}  ...  reconstruct the search tree for boundary elements \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PerformanceAndControl/ComputationalSteering/ComputationalSteering_BatchMode.f90 \n\n\n\n", 
        "url": "../FPM.ProgramExecution.RunTimeTools.ComputationalSteering.ParallelReadingOfSignalFile.batchmode___CSpar___.html", 
        "id": 1252, 
        "title": "batchmode___CSpar___"
    }, 
    {
        "body": "\n\nORGANIZE_DevelopperCheck{} ...  call the FPM subroutine ORGANIZE_DevelopperCheck \n\n\n   \n  ORGANIZE_DevelopperCheck{} \n   \n  Execute a call to the FPM-subroutine ORGANIZE_DevelopperCheck. \n  Purpose: clearly debugging \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PerformanceAndControl/ComputationalSteering/ComputationalSteering_InterpreteBatchCommand.f90 \n\n\n\n", 
        "url": "../FPM.ProgramExecution.RunTimeTools.ComputationalSteering.ParallelReadingOfSignalFile.batchmode___CSpar___.ORGANIZE_DevelopperCheck{}.html", 
        "id": 1253, 
        "title": "ORGANIZE_DevelopperCheck{}"
    }, 
    {
        "body": "\n\nPOINTCLOUD_SetInitialPointToBE{} ...  call the FPM subroutine POINTCLOUD_SetInitialPointToBE \n\n\n   \n  POINTCLOUD_SetInitialPointToBE{} \n   \n  Place new particles at empty boundary elements. \n  Purpose: initialize the filling procedure of new  boundary elements, imported by the include{} command. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PerformanceAndControl/ComputationalSteering/ComputationalSteering_InterpreteBatchCommand.f90 \n\n\n\n", 
        "url": "../FPM.ProgramExecution.RunTimeTools.ComputationalSteering.ParallelReadingOfSignalFile.batchmode___CSpar___.POINTCLOUD_SetInitialPointToBE{}.html", 
        "id": 1254, 
        "title": "POINTCLOUD_SetInitialPointToBE{}"
    }, 
    {
        "body": "\n\ndeleteParticlesOn{} ...  delete FPM points by an arithmetic criterion \n\n\n   \n  deleteParticlesOn{ [BodyOfConditionEquation] } \n   \n  An FPM point is deleted if the evaluation of the [BodyOfConditionEquation] is positive, for example \n  deleteParticlesOn{ [Y%ind_T%-300] } would delete all FPM points whose temperature is bigger than 300. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PerformanceAndControl/ComputationalSteering/ComputationalSteering_InterpreteBatchCommand.f90 \n\n\n\n", 
        "url": "../FPM.ProgramExecution.RunTimeTools.ComputationalSteering.ParallelReadingOfSignalFile.batchmode___CSpar___.deleteParticlesOn{}.html", 
        "id": 1255, 
        "title": "deleteParticlesOn{}"
    }, 
    {
        "body": "\n\ndistanceToBND{} ...  recompute the distance of each particle with respect to the boundary \n\n\n   \n  distanceToBND{} \n   \n   \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PerformanceAndControl/ComputationalSteering/ComputationalSteering_InterpreteBatchCommand.f90 \n\n\n\n", 
        "url": "../FPM.ProgramExecution.RunTimeTools.ComputationalSteering.ParallelReadingOfSignalFile.batchmode___CSpar___.distanceToBND{}.html", 
        "id": 1256, 
        "title": "distanceToBND{}"
    }, 
    {
        "body": "\n\necho{} ...  simple test writeout in order to check the response of FPM \n\n\n   \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PerformanceAndControl/ComputationalSteering/ComputationalSteering_InterpreteBatchCommand.f90 \n\n\n\n", 
        "url": "../FPM.ProgramExecution.RunTimeTools.ComputationalSteering.ParallelReadingOfSignalFile.batchmode___CSpar___.echo{}.html", 
        "id": 1257, 
        "title": "echo{}"
    }, 
    {
        "body": "\n\nevaluateEquation{} ...  evaluate equation particlewise \n\n\n   \n  evaluateEquation{  %ind_f% , [EquationBody] } \n   \n  the given equation [EquationBody] is evaluated particlewise, the result is copied into Y%ind_f% and can therefore be reused \n  EquationBody: is of the classical form as described in Equations \n  %ind_f%     : is the function index where to copy the result in the Y-array \n   \n  There is the following option \n   \n  evaluateEquation{  0 , [EquationBody] } \n   \n  if 0 or a negative number is given instead of %ind_f%, then the equation is NOT executed particlewise, but only once. \n  The result is written directly into the .signallog file. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PerformanceAndControl/ComputationalSteering/ComputationalSteering_InterpreteBatchCommand.f90 \n\n\n\n", 
        "url": "../FPM.ProgramExecution.RunTimeTools.ComputationalSteering.ParallelReadingOfSignalFile.batchmode___CSpar___.evaluateEquation{}.html", 
        "id": 1258, 
        "title": "evaluateEquation{}"
    }, 
    {
        "body": "\n\ninclude{} ...  read in more geometry elements \n\n\n   \n  include{FileName.xyz}, scale{...}, offset{...} \n   \n  This statement is of the type of the typical geometry file include statements, see also the section of BoundaryElements \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PerformanceAndControl/ComputationalSteering/ComputationalSteering_InterpreteBatchCommand.f90 \n\n\n\n", 
        "url": "../FPM.ProgramExecution.RunTimeTools.ComputationalSteering.ParallelReadingOfSignalFile.batchmode___CSpar___.include{}.html", 
        "id": 1259, 
        "title": "include{}"
    }, 
    {
        "body": "\n\norganize_points{} ...  Execute the complete particle organization subroutine of FPM \n\n\n   \n  organize_points{} \n   \n   \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PerformanceAndControl/ComputationalSteering/ComputationalSteering_InterpreteBatchCommand.f90 \n\n\n\n", 
        "url": "../FPM.ProgramExecution.RunTimeTools.ComputationalSteering.ParallelReadingOfSignalFile.batchmode___CSpar___.organize_points{}.html", 
        "id": 1260, 
        "title": "organize_points{}"
    }, 
    {
        "body": "\n\nplot{} ...  write ensight, tecplot, ascii or other result formats \n\n\n   \n  plot{} \n   \n  Immediately produce a result output according to the SAVE_format statement given in USER_common_variables \n  Purpose: provide a way to (step-by-step) check the results of the batchmode operations \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PerformanceAndControl/ComputationalSteering/ComputationalSteering_InterpreteBatchCommand.f90 \n\n\n\n", 
        "url": "../FPM.ProgramExecution.RunTimeTools.ComputationalSteering.ParallelReadingOfSignalFile.batchmode___CSpar___.plot{}.html", 
        "id": 1261, 
        "title": "plot{}"
    }, 
    {
        "body": "\n\npropagateFunction{} ...  propagate a function with restricted gradient \n\n\n   \n  propagateFunction{ AllowedGradient, %ind_f% , %ind_attched_1% , %ind_attched_2%, ... } \n   \n  The function propagation allow a certain gradient only, i.e. after function propagation, \n   \n  for neighbor particles with the indices i and j. \n   \n  %ind_attched_n% are optional and can be used as color function in order to sketch the graph of function distribution. \n \n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PerformanceAndControl/ComputationalSteering/ComputationalSteering_InterpreteBatchCommand.f90 \n\n\n\n", 
        "url": "../FPM.ProgramExecution.RunTimeTools.ComputationalSteering.ParallelReadingOfSignalFile.batchmode___CSpar___.propagateFunction{}.html", 
        "id": 1262, 
        "title": "propagateFunction{}"
    }, 
    {
        "body": "\n\nquickview{} ...  produce a quickview image \n\n\n   \n  quickview{} \n   \n  Immediately produce a quickview of the present state. \n  Purpose: For quick checks of all the present batchmode operations, most of \n  all in order to check the result of \n  - evaluateEquation{} \n  - distanceToBND{} \n  - propagateFunction{} \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PerformanceAndControl/ComputationalSteering/ComputationalSteering_InterpreteBatchCommand.f90 \n\n\n\n", 
        "url": "../FPM.ProgramExecution.RunTimeTools.ComputationalSteering.ParallelReadingOfSignalFile.batchmode___CSpar___.quickview{}.html", 
        "id": 1263, 
        "title": "quickview{}"
    }, 
    {
        "body": "\n\nbatchmode_on ...  enter the batchmode \n\n\n  see FPM::RunTimeTools::ComputationalSteering::batchmode. \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PerformanceAndControl/ComputationalSteering/ComputationalSteering_InterpretSignalSequence.f90 \n\n\n\n", 
        "url": "../FPM.ProgramExecution.RunTimeTools.ComputationalSteering.ParallelReadingOfSignalFile.batchmode_on___CSpar___.html", 
        "id": 1264, 
        "title": "batchmode_on___CSpar___"
    }, 
    {
        "body": "\n\nrecomputeMPIbisection{} ...  recompute MPI bisection on the spot \n\n\n  This command redefines the MPI-bisection (i.e. domain decomposition), redistributes the FPM points and re-establishes the \n  communicatin list. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PerformanceAndControl/ComputationalSteering/ComputationalSteering_InterpreteBatchCommand.f90 \n\n\n\n", 
        "url": "../FPM.ProgramExecution.RunTimeTools.ComputationalSteering.ParallelReadingOfSignalFile.batchmode___CSpar___.recomputeMPIbisection{}.html", 
        "id": 1265, 
        "title": "recomputeMPIbisection{}"
    }, 
    {
        "body": "\n\nrecomputeSearchTree{} ...  Recompute the particle search tree \n\n\n   \n  recomputeSearchTree{} \n   \n  Recompute the particle search tree according to the value UseBoxSystemVersion given in common_variables. \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PerformanceAndControl/ComputationalSteering/ComputationalSteering_InterpreteBatchCommand.f90 \n\n\n\n", 
        "url": "../FPM.ProgramExecution.RunTimeTools.ComputationalSteering.ParallelReadingOfSignalFile.batchmode___CSpar___.recomputeSearchTree{}.html", 
        "id": 1266, 
        "title": "recomputeSearchTree{}"
    }, 
    {
        "body": "\n\nremovePartsOfBEbyAlias{} ...  remove boundary parts defined by alias name(s) \n\n\n   \n  removePartsOfBEbyAlias{\"AliasToBeRemoved\"} \n   \n  All of the boundary elements that are originally tagged with the given alias, are removed. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PerformanceAndControl/ComputationalSteering/ComputationalSteering_InterpreteBatchCommand.f90 \n\n\n\n", 
        "url": "../FPM.ProgramExecution.RunTimeTools.ComputationalSteering.ParallelReadingOfSignalFile.batchmode___CSpar___.removePartsOfBEbyAlias{}.html", 
        "id": 1267, 
        "title": "removePartsOfBEbyAlias{}"
    }, 
    {
        "body": "\n\nsort_BE_into_boxes{} ...  reconstruct the search tree for boundary elements \n\n\n   \n  sort_BE_into_boxes{} \n   \n  This call recomputres the bisection search tree for the boundary elements. Most suitable for \n  - debugging reasons or \n  - reading in additional geometry during execution \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PerformanceAndControl/ComputationalSteering/ComputationalSteering_InterpreteBatchCommand.f90 \n\n\n\n", 
        "url": "../FPM.ProgramExecution.RunTimeTools.ComputationalSteering.ParallelReadingOfSignalFile.batchmode___CSpar___.sort_BE_into_boxes{}.html", 
        "id": 1268, 
        "title": "sort_BE_into_boxes{}"
    }, 
    {
        "body": "\n\nbatchmode_off ...  leave the batchmode \n\n\n  see FPM::RunTimeTools::ComputationalSteering::batchmode. \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PerformanceAndControl/ComputationalSteering/ComputationalSteering_InterpretSignalSequence.f90 \n\n\n\n", 
        "url": "../FPM.ProgramExecution.RunTimeTools.ComputationalSteering.ParallelReadingOfSignalFile.batchmode_off___CSpar___.html", 
        "id": 1269, 
        "title": "batchmode_off___CSpar___"
    }, 
    {
        "body": "\n\nbi ...  stop the currently running iteration of sparse linear systems \n\n\n  same as break_iteration. See there. \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PerformanceAndControl/ComputationalSteering/ComputationalSteering_InterpretSignalSequence.f90 \n\n\n\n", 
        "url": "../FPM.ProgramExecution.RunTimeTools.ComputationalSteering.ParallelReadingOfSignalFile.bi___CSpar___.html", 
        "id": 1270, 
        "title": "bi___CSpar___"
    }, 
    {
        "body": "\n\nbreak_iteration ...  stop the currently running iteration of sparse linear systems \n\n\n  ONLY FOR SCIENTIFIC REASONS, DEBUGGING, TESTING, or if you really know what you do. \n  Stops the currently running BiCGstab iteration of sparse linear systems, before convergence \n  is reached. Shortens simulation time in debugging/testing cases etc. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PerformanceAndControl/ComputationalSteering/ComputationalSteering_InterpretSignalSequence.f90 \n\n\n\n", 
        "url": "../FPM.ProgramExecution.RunTimeTools.ComputationalSteering.ParallelReadingOfSignalFile.break_iteration___CSpar___.html", 
        "id": 1271, 
        "title": "break_iteration___CSpar___"
    }, 
    {
        "body": "\n\npause ...  let FPM sleep until the next pause command is launched \n\n\n  interupts but not stops the FPM execution. If the pause command is launched a second time, \n  FPM continues execution. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PerformanceAndControl/ComputationalSteering/ComputationalSteering_InterpretSignalSequence.f90 \n\n\n\n", 
        "url": "../FPM.ProgramExecution.RunTimeTools.ComputationalSteering.ParallelReadingOfSignalFile.pause___CSpar___.html", 
        "id": 1272, 
        "title": "pause___CSpar___"
    }, 
    {
        "body": "\n\npause_off ...  continue FPM execution after pause_on command was given \n\n\n  see also pause and pause_on. \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PerformanceAndControl/ComputationalSteering/ComputationalSteering_InterpretSignalSequence.f90 \n\n\n\n", 
        "url": "../FPM.ProgramExecution.RunTimeTools.ComputationalSteering.ParallelReadingOfSignalFile.pause_off___CSpar___.html", 
        "id": 1273, 
        "title": "pause_off___CSpar___"
    }, 
    {
        "body": "\n\npause_on ...  let FPM sleep until the pause_off command is launched \n\n\n  FPM sleep   : pause_on \n  FPM_continue: pause_off \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PerformanceAndControl/ComputationalSteering/ComputationalSteering_InterpretSignalSequence.f90 \n\n\n\n", 
        "url": "../FPM.ProgramExecution.RunTimeTools.ComputationalSteering.ParallelReadingOfSignalFile.pause_on___CSpar___.html", 
        "id": 1274, 
        "title": "pause_on___CSpar___"
    }, 
    {
        "body": "\n\nplot ...  force a result plot after the end of the current time step \n\n\n  FPM pretends as if it was a regularly triggered output and lines it in correct order into the ensight, tecplot, ... output. \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PerformanceAndControl/ComputationalSteering/ComputationalSteering_InterpretSignalSequence.f90 \n\n\n\n", 
        "url": "../FPM.ProgramExecution.RunTimeTools.ComputationalSteering.ParallelReadingOfSignalFile.plot___CSpar___.html", 
        "id": 1275, 
        "title": "plot___CSpar___"
    }, 
    {
        "body": "\n\nqualitycheck ...  force a quality check of the FPM point cloud after the next organization step \n\n\n  FPM performs a quality check and puts down the results into the file QUALITYCHECK.case in the result-folder SAVE_path . \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PerformanceAndControl/ComputationalSteering/ComputationalSteering_InterpretSignalSequence.f90 \n\n\n\n", 
        "url": "../FPM.ProgramExecution.RunTimeTools.ComputationalSteering.ParallelReadingOfSignalFile.qualitycheck___CSpar___.html", 
        "id": 1276, 
        "title": "qualitycheck___CSpar___"
    }, 
    {
        "body": "\n\nquit ...  quit FPM execution after the current time cycle \n\n\n   \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PerformanceAndControl/ComputationalSteering/ComputationalSteering_InterpretSignalSequence.f90 \n\n\n\n", 
        "url": "../FPM.ProgramExecution.RunTimeTools.ComputationalSteering.ParallelReadingOfSignalFile.quit___CSpar___.html", 
        "id": 1277, 
        "title": "quit___CSpar___"
    }, 
    {
        "body": "\n\nreread_Ucv ...  reload USER_common_variables.dat \n\n\n  After having effected changes in the input file (for example modification of the boundary conditions, \n  material properties, smoothing length, ...), FPM will reload USER_common_variables.dat \n  on the fly, i.e. without stopping the program. The changes made will take effect with the next timestep executed. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PerformanceAndControl/ComputationalSteering/ComputationalSteering_InterpretSignalSequence.f90 \n\n\n\n", 
        "url": "../FPM.ProgramExecution.RunTimeTools.ComputationalSteering.ParallelReadingOfSignalFile.reread_Ucv___CSpar___.html", 
        "id": 1278, 
        "title": "reread_Ucv___CSpar___"
    }, 
    {
        "body": "\n\nreread_all ...  reloads both USER_common_variables.dat and common_variables.dat \n\n\n  Does both actions at the same time: \n  reread_Ucv \n  reread_cv \n  See there. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PerformanceAndControl/ComputationalSteering/ComputationalSteering_InterpretSignalSequence.f90 \n\n\n\n", 
        "url": "../FPM.ProgramExecution.RunTimeTools.ComputationalSteering.ParallelReadingOfSignalFile.reread_all___CSpar___.html", 
        "id": 1279, 
        "title": "reread_all___CSpar___"
    }, 
    {
        "body": "\n\nreread_cv ...  reload common_variables.dat \n\n\n  After having effected changes in the input file (for example modification of numerical parameters), \n  FPM will reload common_variables.dat \n  on the fly, i.e. without stopping the program. The changes made will take effect with the next timestep executed. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PerformanceAndControl/ComputationalSteering/ComputationalSteering_InterpretSignalSequence.f90 \n\n\n\n", 
        "url": "../FPM.ProgramExecution.RunTimeTools.ComputationalSteering.ParallelReadingOfSignalFile.reread_cv___CSpar___.html", 
        "id": 1280, 
        "title": "reread_cv___CSpar___"
    }, 
    {
        "body": "\n\nreset_Vanalytical ...  resets the analytical volume of each chamber to the current values \n\n\n  ONLY FOR TESTING AND DEBUGGING, or if you know what you do. \n  By default, FPM computes a mass/volume balance for each chamber individually. \n  By the initial volume and the time integral of all inflows and outflows, FPM is always up to date \n  about the current mass/volume, that should (theoretically) be present in a chamber. \n  By this command, this theoretical value is reset to the actually measured mass/volume in the chamber. \n  That makes sense for example in the following situation: remove a considerable number of particles \n  during a batchmode session, see FPM::RunTimeTools::ComputationalSteering::batchmode. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PerformanceAndControl/ComputationalSteering/ComputationalSteering_InterpretSignalSequence.f90 \n\n\n\n", 
        "url": "../FPM.ProgramExecution.RunTimeTools.ComputationalSteering.ParallelReadingOfSignalFile.reset_Vanalytical___CSpar___.html", 
        "id": 1281, 
        "title": "reset_Vanalytical___CSpar___"
    }, 
    {
        "body": "\n\nsave ...  write an FPM restart file after the end of the current time step \n\n\n  FPM pretends as if it was a regularly triggered restart file. Especially if %RESTART_sequence% is given in the Restart settings, \n  the new restart file obtains the next ordinal number in the sequence of restart files. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PerformanceAndControl/ComputationalSteering/ComputationalSteering_InterpretSignalSequence.f90 \n\n\n\n", 
        "url": "../FPM.ProgramExecution.RunTimeTools.ComputationalSteering.ParallelReadingOfSignalFile.save___CSpar___.html", 
        "id": 1282, 
        "title": "save___CSpar___"
    }, 
    {
        "body": "\n\nTIMECHECK ...  measure performance (simulation time) for different tasks of FPM \n\n\n  Switch on the performance analysis by COMP_TimeCheck. \n  FPM launches several stop watches. The stop watches have names (see NamesOfStopWatches), which mark the task whose performance is to be observed. \n  The stop watches are hierarchical and nested. \n\n\n\n\nList of members:\n\n\nNamesOfStopWatches  ...  currently implemented stop watches \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PerformanceAndControl/Monitoring/TIMECHECK.f90 \n\n\n\n", 
        "url": "../FPM.ProgramExecution.RunTimeTools.TIMECHECK.html", 
        "id": 1283, 
        "title": "TIMECHECK"
    }, 
    {
        "body": "\n\nset_OMP_threads ...  redefines the number of OMP threads to be used \n\n\n   \n  set_OMP_threads=4 \n   \n  set the number of OMP threads to 4. If the environment variable OMP_NUM_THREADS is defined, we have \n  set_OMP_threads = min( set_OMP_threads , OMP_NUM_THREADS ) \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PerformanceAndControl/ComputationalSteering/ComputationalSteering_InterpretSignalSequence.f90 \n\n\n\n", 
        "url": "../FPM.ProgramExecution.RunTimeTools.ComputationalSteering.ParallelReadingOfSignalFile.set_OMP_threads___CSpar___.html", 
        "id": 1284, 
        "title": "set_OMP_threads___CSpar___"
    }, 
    {
        "body": "\n\ntime_check ...  write out a detailled time check listing \n\n\n  The time-check listing can be given only if COMP_TimeCheck = 1 or COMP_TimeCheck = 2 is \n  given in common_variables.dat. The listing is appended to the .signallog file in the FPM project folder. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PerformanceAndControl/ComputationalSteering/ComputationalSteering_InterpretSignalSequence.f90 \n\n\n\n", 
        "url": "../FPM.ProgramExecution.RunTimeTools.ComputationalSteering.ParallelReadingOfSignalFile.time_check___CSpar___.html", 
        "id": 1285, 
        "title": "time_check___CSpar___"
    }, 
    {
        "body": "\n\ntime_check_sum ...  write out a sum-up conclusion of the time check  \n\n\n  The sum-up time-check can be given only if COMP_TimeCheck = 1 or COMP_TimeCheck = 2 is \n  given in common_variables.dat. The listing is appended to the .signallog file in the FPM project folder. \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PerformanceAndControl/ComputationalSteering/ComputationalSteering_InterpretSignalSequence.f90 \n\n\n\n", 
        "url": "../FPM.ProgramExecution.RunTimeTools.ComputationalSteering.ParallelReadingOfSignalFile.time_check_sum___CSpar___.html", 
        "id": 1286, 
        "title": "time_check_sum___CSpar___"
    }, 
    {
        "body": "\n\nwrite_cv ...  write the complete set of numerical parameters to file \n\n\n  After changing common_variables.dat, 'write_cv' will write the complete set of numerical parameters \n  in the file .common_variables_CompleteConfiguration.dat, to be found in the actual result-folder SAVE_path . \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PerformanceAndControl/ComputationalSteering/ComputationalSteering_InterpretSignalSequence.f90 \n\n\n\n", 
        "url": "../FPM.ProgramExecution.RunTimeTools.ComputationalSteering.ParallelReadingOfSignalFile.write_cv___CSpar___.html", 
        "id": 1287, 
        "title": "write_cv___CSpar___"
    }, 
    {
        "body": "\n\nSequentialReadingOfSignalFile ...  communication with running FPM-job by sequential reading of SIGNAL-file \n\n\n   \n  At the beginning of each time step, FPM reads the contents of the SIGNAL-file situated in the project folder and interpretes the \n  command(s) given. This is the sequential way as all FPM-business has to stop for a moment while the program reads and interpretes the SIGNAL-file. \n   \n   The sequential processing is the default! \n  Parallel processing can be launched only by the option SIGNAL_LaunchComputationalSteering in common_variables.dat  \n\n\n\n\nList of members:\n\n\nplot  ...  plot a result file after the end of the time step \nqualitycheck  ...  perform quality check operation of point cloud \nquit  ...  quit running computation \nreread_Ucv  ...  read again the SUER_common_variables.dat at the beginning of the next time step \nreread_all  ...  read both USER_common_variab\u00f6es.dat and common_variables.dat at the beginning of the next time step \nreread_cv  ...  read again the common_variables.dat at the beginning of the next time step \nsave  ...  save a restart file at the end of the time step \nset_OMP_threads  ...  redefines the number of OMP threads to be used \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PerformanceAndControl/ComputationalSteering/SIGNAL_CheckFile.f90 \n\n\n\n", 
        "url": "../FPM.ProgramExecution.RunTimeTools.ComputationalSteering.SequentialReadingOfSignalFile.html", 
        "id": 1288, 
        "title": "SequentialReadingOfSignalFile"
    }, 
    {
        "body": "\n\nplot ...  plot a result file after the end of the time step \n\n\n\n\n\nThis item is referenced in:\n\n\nplot{}  ...  write ensight, tecplot, ascii or other result formats \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PerformanceAndControl/ComputationalSteering/SIGNAL_CheckFile.f90 \n\n\n\n", 
        "url": "../FPM.ProgramExecution.RunTimeTools.ComputationalSteering.SequentialReadingOfSignalFile.plot___CSseq___.html", 
        "id": 1289, 
        "title": "plot___CSseq___"
    }, 
    {
        "body": "\n\nqualitycheck ...  perform quality check operation of point cloud \n\n\n\n\n\nThis item is referenced in:\n\n\nReadInPointCloud  ...  read in already existing point cloud from file \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PerformanceAndControl/ComputationalSteering/SIGNAL_CheckFile.f90 \n\n\n\n", 
        "url": "../FPM.ProgramExecution.RunTimeTools.ComputationalSteering.SequentialReadingOfSignalFile.qualitycheck___CSseq___.html", 
        "id": 1290, 
        "title": "qualitycheck___CSseq___"
    }, 
    {
        "body": "\n\nquit ...  quit running computation \n\n\n\n\n\nThis item is referenced in:\n\n\nComputationalSteering  ...  communication with running FPM-job \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PerformanceAndControl/ComputationalSteering/SIGNAL_CheckFile.f90 \n\n\n\n", 
        "url": "../FPM.ProgramExecution.RunTimeTools.ComputationalSteering.SequentialReadingOfSignalFile.quit___CSseq___.html", 
        "id": 1291, 
        "title": "quit___CSseq___"
    }, 
    {
        "body": "\n\nreread_Ucv ...  read again the SUER_common_variables.dat at the beginning of the next time step \n\n\n\n\n\nThis item is referenced in:\n\n\nreread_all  ...  reloads both USER_common_variables.dat and common_variables.dat \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PerformanceAndControl/ComputationalSteering/SIGNAL_CheckFile.f90 \n\n\n\n", 
        "url": "../FPM.ProgramExecution.RunTimeTools.ComputationalSteering.SequentialReadingOfSignalFile.reread_Ucv___CSseq___.html", 
        "id": 1292, 
        "title": "reread_Ucv___CSseq___"
    }, 
    {
        "body": "\n\nreread_all ...  read both USER_common_variab\u00f6es.dat and common_variables.dat at the beginning of the next time step \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PerformanceAndControl/ComputationalSteering/SIGNAL_CheckFile.f90 \n\n\n\n", 
        "url": "../FPM.ProgramExecution.RunTimeTools.ComputationalSteering.SequentialReadingOfSignalFile.reread_all___CSseq___.html", 
        "id": 1293, 
        "title": "reread_all___CSseq___"
    }, 
    {
        "body": "\n\nreread_cv ...  read again the common_variables.dat at the beginning of the next time step \n\n\n\n\n\nThis item is referenced in:\n\n\nreread_all  ...  reloads both USER_common_variables.dat and common_variables.dat \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PerformanceAndControl/ComputationalSteering/SIGNAL_CheckFile.f90 \n\n\n\n", 
        "url": "../FPM.ProgramExecution.RunTimeTools.ComputationalSteering.SequentialReadingOfSignalFile.reread_cv___CSseq___.html", 
        "id": 1294, 
        "title": "reread_cv___CSseq___"
    }, 
    {
        "body": "\n\nsave ...  save a restart file at the end of the time step \n\n\n\n\n\nThis item is referenced in:\n\n\nResults  ...  save computational results in different formats \nSAVE_format  ...  format to save simulation data \nASCII  ...  computation results column-wise in an ASCII formatted file \nSAVE_path  ...  absolute or relative path for the simulation results \nLinux  ...  how to install and run FPM under LINUX \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PerformanceAndControl/ComputationalSteering/SIGNAL_CheckFile.f90 \n\n\n\n", 
        "url": "../FPM.ProgramExecution.RunTimeTools.ComputationalSteering.SequentialReadingOfSignalFile.save___CSseq___.html", 
        "id": 1295, 
        "title": "save___CSseq___"
    }, 
    {
        "body": "\n\nset_OMP_threads ...  redefines the number of OMP threads to be used \n\n\n\n\n\nThis item is referenced in:\n\n\nset_OMP_threads  ...  redefines the number of OMP threads to be used \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PerformanceAndControl/ComputationalSteering/SIGNAL_CheckFile.f90 \n\n\n\n", 
        "url": "../FPM.ProgramExecution.RunTimeTools.ComputationalSteering.SequentialReadingOfSignalFile.set_OMP_threads___CSseq___.html", 
        "id": 1296, 
        "title": "set_OMP_threads___CSseq___"
    }, 
    {
        "body": "\n\nNamesOfStopWatches ...  currently implemented stop watches \n\n\n  The following stop watches are currently implemented \n   \n  ADMIN_TIME_INTEG                                    -> time for on full time cycle, excluding the saving operations \n  ADMIN_TIME_INTEG.ORGANIZE                           -> time for the FPM-point organization \n  ADMIN_TIME_INTEG.ORGANIZE.TimeStepManagement \n  ADMIN_TIME_INTEG.ORGANIZE.BE_Movement \n  ADMIN_TIME_INTEG.ORGANIZE.ComputSteering \n  ADMIN_TIME_INTEG.ORGANIZE.PREPARATION \n  ADMIN_TIME_INTEG.ORGANIZE.PREPARATION2 \n  ADMIN_TIME_INTEG.ORGANIZE.BISE_REDISTRIBUTION \n  ADMIN_TIME_INTEG.ORGANIZE.BE \n  ADMIN_TIME_INTEG.ORGANIZE.BE.ComputeH \n  ADMIN_TIME_INTEG.ORGANIZE.BE.SortBE \n  ADMIN_TIME_INTEG.ORGANIZE.BE.SortBE.PREP \n  ADMIN_TIME_INTEG.ORGANIZE.BE.SortBE.SORT \n  ADMIN_TIME_INTEG.ORGANIZE.BE.SortBE.SORT.part1 \n  ADMIN_TIME_INTEG.ORGANIZE.BE.SortBE.SORT.part2 \n  ADMIN_TIME_INTEG.ORGANIZE.BE.DeactBE \n  ADMIN_TIME_INTEG.ORGANIZE.BE.RepairBE \n  ADMIN_TIME_INTEG.ORGANIZE.ParticleTree \n  ADMIN_TIME_INTEG.ORGANIZE.EstablishCON \n  ADMIN_TIME_INTEG.ORGANIZE.DIST_TO_BND \n  ADMIN_TIME_INTEG.ORGANIZE.ACTIVATE_BND \n  ADMIN_TIME_INTEG.ORGANIZE.FILL_BND \n  ADMIN_TIME_INTEG.ORGANIZE.REMOVE BND \n  ADMIN_TIME_INTEG.ORGANIZE.FILL_FREE_SURFACE \n  ADMIN_TIME_INTEG.ORGANIZE.FILL_INT \n  ADMIN_TIME_INTEG.ORGANIZE.REMOVE_INT \n  ADMIN_TIME_INTEG.ORGANIZE.CHECK_FREE_SURFACE \n  ADMIN_TIME_INTEG.ORGANIZE.COMMUNICATION \n  ADMIN_TIME_INTEG.ORGANIZE.COMMUNICATION.BISECT \n  ADMIN_TIME_INTEG.ORGANIZE.COMMUNICATION.PROCRECMP \n  ADMIN_TIME_INTEG.ORGANIZE.COMMUNICATION.REDISTR \n  ADMIN_TIME_INTEG.ORGANIZE.COMMUNICATION.COMMLIST \n  ADMIN_TIME_INTEG.ORGANIZE.COMMUNICATION.COMMUN \n  ADMIN_TIME_INTEG.ORGANIZE.COMMUNICATION.NEIGHLIST \n  ADMIN_TIME_INTEG.ORGANIZE.COMMUNICATION.GLOBIND \n  ADMIN_TIME_INTEG.ORGANIZE.COMMUNICATION.GLOBINDRED \n  ADMIN_TIME_INTEG.ORGANIZE.NEIGHBORLISTREDUCTION \n  ADMIN_TIME_INTEG.ORGANIZE.APPROXIMATE \n  ADMIN_TIME_INTEG.ORGANIZE.OPPOSITE_POINTS \n  ADMIN_TIME_INTEG.ORGANIZE.NEIGHBORLISTS \n  ADMIN_TIME_INTEG.ORGANIZE.FINALIZE \n  ADMIN_TIME_INTEG.ORGANIZE.REMOVE_FROM_REGION \n  ADMIN_TIME_INTEG.FLIQUID                            -> pure numerics in incompressible solver \n  ADMIN_TIME_INTEG.FLIQUID.DIFF_OPERATORS \n  ADMIN_TIME_INTEG.FLIQUID.PREPARATION \n  ADMIN_TIME_INTEG.FLIQUID.PHYDROSTATIC \n  ADMIN_TIME_INTEG.FLIQUID.TEMPERAURE \n  ADMIN_TIME_INTEG.FLIQUID.SOLVE_V \n  ADMIN_TIME_INTEG.FLIQUID.SOLVE_V.MxVprepare \n  ADMIN_TIME_INTEG.FLIQUID.SOLVE_V.SolveMatrix \n  ADMIN_TIME_INTEG.FLIQUID.PCORRECTION \n  ADMIN_TIME_INTEG.FLIQUID.PDYNAMIC \n  ADMIN_TIME_INTEG.FLIQUID.KEPSILON \n  ADMIN_TIME_INTEG.FLIQUID.POSTPROCESSING \n  ADMIN_TIME_INTEG.SPM_BiCGstab \n  ADMIN_TIME_INTEG.SPM_BiCGstab_CommCheck \n  ADMIN_TIME_INTEG.MPIbarrier \n  ADMIN_TIME_INTEG.MPIbarrier2 \n  ADMIN_TIME_INTEG.MPIcommunicate \n  ADMIN_TIME_INTEG.MPIreduction \n  'ADMIN_TIME_INTEG ___DELAUNAY___'                     -> collection of the computation times used for delaunnay triangulation (non-hierarchical) \n  ADMIN_TIME_INTEG.TRANSPORT \n  ADMIN_TIME_INTEG.TRANSPORT.SOLVE_EXPL_STEP \n  ADMIN_TIME_INTEG.TRANSPORT.BIG_LOOP_divOp \n  ADMIN_TIME_INTEG.TRANSPORT.Establish_Diff_Ops \n  ADMIN_TIME_INTEG.TRANSPORT.EXPL_TIME_INTEGRATION \n  ADMIN_TIME_INTEG.TRANSPORT.STAGE_LOOP \n  ADMIN_TIME_INTEG.ORGANIZE.PrepareNumerics \n  ADMIN_TIME_INTEG.SAVE \n  ADMIN_TIME_INTEG.SAMG \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_include/COMMON/common_TimeCheck.h \n\n\n\n", 
        "url": "../FPM.ProgramExecution.RunTimeTools.TIMECHECK.NamesOfStopWatches.html", 
        "id": 1297, 
        "title": "NamesOfStopWatches"
    }, 
    {
        "body": "\n\nInstallAndRun\n\n\n\n\n\nList of members:\n\n\nWindows  ... Windows\nLinux  ...  how to install and run FPM under LINUX \n\n\n\n\n\n", 
        "url": "../FPM.ProgramExecution.InstallAndRun.html", 
        "id": 1298, 
        "title": "InstallAndRun"
    }, 
    {
        "body": "\n\nWindows\n\n\n\n\n\nList of members:\n\n\nTankSloshingApplication  ...  how to install and run FPM sloshing tool under WINDOWS \n\n\n\n\n\n", 
        "url": "../FPM.ProgramExecution.InstallAndRun.Windows___IAR___.html", 
        "id": 1299, 
        "title": "Windows___IAR___"
    }, 
    {
        "body": "\n\nTankSloshingApplication ...  how to install and run FPM sloshing tool under WINDOWS \n\n\n   \n  INSTALLATION  \n  1.) Install the executable  FPM_IFC14_DBLPR_WINDOWS.exe  and the \n      OMP-library  libiomp5md.dll  in one and the same directory, \n      most prefferably in \"C:\\Program Files\\FPM\\bin\" \n  2.) Install the folder  FPMforSloshing  somewhere on your file system. \n  3.) If FPM_IFC14_DBLPR_WINDOWS.exe IS NOT installed in \"C:\\Program Files\\FPM\\bin\", \n      the files  \n      FPMforSloshing\\GeneralInputFolder_V3\\runFPMforSloshing.bat \n      FPMforSloshing\\GeneralInputFolder_V3\\runFPMforMESHING.bat \n      FPMforSloshing\\GeneralInputFolder_V3\\runFPMforSIMULATION.bat  \n      have to be adapted, in fact the installion path has to be added to the PATH-variable. \n       Alternatively: the installation path can be constantly added to the PATH-Variable in \n      the Windows system control.  \n   \n  NEW SLOSHING PROJECT  \n  1.) Copy the folder  FPMforSloshing\\GeneralInputFolder_V3\\  somewhere, for example into \n       MyNewSloshingProject  \n  2.) Adapt the file \n       MyNewSloshingProject\\Ucv_VW_SetInputParametersByHand  \n      that means give the parameters \n            \"T_start\"                := ... \n            \"T_end\"                  := ... \n            \"Restart\"                := ... \n            \"GeoFile_1\"              := ... \n            \"ScaleGeo\"               := ...   -> here give the geometry concerned as iges-file \n            \"RelativeFillingLevel\"   := ... \n            \"FillingLevelOverGround\" := ... \n            \"H_MESH\"                 := ... \n            \"H_Computation\"          := ... \n            \"AccelerationVertical\"   := ... \n            \"AccelerationRadial\"     := ... \n            \"AccelerationTangential\" := ... \n      useful values. \n   \n  EXECUTION  \n  FPM usually reads in a geometry, given as iges-file. It meshes (triangulates) the surface, and the starts \n  the flow simulation using the parameters given (filling height, accelaration profile, point cloud refinement, etc.) \n  1.) In order to run MESHING and SIMULATION with one command, just execute \n       runFPMforSloshing.bat  \n  2.) To simply run MESHING, execute \n       runFPMforMESHING.bat  \n  3.) To simply run SIMULATION, execute \n       runFPMforSIMULATION.bat  \n      This will fail, if MESHING was not executed before. \n   \n  RESULTS  \n  The results of the FPM simulations are written to the folder defined in variables SAVE_path in the USER_common_variables.dat input file. \n  In many cases, this folder is within the project folder and starts with \"results_\". \n  In general, FPM creates case-files (ENSIGHT6 format). The only other option, currently, is the TECPLOT format ( Tecplot-WebPage ), \n  see SAVE_format. \n  In order to view the results in ENSIGHT6-format, install  ParaView . \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PerformanceAndControl/ParseCommandLineArguments.f90 \n\n\n\n\n\n COMPREHENSIVE EXAMPLE:  Click here  \n\n\n\n", 
        "url": "../FPM.ProgramExecution.InstallAndRun.Windows___IAR___.TankSloshingApplication.html", 
        "id": 1300, 
        "title": "TankSloshingApplication"
    }, 
    {
        "body": "\n\nLinux ...  how to install and run FPM under LINUX \n\n\n   \n  INSTALLATION  \n  Download an appropriate version of FPM from the page \n  https://git.itwm.fhg.de/svn/FPMDOCU/Executables/ \n   \n  Let us say, you are in need of the version MPI4_noCS_SAMG (found in https://git.itwm.fhg.de/svn/FPMDOCU/Executables/MPI4_noCS_SAMG/) \n  1.) download the appropriate executable FPMfree_double_ompi4_noCS_SAMG_vYY.MM.V.x \n  2.) check, if your system provides all necessary libraries by \n      - cd /path/to/folder/containing/FPM/executable \n      - ldd FPMfree_double_ompi4_noCS_SAMG_vYY.MM.V.x \n  3.) if not all libraries are present or, maybe, not unique, then \n      - also download the appropriate package of libraries FPMfree_double_ompi4_noCS_SAMG_vYY.MM.V_lib.tar.gz \n      - cd /path/to/folder/containing/FPM/libraries \n      - tar -x -f FPMfree_double_ompi4_noCS_SAMG_vYY.MM.V_lib.tar.gz \n      - export LD_LIBRARY_PATH=/path/to/folder/containing/FPM/libraries:$LD_LIBRARY_PATH \n  4.) save the FPM license file (let us say FPM.lcs) provided by ITWM to disc \n      - export FPM_LICENSE_FILE=/path/to/FPM/license/FPM.lcs \n   \n  PATHS  \n  We recommend, saving the following paths, for example in the user's (hidden) file ~/.bashrc \n  or (for all users) in /etc/bash.bashrc, as they are needed for each execution of FPM: \n  - export FPM_LICENSE_FILE=/path/to/FPM/license/FPM.lcs \n  - export LD_LIBRARY_PATH=/path/to/folder/containing/FPM/libraries:$LD_LIBRARY_PATH \n  - export FPMexec=/path/to/folder/containing/FPM/executable \n   \n  EXECUTION  \n  1.) Execution in OpenMP-Modus: simply call \n       $FPMexec/FPMfree_double_ompi4_noCS_SAMG_vYY.MM.V.x -nt 8  \n      the -nt option defines the maximum number of threads used for the simulation. \n  2.) Execution in MPI or HYBRID modus \n       mpirun -f $PBS_NODEFILE -r ssh -ppn 1 -n 16 $FPMexec/FPMfree_double_ompi4_noCS_SAMG_vYY.MM.V.x -nt 1  \n      the -n option defines the number of MPI processes \n      the -nt option defines the number of threads to be used on each MPI process, therefore the option \"-ppn 1\" is recommended. \n   \n  RESULTS  \n  The results of the FPM simulations are written to the folder defined in variables SAVE_path in the USER_common_variables.dat input file. \n  In general, FPM creates case-files (Ensight format). The only other option, currently, is the TECPLOT format, see SAVE_format \n\n\n\n\nList of members:\n\n\nCray  ...  special version for CRAY architecture, NO computational steering, WITH SAMG  \nMPI4  ...  FPM version compiled with IntelFortran v14.0 and MPI v4.1 (MPI3 standard), allows computational steering, NO SAMG \nMPI4_noCS  ...  FPM version compiled with IntelFortran v14.0 and MPI v4.1 (MPI3 standard), NO computational steering, NO SAMG \nMPI4_noCS_SAMG  ...  FPM version compiled with IntelFortran v14.0 and MPI v4.1 (MPI3 standard), NO computational steering, WITH SAMG \nStandard  ...  FPM version compiled with IntelFortran v13.1 and MPI v3.2 (MPI2 standard), allows computational steering, NO SAMG \nStandard_noCS  ...  FPM version compiled with IntelFortran v13.1 and MPI v3.2 (MPI2 standard), NO computational steering, NO SAMG \nStandard_noCS_SAMG  ...  FPM version compiled with IntelFortran v13.1 and MPI v3.2 (MPI2 standard), NO computational steering, WITH SAMG \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PerformanceAndControl/ParseCommandLineArguments.f90 \n\n\n\n", 
        "url": "../FPM.ProgramExecution.InstallAndRun.Linux.html", 
        "id": 1301, 
        "title": "Linux"
    }, 
    {
        "body": "\n\nCray ...  special version for CRAY architecture, NO computational steering, WITH SAMG  \n\n\n  This version \n  - allows the usage of SAMG, see especially LINEQN_solver_ScalarSystems and LINEQN_solver \n  - does not allow the usage of ComputationalSteering, as this functionality will open an additinal thread for each MPI process, which \n    might lead to performance drawbacks \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PerformanceAndControl/ParseCommandLineArguments.f90 \n\n\n\n", 
        "url": "../FPM.ProgramExecution.InstallAndRun.Linux.Cray.html", 
        "id": 1302, 
        "title": "Cray"
    }, 
    {
        "body": "\n\nMPI4 ...  FPM version compiled with IntelFortran v14.0 and MPI v4.1 (MPI3 standard), allows computational steering, NO SAMG \n\n\n  This version \n  - does not allow the usage of SAMG, see especially LINEQN_solver_ScalarSystems and LINEQN_solver \n  - however allows the usage of ComputationalSteering \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PerformanceAndControl/ParseCommandLineArguments.f90 \n\n\n\n", 
        "url": "../FPM.ProgramExecution.InstallAndRun.Linux.MPI4.html", 
        "id": 1303, 
        "title": "MPI4"
    }, 
    {
        "body": "\n\nMPI4_noCS ...  FPM version compiled with IntelFortran v14.0 and MPI v4.1 (MPI3 standard), NO computational steering, NO SAMG \n\n\n  This version \n  - does not allow the usage of SAMG, see especially LINEQN_solver_ScalarSystems and LINEQN_solver \n  - does not allow the usage of ComputationalSteering, as this functionality will open an additinal thread for each MPI process, which \n    might lead to performance drawbacks \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PerformanceAndControl/ParseCommandLineArguments.f90 \n\n\n\n", 
        "url": "../FPM.ProgramExecution.InstallAndRun.Linux.MPI4_noCS.html", 
        "id": 1304, 
        "title": "MPI4_noCS"
    }, 
    {
        "body": "\n\nMPI4_noCS_SAMG ...  FPM version compiled with IntelFortran v14.0 and MPI v4.1 (MPI3 standard), NO computational steering, WITH SAMG \n\n\n  This version \n  - allows the usage of SAMG, see especially LINEQN_solver_ScalarSystems and LINEQN_solver \n  - does not allow the usage of ComputationalSteering, as this functionality will open an additinal thread for each MPI process, which \n    might lead to performance drawbacks \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PerformanceAndControl/ParseCommandLineArguments.f90 \n\n\n\n", 
        "url": "../FPM.ProgramExecution.InstallAndRun.Linux.MPI4_noCS_SAMG.html", 
        "id": 1305, 
        "title": "MPI4_noCS_SAMG"
    }, 
    {
        "body": "\n\nStandard ...  FPM version compiled with IntelFortran v13.1 and MPI v3.2 (MPI2 standard), allows computational steering, NO SAMG \n\n\n  This version \n  - does not allow the usage of SAMG, see especially LINEQN_solver_ScalarSystems and LINEQN_solver \n  - however allows the usage of ComputationalSteering \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PerformanceAndControl/ParseCommandLineArguments.f90 \n\n\n\n", 
        "url": "../FPM.ProgramExecution.InstallAndRun.Linux.Standard.html", 
        "id": 1306, 
        "title": "Standard"
    }, 
    {
        "body": "\n\n I\n\n\n IGES_Accuracy                                                    ... \n IGES_Accuracy                                           ... \n INITDATA                                                ... \n INTEGRATION                                                      ...  Integration of the simulation results \n INTEGRATION_ReopenTimestpFilesAfterHowManyCycles                 ...  *.timestep-Files close and reopen again after how many cycles (debug reasons) \n INTEGRATION                                             ... \n IS_GPU                                                           ... \n ITERATION_EstimatedFutureStressTensor                            ... \n ITERATION_evoid                                                  ... \n ITWMESI_PressureMapping_Filter                                   ...  coupling ITWMESI filter for mapping the pressure solution to the boundary elements \n ITWMESI_PressureMapping_WeightPdyn                               ...  coupling ITWMESI weight for mapping dynamic pressure \n ITWMESI_PressureMapping_WeightPhyd                               ...  coupling ITWMESI weight for mapping hydrostatic pressure \n ITWMESI_ShearForceMapping_BasedOnStresses                        ...  coupling ITWMESI: decide whether the shear forces be projected as stress values (N/m^2) or as forces (N) \n ITWMESI_ShearForceMapping_Filter                                 ...  coupling ITWMESI filter for mapping the shear force solution to the VPS boundary elements \n ITWMESI_ShearForceMapping_Weight                                 ...  coupling ITWMESI weight for mapping the shear forces \n InDom()                                                          ...  check if a point is inside a given CLOSED domain \n Index                                                   ...  collection of all keywords used in FPMDOCU by their first letter \n Indices                                                          ...  FPM indices for simulation entities \n Indices                                                          \n Indices                                                          \n InputFiles                                                       \n InstallAndRun                                                    \n IntegrationArea                                                  ...  List of flags that mark the boundary to be integrated over \n\n\n\n\n", 
        "url": "../Index. I.html", 
        "id": 1307, 
        "title": " I"
    }, 
    {
        "body": "\n\nStandard_noCS ...  FPM version compiled with IntelFortran v13.1 and MPI v3.2 (MPI2 standard), NO computational steering, NO SAMG \n\n\n  This version \n  - does not allow the usage of SAMG, see especially LINEQN_solver_ScalarSystems and LINEQN_solver \n  - does not allow the usage of ComputationalSteering, as this functionality will open an additinal thread for each MPI process, which \n    might lead to performance drawbacks \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PerformanceAndControl/ParseCommandLineArguments.f90 \n\n\n\n", 
        "url": "../FPM.ProgramExecution.InstallAndRun.Linux.Standard_noCS.html", 
        "id": 1308, 
        "title": "Standard_noCS"
    }, 
    {
        "body": "\n\nStandard_noCS_SAMG ...  FPM version compiled with IntelFortran v13.1 and MPI v3.2 (MPI2 standard), NO computational steering, WITH SAMG \n\n\n  This version \n  - allows the usage of SAMG, see especially LINEQN_solver_ScalarSystems and LINEQN_solver \n  - does not allow the usage of ComputationalSteering, as this functionality will open an additinal thread for each MPI process, which \n    might lead to performance drawbacks \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/PerformanceAndControl/ParseCommandLineArguments.f90 \n\n\n\n", 
        "url": "../FPM.ProgramExecution.InstallAndRun.Linux.Standard_noCS_SAMG.html", 
        "id": 1309, 
        "title": "Standard_noCS_SAMG"
    }, 
    {
        "body": "\n\nExcludeCriticalNeighbors ...  Exclude critical neighbors from the neighborlists of FPM-points \n\n\n  Exclusion of critical neighbors is essential if the geometry contains thin parts (blades, ribbons, etc.) whose diameter \n  is much smaller than the local SmoothingLength. \n   \n  There are several ideas how to achieve this (see items below).  See also NEIGHBOR_FilterMethod, this parameter controls the choice of \n  the selection methods chosen. \n   \n   \n\n\n\n\nList of members:\n\n\nGeometryBased  ...  Exclude critical neighbors based on the given, triangulated geometry \nReplugNeighbors  ...  Replug neighbor FPM-points by passon-analysis \nNormalBased  ...  Exclude critical neighbors from the neighborlists of FPM boundary points \nPositionBased  ...  Exclude critical neighbors from the neighborlists of FPM-points \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Core/PointcloudOrganization/CON_/CON_Check_2.f90 \n\n\n\n", 
        "url": "../FPM.Solvers.Geometry.ExcludeCriticalNeighbors.html", 
        "id": 1310, 
        "title": "ExcludeCriticalNeighbors"
    }, 
    {
        "body": "\n\nGeometryBased ...  Exclude critical neighbors based on the given, triangulated geometry \n\n\n  1.) The picture shows the exclusion algorithm based on the geometry. \n  IF the segment between two FPM points passes through one of the given boundary triangles, then they are excluded as neighbors. \n  See the picture below. \n   \n   \n   \n  2.) Due to high computational effort, the method above might come with a very fine triangular resolution of the boundary, \n  recently this algorithm switched to an approximative version. Here, all boundary points form discs about \n  their particular position and the given normal. The radius of the disc is 0.3*SmoothingLength. \n  The collection of discs forms an approximation of the given rigid boundary. See the picture below. \n   \n   \n   \n  Two FPM-points are excluded as neighbors, IF their connecting segment passes through one such disc. \n   \n  Both algorithms shown here might lead to the situation, that we exclude too many neighbors from each other, especially at convex boundaries. \n  A solution to this dilemma is given by the ReplugNeighbors algorithm. \n   \n  See NEIGHBOR_FilterMethod in particular. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Core/FillingRoutines/PST_SelectValidStencilParticles.f90 \n\n\n\n", 
        "url": "../FPM.Solvers.Geometry.ExcludeCriticalNeighbors.GeometryBased___ECN___.html", 
        "id": 1311, 
        "title": "GeometryBased___ECN___"
    }, 
    {
        "body": "\n\nReplugNeighbors ...  Replug neighbor FPM-points by passon-analysis \n\n\n  If an FPM-point was thrown out from the neighborhood list by the GeometryBased algorithm, then \n  it might be plugges back due to the following passon or connectivity idea: \n   \n  After the GeometryBased algorithm is completed for all FPM points, two FPM points might be plugged back as neighbors \n  IF both find the same (third) point in their remaining neighorhood list. See the picture below. \n   \n   \n   \n  See NEIGHBOR_FilterMethod in particular. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Core/PointcloudOrganization/CON_/CON_Check_2.f90 \n\n\n\n", 
        "url": "../FPM.Solvers.Geometry.ExcludeCriticalNeighbors.ReplugNeighbors___ECN___.html", 
        "id": 1312, 
        "title": "ReplugNeighbors___ECN___"
    }, 
    {
        "body": "\n\nNormalBased ...  Exclude critical neighbors from the neighborlists of FPM boundary points \n\n\n  The picture shows the most simple exclusion algorithms chosen. It is a purely algebraic constraint. \n   \n  If an FPM point is at the boundary, it is not allowed to see neighbors which are in a ball \"behind the normal\". \n   \n   \n   \n  See NEIGHBOR_FilterMethod in particular. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Core/PointcloudOrganization/ORGANIZE/ORGANIZE_NeighborParticleIsCritical.f90 \n\n\n\n", 
        "url": "../FPM.Solvers.Geometry.ExcludeCriticalNeighbors.NormalBased___ECN___.html", 
        "id": 1313, 
        "title": "NormalBased___ECN___"
    }, 
    {
        "body": "\n\nPositionBased ...  Exclude critical neighbors from the neighborlists of FPM-points \n\n\n  The picture shows the exclusion algorithm based on the position, boundary distance and boundary normal of two FPM points. \n  This constraint is purely algebraic. \n   \n  Two FPM-points i and j are excluded from each other if they meet the following position-normal-constraint. \n   \n  OR \n   \n   \n  See NEIGHBOR_FilterMethod in particular. \n  \n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Core/PointcloudOrganization/ORGANIZE/ORGANIZE_NeighborParticleIsCritical.f90 \n\n\n\n", 
        "url": "../FPM.Solvers.Geometry.ExcludeCriticalNeighbors.PositionBased___ECN___.html", 
        "id": 1314, 
        "title": "PositionBased___ECN___"
    }, 
    {
        "body": "\n\nFLIQUID ...  Implicit solver for incompressible and weakly compressible flow phenomena \n\n\n\n\n\nList of members:\n\n\nAlgorithms  ... Algorithms\nEquationsToSolve  ...  differential equations to be solved by FPM \nScheme  ... Scheme\n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Solver/BasicSolver/Incompressible/F_of_t_and_Y_LIQUID_3.f90 \n\n\n\n", 
        "url": "../FPM.Solvers.Numerics.FLIQUID.html", 
        "id": 1315, 
        "title": "FLIQUID"
    }, 
    {
        "body": "\n\nAlgorithms\n\n\n\n\n\nList of members:\n\n\nBubbleAlgorithm  ...  Bubble Algorithm in order to capture internal pressure of untrapped air/gas \nVelocityAlgorithm  ... VelocityAlgorithm\nDynamicPressureAlgorithm  ... DynamicPressureAlgorithm\nCorrectionPressure  ...  compute the correction pressure according to a Chorin-like correction ansatz \nHydrostaticPressureAlgorithm  ... HydrostaticPressureAlgorithm\nTemperatureAlgorithm  ... TemperatureAlgorithm\nStressTensorAlgorithm  ...  update the stress tensor towards the next time level \n\n\n\n\n\n", 
        "url": "../FPM.Solvers.Numerics.FLIQUID.Algorithms.html", 
        "id": 1316, 
        "title": "Algorithms"
    }, 
    {
        "body": "\n\nBubbleAlgorithm ...  Bubble Algorithm in order to capture internal pressure of untrapped air/gas \n\n\n  FPM searches for completely enclosed partitions of a free surface, or free surface in conjunction with inactive \n  wall particles. The results are saved in the variables %ind_bndBubble%, %ind_volBubble%, and %ind_pBubble%. \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Core/PointcloudOrganization/ORGANIZE/ORGANIZE_ClusteringOfFreeSurface.f90 \n\n\n\n", 
        "url": "../FPM.Solvers.Numerics.FLIQUID.Algorithms.BubbleAlgorithm.html", 
        "id": 1317, 
        "title": "BubbleAlgorithm"
    }, 
    {
        "body": "\n\nVelocityAlgorithm\n\n\n  This algorithm solves the conservation of momentum stated in EquationsToSolve. \n   \n   \n   \n   \n \n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/GeneralAlgorithms/LinearSolvers/solve_V.f90 \n\n\n\n", 
        "url": "../FPM.Solvers.Numerics.FLIQUID.Algorithms.VelocityAlgorithm.html", 
        "id": 1318, 
        "title": "VelocityAlgorithm"
    }, 
    {
        "body": "\n\nDynamicPressureAlgorithm\n\n\n\n\n\nList of members:\n\n\nClassicalDPA  ...  compute the dynamic(consistent) pressure as a (postprocessing) result to the current velocity field \nAlternativeDPA  ...  compute the consistent pressure as a (postprocessing) result to the current velocity field \n\n\n\n\n\n", 
        "url": "../FPM.Solvers.Numerics.FLIQUID.Algorithms.DynamicPressureAlgorithm.html", 
        "id": 1319, 
        "title": "DynamicPressureAlgorithm"
    }, 
    {
        "body": "\n\nClassicalDPA ...  compute the dynamic(consistent) pressure as a (postprocessing) result to the current velocity field \n\n\n  This algorithm is invoked if the first digit of the variable FLIQUID_ConsistentPressure_Version is put to 1. \n   \n  According to DynamicPressure, the precise model for the dynamic pressure is \n   \n  Which, in another way, is \n   \n  Reorganization (step by step) yields \n   \n  And finally \n   \n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Solver/BasicSolver/Incompressible/FLIQUID_ConsistentPressure.f90 \n\n\n\n", 
        "url": "../FPM.Solvers.Numerics.FLIQUID.Algorithms.DynamicPressureAlgorithm.ClassicalDPA.html", 
        "id": 1320, 
        "title": "ClassicalDPA"
    }, 
    {
        "body": "\n\nAlternativeDPA ...  compute the consistent pressure as a (postprocessing) result to the current velocity field \n\n\n   \n  This algorithm is invoked if the first digit of the variable FLIQUID_ConsistentPressure_Version is put to 2. \n   \n   \n  Short derivation/motivation: \n   \n  Let us again consider the equation of momentum \n  \t \n  and isolate for the target dynamic pressure gradient \n   \n  For simplicity, we now omit the suffix >>>dyn<<<. \n  Between two FPM-points  and  we can compute the intermediate pressure value by \n   \n  So, we can write \n   \n  or even better, in order to have full symmetry, \n   \n  For each FPM point  we have as many equations of this type as there are neighbour points, which means we have an \n  overdetermined system. However, we could require \n   \n  If we choose , then we have a nice similarity to the classical ansatz, if we also remember, that  \n  This set forms a linear system of equations for the unknowns  . \n   \n  This system can be enhanced by locally choosing a vector  and apply this to the equation of momentum, i.e. \n   \n  Discretize this equation in the FPM sense, i.e. \n   \n  In fact, both equations aim to give an answer to the pressure. So, we could just add the enhancement, such that the final linear system of equations is \n   \n  Useful choices of the vector  could be the velocity, the direction of the pressure gradient itself, or the directions perpendicular to the pressure gradient. We have implemented a collection in the sense \n   \n  where the last two vectors  are perpendicular to the pressure gradient . \n   \n  The choice of  can be controlled by the user: \n   -> adjust FLIQUID_ConsistentPressure_CoeffMM \n   -> adjust FLIQUID_ConsistentPressure_CoeffNN \n   -> adjust FLIQUID_ConsistentPressure_CoeffTT (in fact, from a and b, FPM computes a random vector perpendicular to the gradient of pressure) \n   -> adjust FLIQUID_ConsistentPressure_CoeffTT \n                       \n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Solver/BasicSolver/Incompressible/FLIQUID_ConsistentPressure_2.f90 \n\n\n\n", 
        "url": "../FPM.Solvers.Numerics.FLIQUID.Algorithms.DynamicPressureAlgorithm.AlternativeDPA.html", 
        "id": 1321, 
        "title": "AlternativeDPA"
    }, 
    {
        "body": "\n\n J\n\n\n JohnsonCook                                                      ...  Johnson-Cook model \n\n\n\n\n", 
        "url": "../Index. J.html", 
        "id": 1322, 
        "title": " J"
    }, 
    {
        "body": "\n\nCorrectionPressure ...  compute the correction pressure according to a Chorin-like correction ansatz \n\n\n  Let us suppose we have a velocity field  that stems from the numerical integration of the \n  momentum equation (see EquationsToSOlve), i.e. we have computed \n   \n  The resulting velocity field  does most probably not provide the correct value of \n  divergence of velocity  . Let us suppose there is a correction to the pressure \n  that exactly leads to the correct divergence, that is \n   \n  With the presumption that  has the correct value. In order to find the correction \n  pressure  we subtract the two equations from one another, that is \n   \n  Written in another way, we have \n   \n  For incompressible problems with constant viscosity, we can simplify \n   \n   \n  The correction pressure stems from the simplified correction ansatz of a given velocity field (marked by tilde) towards \n  a velocity field with a desired divergence of velocity. \n   \n  By application of the divergence operator from left, we obtain \n   \n  The desired divergence of the velocity is depending on the compressibility of the fluid as well as on temporal changes of the density due to other effects \n  such as chemical reaction, expansion due to heating, etc. \n   \n  Derivation of this term is found in DesiredAndNominalDivergenceOfVelocity. \n   \n  Having a formulation for the divergence of velocity, the equation to be solved for the correction pressure is \n   \n  which numerically is \n   \n              \n\n\n\nList of members:\n\n\nDesiredAndNominalDivergenceOfVelocity  ...  derive a formulation for the desired divergence of velocity \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Solver/BasicSolver/Incompressible/FLIQUID_CorrectionPressure.f90 \n\n\n\n", 
        "url": "../FPM.Solvers.Numerics.FLIQUID.Algorithms.CorrectionPressure.html", 
        "id": 1323, 
        "title": "CorrectionPressure"
    }, 
    {
        "body": "\n\nDesiredAndNominalDivergenceOfVelocity ...  derive a formulation for the desired divergence of velocity \n\n\n  From the mass conservation (see EquationsToSolve) we can derive \n   \n  The term  represents the compressibility of the fluid. The term is saved in %ind_DiagPcorr%. \n  Finally, the definition of the nominal (compression free) divergence of velocity is \n   \n   \n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Solver/BasicSolver/Incompressible/FLIQUID_CorrectionPressure.f90 \n\n\n\n", 
        "url": "../FPM.Solvers.Numerics.FLIQUID.Algorithms.CorrectionPressure.DesiredAndNominalDivergenceOfVelocity.html", 
        "id": 1324, 
        "title": "DesiredAndNominalDivergenceOfVelocity"
    }, 
    {
        "body": "\n\nHydrostaticPressureAlgorithm\n\n\n  The hydrostatic pressure algortihm solves the poisson equation derived in DerivePoissonEquationForPressure. \n   \n  The numerical representation of the equation is \n   \n   \n   FPMDOCUTODO: comments on boundary conditions  \n \n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Solver/BasicSolver/Incompressible/FLIQUID_Phydrostatic.f90 \n\n\n\n", 
        "url": "../FPM.Solvers.Numerics.FLIQUID.Algorithms.HydrostaticPressureAlgorithm.html", 
        "id": 1325, 
        "title": "HydrostaticPressureAlgorithm"
    }, 
    {
        "body": "\n\nTemperatureAlgorithm\n\n\n  This algorithm solves the conservation of energy stated in EquationsToSolve. \n   \n   \n   \n   \n \n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Solver/BasicSolver/Incompressible/FLIQUID_Temperature.f90 \n\n\n\n", 
        "url": "../FPM.Solvers.Numerics.FLIQUID.Algorithms.TemperatureAlgorithm.html", 
        "id": 1326, 
        "title": "TemperatureAlgorithm"
    }, 
    {
        "body": "\n\nStressTensorAlgorithm ...  update the stress tensor towards the next time level \n\n\n  We assume, that during the time step, the values of velocity and shear modulus do not change. \n  In fact, we numerically integrate \n   \n  where  is an antisymmetric rotation matrix. \n  For isotropic materials, i.e. for scalar values of mue, we find an analytical solution to this problem. \n  See  DOCUMATH_StressTensor_TimeIntegration.pdf  for a detailled discussion of \n  the stress tensor integration. \n   \n   \n   Remark for applications with yield stress (see mue,  ):  \n   \n  Here, we have the numerical difficulty, that at reaching the yield stress, the effective \n  shear modulus decreases considerably. That means, to possible inner stress gradients (leading to acceleration), \n  there is only small material resistance. Numerically, we would like to avoid sudden velocity increase/jumps \n  due to this fact. \n  A small stabilty analysis of the VelocityAlgorithm, considering only the terms of  and the \n  effective viscous stresses governed by , yields the following: if requiering only small changes of velocity, then \n  we find \n   \n  So, it is maybe a good idea to require the numerics to always provide \n   \n  with  possibly small, but big enough to keep stability. \n  If the effective viscosity is only made up by the shear modulus, we have a resulting condition \n   \n  In other words: \n   \n  As a simplifying approach, we can assume that  and  have the same/comparable size. \n  Then, the equation above simplifies to \n   \n   There is ongoing research on this topic.  \n   \n              \n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Solver/Models/StressTensor/StressTensor.f90 \n\n\n\n", 
        "url": "../FPM.Solvers.Numerics.FLIQUID.Algorithms.StressTensorAlgorithm.html", 
        "id": 1327, 
        "title": "StressTensorAlgorithm"
    }, 
    {
        "body": "\n\nEquationsToSolve ...  differential equations to be solved by FPM \n\n\n  Conservation of mass: \n   \n   \n  Conservation of momentum: \n   \n   \n  Conservation of energy \n   \n   \n  For the solution algorithm it is important to be aware of the following two remarks. \n  DeriveDivergenceOfVelocity \n  DerivePoissonEquationForPressure \n      \n\n\n\nList of members:\n\n\nDerivePoissonEquationForPressure  ...  how to compute the pressure from the equation of momentum \nDeriveDivergenceOfVelocity  ...  how to compute the divergence of velocity from mass conservation \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Solver/BasicSolver/Incompressible/F_of_t_and_Y_LIQUID_3.f90 \n\n\n\n", 
        "url": "../FPM.Solvers.Numerics.FLIQUID.EquationsToSolve.html", 
        "id": 1328, 
        "title": "EquationsToSolve"
    }, 
    {
        "body": "\n\nDerivePoissonEquationForPressure ...  how to compute the pressure from the equation of momentum \n\n\n  The Poisson equation for the pressure can be derived by application of the divergence-operator to the equation of momentum: \n   \n  That gives \n   \n  using the definitions \n   \n   \n   \n  More simplifications can achieved by defining \n   \n   \n   \n   \n  That means \n   \n   \n  In a numerical sense, this is \n   \n  Splitting this equation into a hydrostatic and a dynamic part yields \n   \n   \n  The different parts of pressure are more precisely described HydrostaticPressure and DynamicPressure . \n          \n\n\n\nList of members:\n\n\nDynamicPressure  ...  dynamic pressure derived from momentum equation \nHydrostaticPressure  ...  hydrostatic pressure derived from momentum equation \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Solver/BasicSolver/Incompressible/F_of_t_and_Y_LIQUID_3.f90 \n\n\n\n", 
        "url": "../FPM.Solvers.Numerics.FLIQUID.EquationsToSolve.DerivePoissonEquationForPressure.html", 
        "id": 1329, 
        "title": "DerivePoissonEquationForPressure"
    }, 
    {
        "body": "\n\nDynamicPressure ...  dynamic pressure derived from momentum equation \n\n\n  This pressure only occurs (different from zero) if the fluid is in motion. Therefore it represents the dynamic forces or compression forces. \n  Its basic equation stems from the cosiderations in  DerivePoissonEquationForPressure and is given by \n   \n  We take into accout equation (1.10), hence we obtain \n   \n  and after sorting terms, the final representation of the dynamic pressure is \n   \n   \n  \n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Solver/BasicSolver/Incompressible/FLIQUID_ConsistentPressure.f90 \n\n\n\n", 
        "url": "../FPM.Solvers.Numerics.FLIQUID.EquationsToSolve.DerivePoissonEquationForPressure.DynamicPressure.html", 
        "id": 1330, 
        "title": "DynamicPressure"
    }, 
    {
        "body": "\n\nHydrostaticPressure ...  hydrostatic pressure derived from momentum equation \n\n\n   \n  The basic equation for the hydrostatic pressure is: \n   \n   \n  This pressure might be different from zero even if there is no motion of the fluid. \n  It might be due to gravity (depth pressure), internal forces (elasticity), etc. \n   \n  We represent the compression part   by the expressions found in DeriveDivergenceOfVelocity: \n   \n   \n  the final equation is \n   \n  and its numerical discretization is found in HydrostaticPressureAlgorithm . \n    \n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Solver/BasicSolver/Incompressible/FLIQUID_Phydrostatic.f90 \n\n\n\n", 
        "url": "../FPM.Solvers.Numerics.FLIQUID.EquationsToSolve.DerivePoissonEquationForPressure.HydrostaticPressure.html", 
        "id": 1331, 
        "title": "HydrostaticPressure"
    }, 
    {
        "body": "\n\nDeriveDivergenceOfVelocity ...  how to compute the divergence of velocity from mass conservation \n\n\n  The divergence of the velocity can be computed by considering the equation of mass conservation: \n   \n  Out of this, it follows \n   \n  For numerical reasons it is preferable to define the intermediate density \n   \n  That means the density as it is given after the computation of the velocity, hydrostatic and dynamic pressure, but before the computation of all additional variables . \n  Hence, we rewrite the formulation of the divergence of velocity by \n   \n  Splitting this equation into a hydrostatic and a dynamic part yields \n   \n  Thus, the definitions for hydrostatic and dynamic compression rates follow as \n   \n  and \n   \n  where we have \n   \n  Remark: the term  represents the compression/expansion of the material that is independent of the pressure, i.e. compression due to time, reaction kinetics, temperature change etc. \n  \n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Solver/BasicSolver/Incompressible/F_of_t_and_Y_LIQUID_3.f90 \n\n\n\n", 
        "url": "../FPM.Solvers.Numerics.FLIQUID.EquationsToSolve.DeriveDivergenceOfVelocity.html", 
        "id": 1332, 
        "title": "DeriveDivergenceOfVelocity"
    }, 
    {
        "body": "\n\n K\n\n\n KOP                                                     ... \n KindOfProblem                                           ... \n\n\n\n\n", 
        "url": "../Index. K.html", 
        "id": 1333, 
        "title": " K"
    }, 
    {
        "body": "\n\n L\n\n\n LINEQN_scaling                                                   ...  choose the way how to scale/normalize the linear systems (so far implemented only for the SAMG-case) \n LINEQN_scaling                                          ... \n LINEQN_solver                                                    ...  linear solver to be used for the coupled vp- or v-- system \n LINEQN_solver_ScalarSystems                                      ...  linear solver to be used for the scalar systems like pressure, temperature, etc. \n LINEQN_solver_ScalarSystems                             ... \n LINEQN_solver                                           ... \n LIQUID                                                ...  indices for the implicit (incompressible/weakly compressible) solver \n LaunchRestart                                                    ...  launch FPM on the basis of a restart file \n Linux                                                            ...  how to install and run FPM under LINUX \n LocalVariables                                                   \n Loops                                                            ...  loop over a block lines in the input file \n\n\n\n\n", 
        "url": "../Index. L.html", 
        "id": 1334, 
        "title": " L"
    }, 
    {
        "body": "\n\n M\n\n\n MONITORPOINTS                                                    ...  create monitor points due given conditions \n MONITORPOINTS_CREATION                                           ...  create monitor points due given conditions \n MONITORPOINTS_CREATION_FunctionEvaluation                        ...  provide dedicated function values at creation time to the monitor point \n MONITORPOINTS_CREATION_FunctionEvaluation               ... \n MONITORPOINTS_CREATION                                  ... \n MONITORPOINTS_DELETION                                           ...  delete an existing monitor point by a set of conditions \n MONITORPOINTS_DELETION                                  ... \n MONITORPOINTS_STOP                                               ...  delete an existing monitor point by a set of conditions \n MONITORPOINTS_STOP                                      ... \n MOVE                                                             ...  move parts of the boundary by explicit statement \n MOVE                                                    ... \n MPI4                                                             ...  FPM version compiled with IntelFortran v14.0 and MPI v4.1 (MPI3 standard), allows computational steering, NO SAMG \n MPI4_noCS                                                        ...  FPM version compiled with IntelFortran v14.0 and MPI v4.1 (MPI3 standard), NO computational steering, NO SAMG \n MPI4_noCS_SAMG                                                   ...  FPM version compiled with IntelFortran v14.0 and MPI v4.1 (MPI3 standard), NO computational steering, WITH SAMG \n MPI_CommunicationMethod                                          ... \n MPI_ExcludeDirectionFromBisection                                ... \n MULTIGRID_CutOff                                                 ... \n MaximumNumberOfPointsDuringComputation                           ... \n MeanNumberDaughterDroplets                              ... \n MxV                                                              ...  split MxV into several subroutines \n MxV_prepare                                                      ...  split MxV_prepare into several subroutines and \n\n\n\n\n", 
        "url": "../Index. M.html", 
        "id": 1335, 
        "title": " M"
    }, 
    {
        "body": "\n\n N\n\n\n NEIGHBOR_FilterMethod                                            ...  chose how to exclude neighbors from FPM-points at critical geometry parts \n NEIGHBOR_filter_level                                            ... \n N_addvar                                                         ...  definition of the number of %ind_addvar% to be used in the project \n NamesOfStopWatches                                               ...  currently implemented stop watches \n NavigationFeatures                                               ...  features which might help for navigating the FPMDOCU pages \n Nb_InflowLayers                                                  \n NormalBased                                             ...  Exclude critical neighbors from the neighborlists of FPM boundary points \n NumberOfDaughterParticles                               ... \n NumericalControl                                                 \n Numerics                                                         \n\n\n\n\n", 
        "url": "../Index. N.html", 
        "id": 1336, 
        "title": " N"
    }, 
    {
        "body": "\n\n O\n\n\n OPTIMIZATION_InitialGuessOfVi_Fast                               ... \n ORGANIZE_CheckAllPointsForFreeSurfaceUntilTimeStep               ... \n ORGANIZE_CheckPointsAtFS_PerformPreCheck                         ...  invoke additional algorithm in order to find candidates for free surface detection \n ORGANIZE_DevelopperCheck_Version                                 ...  version of the debugging routine ORGANIZE_DevelopperCheck \n ORGANIZE_DevelopperCheck{}                                       ...  call the FPM subroutine ORGANIZE_DevelopperCheck \n ORGANIZE_ForceInsideCheckForAllParticles                         ... \n ORGANIZE_ForceInsideCheckForNewParticles                         ... \n ORGANIZE_ForceTouchCheckAtWalls                                  ... \n ORGANIZE_PSTOneReductionStep_Version                             ...  version how to reduce FPM points if they become to close to each other \n ORGANIZE_PSTOneRefillStep3_UseFromWhichTime                      ...  use the new implementation of PST_OneRefillStep_3 from which time \n ORGANIZE_QualityCheck_ListNbOfNeighbors                          ...  number of neighbors per particle for whcih the quality check has to be performed \n ORGANIZE_ReducedFillingOfWalls                                   ...  allow reduced filling of boundaries marked as walls \n ORGANIZE_ReducedFillingOfWallsIgnoreNofillForStartup             ... \n ORGANIZE_RefillOnlyForActiveBoundaryParticles                    ...  FPM-point refilling procedure along the boundary triggered only for active boundary particles \n ORGANIZE_ToleranceForGapAnalysisOfRegularBoundary                ... \n ORGANIZE_USER_update_boundary_particles_Version                  ...  version of USER_update_boundary_particles.f90 to be used \n OneArgument                                                      ...  real function in FPM-equations with ONE parameter/argument \n Operators                                                        ...  Standard math operators \n\n\n\n\n", 
        "url": "../Index. O.html", 
        "id": 1337, 
        "title": " O"
    }, 
    {
        "body": "\n\n P\n\n\n PARTPHASE_elasticity                                             ... \n PARTPHASE_friction                                               ... \n PARTPHASE_wall_friction                                          ... \n PBE_Developement                                        ... \n PBE_Model_Alpha_Max                                     ... \n PBE_Model_Alpha_Min                                     ... \n PBE_Model_ContinuousDragSwitch                          ... \n PBE_Model_DiffusionSwitch                               ... \n PBE_Model_E_DropletSource                               ... \n PBE_Model_KEPS_DropletVisibilitySwitch                  ... \n PBE_Model_K_DropletSource                               ... \n PBE_Model_Vmax                                          ... \n PBE_Model_Vmin                                          ... \n PBE_SolverSetup                                         ... \n PHASE_distinction                                                ...  invoke detection of interface connections \n PHASE_distinction                                       ...  invoke detection of interface connections between boundary points \n POINTCLOUD_SetInitialPointToBE{}                                 ...  call the FPM subroutine POINTCLOUD_SetInitialPointToBE \n POPBAL                                                           ...  Indices for the population balance solver \n POSTBND                                                 ... \n POSTVOL                                                 ... \n ParallelReadingOfSignalFile                                      ...  communication with running FPM-job by separate (parallel)  thread \n ParticlePhase                                           ... \n PerformanceDistancePointToTriangle                               ...  performance for distance point-to-triangle computation \n PhysicalProperties                                               ...  define physical properties like density, viscosity, surface tension, \n PointDsplMethod                                                  ...  (Experimental) Choice among different ways to move points in Lagrangian framework \n PointDsplMethod                                         ... \n PositionBased                                           ...  Exclude critical neighbors from the neighborlists of FPM-points \n ProgramExecution                                                 \n Project                                                          ...  purpose of FPMDOCU \n PureElastic                                                      ...  give value for the elastic modulus \n\n\n\n\n", 
        "url": "../Index. P.html", 
        "id": 1338, 
        "title": " P"
    }, 
    {
        "body": "\n\n Q\n\n\n QUICKVIEW_SaveHowOften                                           ... \n QUICKVIEW_VariableList                                           ... \n QUICKVIEW_Version                                                ... \n QUICKVIEW_WhichParticles                                         ... \n\n\n\n\n", 
        "url": "../Index. Q.html", 
        "id": 1339, 
        "title": " Q"
    }, 
    {
        "body": "\n\n R\n\n\n RESTART                                                          \n RasterCircleX                                                    ...  computes a rectangular raster of squares of size r1*r1  of a circle that has radius r2 and returns the X coordinate of a random midpoint of one of the squares that is fully contained in the circle \n Rconst                                                  ... \n ReadInPointCloud                                                 ...  read in already existing point cloud from file \n Refactoring                                                      \n RelaxationTime                                          ... \n Releases                                                     ...  information on the MESHFREE releases \n RemeshBoundary_OrientationBuiltInComponents             ... \n RemeshBoundary_RemoveTinyClusters                       ... \n RepairGeometry                                                   ... \n RepairGeometry                                          ... \n ReplugNeighbors                                         ...  Replug neighbor FPM-points by passon-analysis \n RestartStepSize                                                  ...  define after how many time cycles a restart file has to be generated \n RestartStepSize                                         ... \n Restart_AdditionalBE                                    ... \n Restart_Copying                                         ... \n Restart_ToBeRemoved                                     ... \n Restart                                                 ... \n Results                                                          ...  save computational results in different formats \n Rewriting                                                        ...  step by step rewriting of parts of the organization of the point cloud \n RightHandSideExpression                                          ...  syntax for right hand side expressions in USER_common_variables \n RunTimeTools                                                     \n\n\n\n\n", 
        "url": "../Index. R.html", 
        "id": 1340, 
        "title": " R"
    }, 
    {
        "body": "\n\n S\n\n\n SAVE_ABAQUS                                             ... \n SAVE_BE_MONITOR_ITEM                                             ...  monitor item to be saved per element for visualization \n SAVE_BE_MONITOR_ITEM                                    ... \n SAVE_CoordinateSystem                                   ... \n SAVE_ITEM                                                        ...  item to be saved for visualization \n SAVE_ITEM                                               ... \n SAVE_MONITOR_ITEM                                                ...  monitor item to be saved for visualization \n SAVE_MONITOR_ITEM                                       ... \n SAVE_PID_ITEM                                                    ...  save computational results in different formats \n SAVE_PID_ITEM                                           ... \n SAVE_QUALITYCHECK_ITEM                                  ... \n SAVE_QuickView                                                   ... \n SAVE_ShareScalars                                       ... \n SAVE_atEndOfTimestep                                             ...  Choose to save data for visualization at the end of time-steps (instead of at the start) \n SAVE_atEndOfTimestep                                    ... \n SAVE_choose_meth                                                 ...  save computational results in different formats \n SAVE_choose_meth                                        ... \n SAVE_file                                                        ...  file name for the results \n SAVE_file                                               ... \n SAVE_first                                                       ...  control first save \n SAVE_first                                              ... \n SAVE_format                                                      ...  format to save simulation data \n SAVE_format                                             ... \n SAVE_interval                                                    ...  control saving frequency \n SAVE_interval                                           ... \n SAVE_intervall                                                   ...  consecutively save after a number of time cycles or a given real time interval \n SAVE_intervall                                          ... \n SAVE_list_of_var                                        ... \n SAVE_path                                                        ...  absolute or relative path for the simulation results \n SAVE_path                                               ... \n SCAN_ClustersOfConnectivity                                      ...  switch on cluster checking of FPM pointcloud by neighborhood connectivity \n SHALLOWWATER                                                     ...  Solver for shallow water equations \n SHALLOWWATER                                        ...  Indices for the shallow water solver \n SIGNAL_LaunchComputationalSteering                               ...  launch the computational steering process at FPM startup, i.e. control FPM by the SIGNAL file \n SMOOTH_LENGTH                                                    ...  provide a function of smoothing length \n SMOOTH_LENGTH                                           ... \n SOLVEV_N_iterations                                              ... \n SPAI_eps                                                         ... \n SPAI_first                                                       ... \n SPAI_maxentries                                                  ... \n SPAI_maxiter                                                     ... \n SPAI_precond_method                                              ... \n SPAI_precond_preparation                                         ... \n SPAI_restart                                                     ... \n SPAI_smax                                                        ... \n SPM_N_iterations                                                 ... \n SPM_Regularization_Epsilon                                       ...  adjust 
numerical parameter epsilon for the matrix regularizations \n SPM_Regularization_Type                                          ...  regularization type if all boundaries are Neumann-type \n STRESSTENSOR_NumberSubcycles                                     ... \n STRESSTENSOR_Variante                                            ... \n STRESSTENSOR_Variante_Factor                                     ... \n STRESSTENSOR_Variante_Factor                            ... \n STRESSTENSOR_Variante                                   ... \n SURFACETENSION_FacSmooth                                         ... \n SURFACETENSION_NbSmooth                                          ... \n SaveRestartOnInit                                                ... \n Saving                                                           \n Scheme                                                           \n Selection                                                        ...  Switch/Case-type selection statement \n SequentialReadingOfSignalFile                                    ...  communication with running FPM-job by sequential reading of SIGNAL-file \n SimCut                                                           ... \n SmoothingLength                                                  ...  define the smoothing length by a set of commands \n Solvers                                                          \n Standard                                                         ...  FPM version compiled with IntelFortran v13.1 and MPI v3.2 (MPI2 standard), allows computational steering, NO SAMG \n Standard_noCS                                                    ...  FPM version compiled with IntelFortran v13.1 and MPI v3.2 (MPI2 standard), NO computational steering, NO SAMG \n Standard_noCS_SAMG                                               ...  FPM version compiled with IntelFortran v13.1 and MPI v3.2 (MPI2 standard), NO computational steering, WITH SAMG \n StressTensorAlgorithm                                            ...  update the stress tensor towards the next time level \n SurfaceTesselationActiveBoundary_cRadius                         ...  radius of the basic disc for the surface tesselation cells on active boundary, including free surface, excluding inactive points \n SurfaceTesselationRegularBoundary_cRadius                        ...  radius of the basic disc for the surface tesselation cells on regular boundary \n Syntax                                              ...  syntax of the FPMDOCU statements \n\n\n\n\n", 
        "url": "../Index. S.html", 
        "id": 1341, 
        "title": " S"
    }, 
    {
        "body": "\n\n T\n\n\n TECPLOT                                                          ...  computation results in TECPLOT format \n TIMECHECK                                                        ...  measure performance (simulation time) for different tasks of FPM \n TODOs                                                            \n TODOs                                                            \n TOUCH                                                   ... \n TRANSPORT                                                        ...  FPM indices for TRANSPORT, i.e. solving hyperbolic problems \n T_fin                                                            ... \n T_st                                                             ... \n TankSloshingApplication                                          ...  how to install and run FPM sloshing tool under WINDOWS \n TaylorQuinneyCoefficient                                ... \n TemperatureAlgorithm                                             \n Tend                                                    ... \n TextDecoration                                                   ...  give colors of emphasis on the text \n TimeIntegration_N_final                                 ... \n Tstart                                                  ... \n TwoArguments                                                     ...  real function in FPM-equations with TWO parameter/argument \n\n\n\n\n", 
        "url": "../Index. T.html", 
        "id": 1342, 
        "title": " T"
    }, 
    {
        "body": "\n\n U\n\n\n UCV_ConsistencyCheck                                             ... \n USER_boundary_conditions_LIQUID_3                                ...  what can we do to make this more easy \n USER_common_variables                                            ...  main input file for defining all simulation data, boundary conditions, material parameters, geometrie, etc. \n USER_curve_interpol_cache                                        ...  turn on caching in USER_curve_interpol_3 \n USER_h_funct                                                     ...  choose either constant, locally variable, or adaptive smoothing length \n USER_h_funct                                            ... \n USER_h_max                                                       ...  maximum allowed smoothing length \n USER_h_max                                              ... \n USER_h_min                                                       ...  minimum allowed smoothing length \n USER_h_min                                              ... \n UseBoxSystemVersion                                              ...  force FPM to use a certain tree algorithm for the FPM-point neighbor search \n\n\n\n\n", 
        "url": "../Index. U.html", 
        "id": 1343, 
        "title": " U"
    }, 
    {
        "body": "\n\n V\n\n\n V00_SmoothDivV                                                   ...  Chorin projection: smooth the local values of div(v) before going into the correction pressure computation \n V00_SmoothDivV                                          ... \n VOLUME_correction                                                ...  correct volume by GLOBALLY adjusting the divergence of velocity term \n VOLUME_correction_FreeSurface                                    ...  correct volume by tiny global lifting of the free surface \n VOLUME_correction_FreeSurface                           ... \n VOLUME_correction_ResetOnRestart                                 ... \n VOLUME_correction                                       ... \n VOLUME_correction_local                                          ...  correct volume by LOCALLY adjusting the divergence of velocity term \n VOLUME_correction_local                                 ... \n VP0_VelocityCorrection                                           ...  invoke velocity correction based on correction pressure (%ind_c%) for vp- solver \n VP0_VelocityCorrection                                  ... \n VelocityAlgorithm                                                \n\n\n\n\n", 
        "url": "../Index. V.html", 
        "id": 1344, 
        "title": " V"
    }, 
    {
        "body": "\n\n W\n\n\n WRITEOUTPUT_Level_Organize                                       ... \n WallLayer                                                        ... \n WhichIndexingMethod                                              ... \n Windows                                                 \n\n\n\n\n", 
        "url": "../Index. W.html", 
        "id": 1345, 
        "title": " W"
    }, 
    {
        "body": "\n\n Y\n\n\n Y0()                                                             ...  FPM-entity \n Yopp()                                                           ...  FPM-entity of the opposite particle of contact problems \n\n\n\n\n", 
        "url": "../Index. Y.html", 
        "id": 1346, 
        "title": " Y"
    }, 
    {
        "body": "\n\n _\n\n\n _!_                                                              ...  not equal to \n _**_                                                             ...  power \n _*_                                                              ...  product \n _+_                                                              ...  sum \n _-_                                                              ...  difference \n _<_                                                              ...  less than \n _=_                                                              ...  equal to \n _>_                                                              ...  greater than \n _^_                                                              ...  power \n __Constants__                                                    ...  typical %...%-constants that can be used in the input files \n __HeaderInfoOrComments__                                         ...  optionally add comments to your intergration items \n __SelectionFeature__                                             ...  additional option to further select FPM points for the integration statement \n __overview_of_syntax_elements__                                  ...  shows all possible syntax in USER_common_variables.dat \n _div_                                                            ...  quotient \n\n\n\n\n", 
        "url": "../Index. _.html", 
        "id": 1347, 
        "title": " _"
    }, 
    {
        "body": "\n\n a\n\n\n a-block                                                          ...  a=alias; short description of the hierarchy element in one line \n abs()                                                            ...  absolute value \n acos()                                                           ...  inverse cosine \n additionalPoint_approximation                                    ... \n alpha_O1                                                         ... \n applyAlias{}                                                     ... \n asin()                                                           ...  inverse sine \n atan()                                                           ...  inverse tangent \n\n\n\n\n", 
        "url": "../Index. a.html", 
        "id": 1348, 
        "title": " a"
    }, 
    {
        "body": "\n\n b\n\n\n b-block                                                          ...  b=block; full explanation of the hierarchy item in text-block from \n batchmode                                             ...  pause to FPM execution, allow FPM batch commands that modify the current state of the point cloud \n batchmode_off                                         ...  leave the batchmode \n batchmode_on                                          ...  enter the batchmode \n begin_CCC_seeds2D                                                ...  add 2D seeds for CuttingCurveCluster (optional) \n begin_CCC_seeds2D                                       ... \n begin_CCC_seeds3D                                                ...  add 3D seeds for CuttingCurveCluster (optional) \n begin_CCC_seeds3D                                       ... \n begin_CCC_seeds6D                                                ...  add 6D seeds for CuttingCurveCluster (optional) \n begin_CCC_seeds6D                                       ... \n begin_alias{}                                           ... \n begin_boundary_elements{}                               ... \n begin_construct_atRestart{}                             ... \n begin_construct{}                                       ... \n begin_curve{}                                           ... \n begin_equation{}                                        ... \n begin_material{}                                        ... \n bi                                                    ...  stop the currently running iteration of sparse linear systems \n binA()                                                           ...  step function for alias \n break_iteration                                       ...  stop the currently running iteration of sparse linear systems \n\n\n\n\n", 
        "url": "../Index. b.html", 
        "id": 1349, 
        "title": " b"
    }, 
    {
        "body": "\n\n c\n\n\n common_variables                                                 ...  input file for development and debugging purposes \n compareY()                                                       ...  compare function values between two given chambers \n compute_FS                                                       ... \n compute_LAYER                                                    ... \n compute_phase_boundary                                           ...  invoke detection of interface connections \n compute_phase_boundary                                  ... \n correct_CONS                                                     ... \n correction_pressure                                              ... \n cos()                                                            ...  cosine \n cosh()                                                           ...  hyperbolic cosine \n curve()                                                          ...  incorporate curves in an equation \n cv_DateCompiled                                                  ... \n cv_DateCompiled_Seed                                             ... \n cv                                                     ...  specific heat of the material in kJ/(kg*K) \n cv                                                      ... \n\n\n\n\n", 
        "url": "../Index. c.html", 
        "id": 1350, 
        "title": " c"
    }, 
    {
        "body": "\n\n d\n\n\n dYdn()                                                           ...  normal-derivative of FPM-entity \n dYdx()                                                           ...  x-derivative of FPM-entity \n dYdy()                                                           ...  y-derivative of FPM-entity \n dYdz()                                                           ...  z-derivative of FPM-entity \n damping_p_corr                                                   ... \n damping_p_corr                                          ... \n dcurv()                                                          ...  derivative of a given curve \n deleteParticlesOn{}                                              ...  delete FPM points by an arithmetic criterion \n delete{Alias}                                                    ...  delete all the geometry belonging to a given alias-group \n delta_uw                                                         ... \n delta_uw_bp                                                      ... \n density                                                ...  material density [kg/m^3] \n density                                                 ... \n depvar_default                                                   ...  defines the index for the independent variable in 1D curves \n dequn()                                                          ...  derivative of a given equation \n dist_BND_from_FS                                                 ... \n dist_FS_from_BND                                                 ... \n dist_FS_new_part                                                 ... \n dist_LayerThickness                                              ... \n dist_aip                                                         ...  initial relative distance to boundary of a newly injected FPM-point (aip = add injected particles) \n dist_between_phases                                              ... \n dist_merge_opp_face                                              ... \n dist_rab                                                         ...  relative allowed minimum distance of FPM-points to boundary (rab = remove at boundary) \n dist_rip                                                         ...  relative allowed minimum distance between FPM-points (rip = remove interior points) \n distanceToBND{}                                                  ...  recompute the distance of each particle with respect to the boundary \n divergenceV                                             ... \n dtBND()                                                          ...  closest distance to boundary (free surface or regular) in the neighborhood \n dt_TEMPERATURE                                                   ... \n dt_TEMPERATURE                                          ... \n dt_VELOCITY                                                      ... \n dt_VELOCITY                                             ... \n duplicate{}                                                      ... \n\n\n\n\n", 
        "url": "../Index. d.html", 
        "id": 1351, 
        "title": " d"
    }, 
    {
        "body": "\n\n e\n\n\n echo{}                                                           ...  simple test writeout in order to check the response of FPM \n eps_T                                                            ... \n eps_T                                                   ... \n eps_p                                                            ... \n eps_p                                                   ... \n eps_phyd                                                         ... \n eps_phyd                                                ... \n eps_v                                                            ... \n eps_v                                                   ... \n equn                                                             ...  define functions, equations, and algebraic expressions \n equn()                                                           ...  incorporate existing equations \n eta                                                    ...  viscosity definition [Pa*s] \n eta                                                     ... \n evaluateEquation{}                                               ...  evaluate equation particlewise \n exp()                                                            ...  exponential \n exportGeometry{}                                                 ...  export the actually imported geometry file in STL or OBJ format \n\n\n\n\n", 
        "url": "../Index. e.html", 
        "id": 1352, 
        "title": " e"
    }, 
    {
        "body": "\n\n f\n\n\n fabnd()                                                          ... \n frame-block                                                      ...  write the lines in a box \n freq_restart                                                     ... \n\n\n\n\n", 
        "url": "../Index. f.html", 
        "id": 1353, 
        "title": " f"
    }, 
    {
        "body": "\n\n g\n\n\n gravity                                                 ... \n\n\n\n\n", 
        "url": "../Index. g.html", 
        "id": 1354, 
        "title": " g"
    }, 
    {
        "body": "\n\n h\n\n\n h-block                                                          ...  h=hierarchy; short name of hierarchy element in the context of the whole hierarchy tree \n heatsource                                              ... \n\n\n\n\n", 
        "url": "../Index. h.html", 
        "id": 1355, 
        "title": " h"
    }, 
    {
        "body": "\n\n i\n\n\n if-then-else                                                     ...  incorporate logical branching in the equation \n ignore{}                                                         ...  ignore listed aliases from a geometry file \n image-block                                                      ...  include a picture in the text \n include_CCC_curves                                               ...  define the geometry file containing cutting curves for clustering \n include_CCC_curves                                      ... \n include_CCC_seeds2D                                              ...  include 2D seeds for CuttingCurveCluster from file (optional) \n include_CCC_seeds2D                                     ... \n include_CCC_seeds3D                                              ...  include 3D seeds for CuttingCurveCluster from file (optional) \n include_CCC_seeds3D                                     ... \n include_CCC_seeds6D                                              ...  include 6D seeds for CuttingCurveCluster from file (optional) \n include_CCC_seeds6D                                     ... \n include{File}                                                    ...  definition a geometry file to be read by FPM \n include{}                                                        ...  read in more geometry elements \n ind_S_nc                                                         ...  normal component of stress tensor (nSn) in barodesy model \n ind_evoid                                                        ...  void ratio in barodesy model \n ind_highlight                                                    ...  can be deleted??? \n ind_volstrain                                                    ...  volumetric strain in barodesy model \n ind_x_displaced                                                  ...  ind_x_displaced really needed? What for? \n initial_particles                                                ... \n int()                                                            ...  integer part of real value \n int_BND_part_add                                                 ... \n int_BND_part_remove                                              ... \n int_part_add                                                     ... \n int_part_cross_BND                                               ... \n int_part_remove                                                  ... \n int_part_smooth                                                  ... \n integ()                                                          ...  incorporate integration results in an equation \n isCID()                                                          ...  characteristic function for a CuttingCurveCluster \n\n\n\n\n", 
        "url": "../Index. i.html", 
        "id": 1356, 
        "title": " i"
    }, 
    {
        "body": "\n\n k\n\n\n kind_of_method                                                   ... \n\n\n\n\n", 
        "url": "../Index. k.html", 
        "id": 1357, 
        "title": " k"
    }, 
    {
        "body": "\n\n l\n\n\n lambda                                                 ...  thermal conductivity [W/(m*K)] \n lambda                                                  ... \n latentheat                                              ... \n latex-equation                                                   ...  translates LaTeX into pictures \n latex-equation-inline                                            ...  translates LaTeX into pictures \n layerByCluster{}                                                 ... \n lenA()                                                           ...  length of alias string \n limiter                                                          ... \n link-command                                                     ...  find list of pages/items, which reference to the present page/item \n log()                                                            ...  natural logarithm \n log10()                                                          ...  logarithms basis 10 \n\n\n\n\n", 
        "url": "../Index. l.html", 
        "id": 1358, 
        "title": " l"
    }, 
    {
        "body": "\n\n m\n\n\n manipulate{Alias}                                                ...  manipulate (move, rotate, ...) the geometry belonging to an alias-group \n max()                                                            ...  maximum of two or more arguments \n max_N_stencil                                                    ...  maximum number of neighbor particles accepted for stencil computation and numerics \n max_N_stencil_INTERIOR                                           ...  max. number of neighbors accepted for stencil computation and numerics only for interior pooints \n max_N_stencil                                           ... \n max_vl                                                  ... \n min()                                                            ...  minimum of two or more arguments \n min_vl                                                  ... \n mirror{}                                                         ...  Generalised mirroring across a plane \n mue                                                    ...  shear modulus definition [Pa] \n mue                                                     ... \n\n\n\n\n", 
        "url": "../Index. m.html", 
        "id": 1359, 
        "title": " m"
    }, 
    {
        "body": "\n\n n\n\n\n nb_functions                                                     ...  defines the number of dependent variables in 1D curves \n nue                                                              ... \n\n\n\n\n", 
        "url": "../Index. n.html", 
        "id": 1360, 
        "title": " n"
    }, 
    {
        "body": "\n\n o\n\n\n offset{}                                                         ...  shift the given geometry by a vector \n only{}                                                           ...  read onle elements of a given alias from file \n ord_convection                                                   ... \n ord_eval                                                         ... \n ord_eval                                                ... \n ord_gradient                                                     ...  define approximation order of the gradient operators \n ord_gradient                                            ... \n ord_laplace                                                      ... \n ord_laplace                                             ... \n ord_smooth                                                       ... \n organize_points{}                                                ...  Execute the complete particle organization subroutine of FPM \n\n\n\n\n", 
        "url": "../Index. o.html", 
        "id": 1361, 
        "title": " o"
    }, 
    {
        "body": "\n\n p\n\n\n pBubble_Offset                                                   ...  define offset pressure for bubble pressure-on-volume analysis \n pause                                                 ...  let FPM sleep until the next pause command is launched \n pause_off                                             ...  continue FPM execution after pause_on command was given \n pause_on                                              ...  let FPM sleep until the pause_off command is launched \n phix()                                                           ... \n phiy()                                                           ... \n phiz()                                                           ... \n plainBoundaryElements                                            ...  definition a geometry file to be read by FPM \n plot                                                  ...  force a result plot after the end of the current time step \n plot                                                  ...  plot a result file after the end of the time step \n plot{}                                                           ...  write ensight, tecplot, ascii or other result formats \n pmin()                                                           ...  minimum of all strictly positive values \n prec_act_BND                                                     ... \n prec_comp_FS_normal                                              ... \n prec_seek_FS                                                     ... \n prec_seek_holes                                                  ... \n projY()                                                          ...  Projection of FPM-entity by smooth, least-squares  approximation \n propagateFunction{}                                              ...  propagate a function with restricted gradient \n\n\n\n\n", 
        "url": "../Index. p.html", 
        "id": 1362, 
        "title": " p"
    }, 
    {
        "body": "\n\n q\n\n\n qualitycheck                                          ...  force a quality check of the FPM point cloud after the next organization step \n qualitycheck                                          ...  perform quality check operation of point cloud \n quickview{}                                                      ...  produce a quickview image \n quit                                                  ...  quit FPM execution after the current time cycle \n quit                                                  ...  quit running computation \n\n\n\n\n", 
        "url": "../Index. q.html", 
        "id": 1363, 
        "title": " q"
    }, 
    {
        "body": "\n\n r\n\n\n radius_hole                                                      ...  relative allowed hole size \n radius_hole                                             ... \n rand()                                                           ...  random numer generator \n read_Y                                                           ...  deprecated, not used any more, to be set by restart in USER_common_variables \n real()                                                           ...  incorporate standard FPM-postprocessing and statistics \n recomputeMPIbisection{}                                          ...  recompute MPI bisection on the spot \n recomputeSearchTree{}                                            ...  Recompute the particle search tree \n ref-block                                                        ...  invoke a reference link in the html-output \n rel_dist                                                         ... \n rel_dist                                                ... \n rel_dist_bound                                                   ... \n rel_dist_bound                                          ... \n rel_dist_edge                                                    ... \n removeCluster{}                                                  ...  removes cluster(s) of the current geometry subset due to given conditions \n removeIsolatedClusters{}                                         ... \n removeOuterShell{}                                               ... \n removePartsOfBEbyAlias{}                                         ...  remove boundary parts defined by alias name(s) \n removeTJunctions{}                                               ... \n removeTinyClusters{}                                             ... \n reorientation{}                                                  ...  reorientation (inside/outside) of the geometry during read-in \n reread_Ucv                                            ...  reload USER_common_variables.dat \n reread_Ucv                                            ...  read again the SUER_common_variables.dat at the beginning of the next time step \n reread_all                                            ...  reloads both USER_common_variables.dat and common_variables.dat \n reread_all                                            ...  read both USER_common_variab\u00f6es.dat and common_variables.dat at the beginning of the next time step \n reread_cv                                             ...  reload common_variables.dat \n reread_cv                                             ...  read again the common_variables.dat at the beginning of the next time step \n reset_Vanalytical                                     ...  resets the analytical volume of each chamber to the current values \n restart                                                 ... \n restart_additionalBE                                    ... \n restart_copying                                         ... \n restart_file                                                     ... \n restart_step_size                                       ... \n restart_toberemoved                                     ... \n restartnewBE_filling                                             ... \n restartnewBE_filling                                    ... \n revOrient{}                                                      ... \n rot()                                                            ...  components of rotated vector \n rotate{}                                                         ...  rotate the given geometry about a point with a rotation axis and angle \n\n\n\n\n", 
        "url": "../Index. r.html", 
        "id": 1364, 
        "title": " r"
    }, 
    {
        "body": "\n\n s\n\n\n save                                                  ...  write an FPM restart file after the end of the current time step \n save                                                  ...  save a restart file at the end of the time step \n scale{}                                                          ...  scale some geometry about the origin \n set_OMP_threads                                       ...  redefines the number of OMP threads to be used \n set_OMP_threads                                       ...  redefines the number of OMP threads to be used \n shearmodulus                                            ... \n sigma                                                  ...  surface tension [N/m] \n sigma                                                   ... \n sin()                                                            ...  sine \n sinh()                                                           ...  hyperbolic sine \n sloppy{}                                                         ...  do not stop program if geometry file contains an undefined alias \n smooth_BND_movement                                              ... \n smooth_BND_normal                                                ... \n smooth_FS                                                        ... \n smooth_FS_SurfaceTension                                         ... \n sort-command                                                     ...  sort the list of children in lexicographical order in the html-output \n sort_BE_into_boxes{}                                             ...  reconstruct the search tree for boundary elements \n specificheat                                            ... \n sqrt()                                                           ...  square root \n step()                                                           ...  step function \n stretch_search                                                   ... \n surfacetension                                          ... \n symmetryfaceByCluster{}                                          ...  automatic distribution of SYMMETRYFACE-flags to geometry components \n\n\n\n\n", 
        "url": "../Index. s.html", 
        "id": 1365, 
        "title": " s"
    }, 
    {
        "body": "\n\n t\n\n\n t-block                                                          ...  t=text; full explanation of the hierarchy item \n tan()                                                            ...  tangent \n tanh()                                                           ...  hyperbolic tangent \n tau                                                     ... \n tes                                                              ...  Stencils incorporate the PDEs to be solved \n thermalconduction                                       ... \n thickenabs{}                                                     ... \n thickenexp{}                                                     ... \n time_check                                            ...  write out a detailled time check listing \n time_check_sum                                        ...  write out a sum-up conclusion of the time check \n time_integration_expl                                            ... \n time_step_gain                                                   ... \n time_step_loss                                                   ... \n tryMaikesTriangulation                                           ... \n turn_6nodeTriangles_into_3NodeTriangles{}                        ... \n turn_down_BND_order                                              ...  automatically reduce the approximation of a boundary particle \n\n\n\n\n", 
        "url": "../Index. t.html", 
        "id": 1366, 
        "title": " t"
    }, 
    {
        "body": "\n\n u\n\n\n use_BubbleManagement                                             ...  switch on bubble analysis for a given chamber index \n\n\n\n\n", 
        "url": "../Index. u.html", 
        "id": 1367, 
        "title": " u"
    }, 
    {
        "body": "\n\n v\n\n\n v--                                                              ...  segregated, directly incompressible solver \n v_transport                                             ... \n vcog()                                                           ... \n vel_dim                                                          ... \n viscosity                                               ... \n vp-                                                              ...  directly incompresssible, implicit solver with penalty formulation \n\n\n\n\n", 
        "url": "../Index. v.html", 
        "id": 1368, 
        "title": " v"
    }, 
    {
        "body": "\n\n w\n\n\n who_am_I                                                         ... \n write_cv                                              ...  write the complete set of numerical parameters to file \n write_debug                                                      ... \n\n\n\n\n", 
        "url": "../Index. w.html", 
        "id": 1369, 
        "title": " w"
    }, 
    {
        "body": "\n\n x\n\n\n x_p1                                                    ... \n x_p                                                     ... \n xcog()                                                           ... \n\n\n\n\n", 
        "url": "../Index. x.html", 
        "id": 1370, 
        "title": " x"
    }, 
    {
        "body": "\n\nScheme\n\n\n\n\n\nList of members:\n\n\nv--  ...  segregated, directly incompressible solver \nvp-  ...  directly incompresssible, implicit solver with penalty formulation \ntes  ...  Stencils incorporate the PDEs to be solved \n\n\n\n\n\n", 
        "url": "../FPM.Solvers.Numerics.FLIQUID.Scheme.html", 
        "id": 1371, 
        "title": "Scheme"
    }, 
    {
        "body": "\n\nv-- ...  segregated, directly incompressible solver \n\n\n  We describe the numerical scheme for incompressible / weakly compressible. \n  A document containing the scheme is found in   DOCUMATH_GeneralNumericalScheme.pdf  . \n   \n   \n  Compute all necessary material data. Especially see %ind_r%, %ind_ETA%, %ind_LAM%, %ind_MUE%, %ind_betaDarcy%, %ind_v0Darcy(1)% ... %ind_v0Darcy(3)%, %ind_SIG%, ... \n   \n   \n  Also, compute derived data, for example: \n  the compressibility, see %ind_R_P%, also %ind_DiagPcorr% . \n   \n   \n  Compute the effective viscosity, see %ind_ETA_sm% \n   \n   \n  Compute the effective body forces, see %ind_g(1)% ... %ind_g(3)% \n   \n   \n  Solve the hydrostatic pressure. See HydrostaticPressureAlgorithm. See also %ind_p% . \n   \n   \n  Solve the temperature. See TemperatureAlgorithm. See %ind_T% . \n   \n   \n  Compute the nominal divergence of velocity, needed for the desired divergence of velocity in CorrectionPressure, see especially DesiredAndNominalDivergenceOfVelocity. Temporarily saved in %ind_div_bar% . \n   \n   \n  Solve the velocity. See VelocityAlgorithm. See %ind_v(1)% ... %ind_v(3)% as well as %ind_v_tild(1)% ... %ind_v_tild(3)% . \n   \n   \n  Compute correction pressure. See %ind_c% . \n   \n   \n  Correct the velocity with the help of the correction pressure. Result in %ind_v(1)% ... %ind_v(3)% \n   \n   \n  Update the dynamic pressure. See %ind_p_dyn% \n   \n   \n  Compute the new density as a backup for the next time step. See %ind_r_c% . \n   \n   \n  Compute the stress tensor at time level  by the stress tensor algorithm, i.e. \n   \n  see the StressTensorAlgorithm . \n   \n  Update turbulence values for k-epsilon. See %ind_k% and %ind_eps% . \n   \n   \n   \n  Recompute the resulting body forces. See %ind_g(1)% ... %ind_g(3)% . \n   \n   \n  Recompute, if needed, the hydrostatic pressure. See %ind_p% . \n   \n   \n  Nominal divergence of velocity, motivated by dynamic pressure. Temporarily resulting in %ind_div_bar% . \n   \n   \n  out of the velocity field, compute the consistent dynamic pressure. See %ind_p_dyn% . \n   \n   \n  backup the density after computing the dynamic pressure \n   \n   \n  compute the target divergence of velocity as a backup for the next time cycle. Resulting both in %ind_div_bar_0% and %ind_div_bar%. \n   \n   \n  Compute the rediduals for the velocity. See %ind_v_residual(1)% ... %ind_v_residual(3)% . \n   \n  Compute the rediduals for the density. See %ind_r_residual% \n   \n  integrate all additional variables defined by the CODI commands. See also %ind_addvar% ... \n   \n                       \n\n\n\nThis item is referenced in:\n\n\n%ind_div_bar_c%  ...  PURE POSTPROCESSING: the (divergence of velocity)^bar at the point in the numerical scheme where the correction pressure is computed \n%ind_div_bar_pDyn%  ...  PURE POSTPROCESSING: the (divergence of velocity)^bar at the point in the numerical scheme where the correction pressure is computed \n%BND_free%  ...  Direct dynamic pressure boundary conditions at free surface \nFLIQUID_ConsistentPressure_Version  ...  version how to compute the consistent pressure \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Solver/BasicSolver/Incompressible/F_of_t_and_Y_LIQUID_3.f90 \n\n\n\n", 
        "url": "../FPM.Solvers.Numerics.FLIQUID.Scheme.v--.html", 
        "id": 1372, 
        "title": "v--"
    }, 
    {
        "body": "\n\nvp- ...  directly incompresssible, implicit solver with penalty formulation \n\n\n  We describe the numerical scheme for incompressible / weakly compressible. \n  A document containing the scheme is found in   DOCUMATH_GeneralNumericalScheme.pdf  . \n   \n   \n  Compute all necessary material data. Especially see %ind_r%, %ind_ETA%, %ind_LAM%, %ind_MUE%, %ind_betaDarcy%, %ind_v0Darcy(1)% ... %ind_v0Darcy(3)%, %ind_SIG%, ... \n   \n   \n  Also, compute derived data, for example: \n  the compressibility, see %ind_R_P%, also %ind_DiagPcorr% . \n   \n   \n  Compute the effective viscosity, see %ind_ETA_sm% \n   \n   \n  Compute the effective body forces, see %ind_g(1)% ... %ind_g(3)% \n   \n   \n  Solve the hydrostatic pressure. See HydrostaticPressureAlgorithm. See also %ind_p% . \n   \n   \n  Solve the temperature. See TemperatureAlgorithm. See %ind_T% . \n   \n   \n  Compute the nominal divergence of velocity, needed for the desired divergence of velocity in CorrectionPressure, see especially DesiredAndNominalDivergenceOfVelocity. Temporarily saved in %ind_div_bar% . \n   \n   \n  Solve the velocity and the correction pressure in one big system of equations.  See %ind_v(1)% ... %ind_v(3)% as well as %ind_v_tild(1)% ... %ind_v_tild(3)% . See %ind_c% (correction pressure). \n   \n   \n  Update the dynamic pressure. See %ind_p_dyn% \n   \n   \n  Correct the velocity with the help of the correction pressure. Result in %ind_v(1)% ... %ind_v(3)% . \n   \n   \n  Compute the new density as a backup for the next time step. See %ind_r_c% . \n   \n   \n  Compute the stress tensor at time level  by the stress tensor algorithm, i.e. \n   \n  see the StressTensorAlgorithm . \n   \n  Update turbulence values for k-epsilon. See %ind_k% and %ind_eps% . \n   \n   \n   \n  Recompute the resulting body forces. See %ind_g(1)% ... %ind_g(3)% . \n   \n   \n  Recompute, if needed, the hydrostatic pressure. See %ind_p% . \n   \n   \n  Nominal divergence of velocity, motivated by dynamic pressure. Temporarily resulting in %ind_div_bar% . \n   \n   \n  out of the velocity field, compute the consistent dynamic pressure. See %ind_p_dyn% . \n   \n   \n  backup the density after computing the dynamic pressure \n   \n   \n  compute the target divergence of velocity as a backup for the next time cycle. Resulting both in %ind_div_bar_0% and %ind_div_bar%. \n   \n   \n  Compute the rediduals for the velocity. See %ind_v_residual(1)% ... %ind_v_residual(3)% . \n   \n  Compute the rediduals for the density. See %ind_r_residual% \n   \n  integrate all additional variables defined by the CODI commands. See also %ind_addvar% ... \n   \n                       \n\n\n\nThis item is referenced in:\n\n\n%ind_div_bar_c%  ...  PURE POSTPROCESSING: the (divergence of velocity)^bar at the point in the numerical scheme where the correction pressure is computed \n%ind_div_bar_pDyn%  ...  PURE POSTPROCESSING: the (divergence of velocity)^bar at the point in the numerical scheme where the correction pressure is computed \nFLIQUID_ConsistentPressure_Version  ...  version how to compute the consistent pressure \nLINEQN_scaling  ...  choose the way how to scale/normalize the linear systems (so far implemented only for the SAMG-case) \nReleases  ...  information on the MESHFREE releases \nSHALLOWWATER  ...  Solver for shallow water equations \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Solver/BasicSolver/Incompressible/F_of_t_and_Y_LIQUID_3.f90 \n\n\n\n", 
        "url": "../FPM.Solvers.Numerics.FLIQUID.Scheme.vp-.html", 
        "id": 1373, 
        "title": "vp-"
    }, 
    {
        "body": "\n\ntes ...  Stencils incorporate the PDEs to be solved \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Solver/BasicSolver/Incompressible/F_of_t_and_Y_LIQUID_3.f90 \n\n\n\n", 
        "url": "../FPM.Solvers.Numerics.FLIQUID.Scheme.tes.html", 
        "id": 1374, 
        "title": "tes"
    }, 
    {
        "body": "\n\nSHALLOWWATER ...  Solver for shallow water equations \n\n\n  To solve a shallow water problem, choose the kind of problem as \n   \n  KOP(1) = SHALLOWWATER \n   \n  The shallow water phase can be coupled to a 3D liquid phase, say in chamber 2, in one or both directions by one of the following lines \n   \n  KOP(1) = SHALLOWWATER LPHASE:2 \n  KOP(1) = SHALLOWWATER COUPLING_3D->2D:2 \n  KOP(1) = SHALLOWWATER COUPLING_2D->3D:2 \n   \n  where the liquid phase might, for example, be defined as \n   \n  KOP(2) = LIQUID IMPLICIT LAGRANGE vp- TURBULENCE:k-epsilon \n   \n   \n   \n  Geometry aliases that can be in contact with both chambers, need to be defined for both seperately, see also AliasForGeometryItems. \n  Example: \n   \n  begin_alias{} \n    ### 3D Liquid ###  \n    \"inflow\" = \"BC$inflow$  ACTIVE$noinit_always$  IDENT%BND_inflow%  MAT$Wasser$  TOUCH%TOUCH_always%   MOVE$NO_MOVE$  LAYER0  CHAMBER2 POSTPROCESS$PPinflow$ \" \n    \"bowl\"   = \"BC$wall$    ACTIVE$noinit_always$  IDENT%BND_slip%    MAT$Wasser$  TOUCH%TOUCH_liquid%   MOVE$NO_MOVE$  LAYER0  CHAMBER2 \" \n    ### Shallow water ###  \n    \"bowl\"   = \"BC$swall$    ACTIVE$init_always$  IDENT%BND_slip%   MAT$Wasser_SHW$  TOUCH%TOUCH_never%  MOVE$NO_MOVE$  LAYER0  CHAMBER1 POSTPROCESS$BOWL_SHW$ \" \n  end_alias \n   \n   \n  Material parameters and initial conditions also need to be defined for both chambers. Note that for any boundary parts that may come into \n  contact with the shallow water chamber, a thin initial liquid film needs to be defined via a positive value of %ind_hwf%. Otherwise, the \n  points of the shallow water chamber will be deleted at the beginning of the simulation and cannot be recreated from the 3D liquid phase. \n   \n  See also the list of indices at SHALLOWWATER. \n\n\n\n\nThis item is referenced in:\n\n\nSHALLOWWATER  ...  Indices for the shallow water solver \nSAVE_format  ...  format to save simulation data \nSHALLOWWATER  ...  Solver for shallow water equations \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Solver/BasicSolver/ShallowWater/F_of_t_and_Y_ShallowWater.f90 \n\n\n\n", 
        "url": "../FPM.Solvers.Numerics.SHALLOWWATER.html", 
        "id": 1375, 
        "title": "SHALLOWWATER"
    }, 
    {
        "body": "\n\n%ABAQUS_AVMidpointIntplNode% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%ABAQUS_AVMidpointIntplNode%___const___.html", 
        "id": 1376, 
        "title": "%ABAQUS_AVMidpointIntplNode%___const___"
    }, 
    {
        "body": "\n\n%ABAQUS_AVMidpointShpdNode% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%ABAQUS_AVMidpointShpdNode%___const___.html", 
        "id": 1377, 
        "title": "%ABAQUS_AVMidpointShpdNode%___const___"
    }, 
    {
        "body": "\n\n%ABAQUS_IntplMidpoint% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%ABAQUS_IntplMidpoint%___const___.html", 
        "id": 1378, 
        "title": "%ABAQUS_IntplMidpoint%___const___"
    }, 
    {
        "body": "\n\n%ABAQUS_IntplNode% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%ABAQUS_IntplNode%___const___.html", 
        "id": 1379, 
        "title": "%ABAQUS_IntplNode%___const___"
    }, 
    {
        "body": "\n\n%ABAQUS_ShpdMidpoint% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%ABAQUS_ShpdMidpoint%___const___.html", 
        "id": 1380, 
        "title": "%ABAQUS_ShpdMidpoint%___const___"
    }, 
    {
        "body": "\n\n%ABAQUS_ShpdMidpointShpdNode% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%ABAQUS_ShpdMidpointShpdNode%___const___.html", 
        "id": 1381, 
        "title": "%ABAQUS_ShpdMidpointShpdNode%___const___"
    }, 
    {
        "body": "\n\n%ABAQUS_ShpdNode% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%ABAQUS_ShpdNode%___const___.html", 
        "id": 1382, 
        "title": "%ABAQUS_ShpdNode%___const___"
    }, 
    {
        "body": "\n\n%ACTIVE_always% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%ACTIVE_always%___const___.html", 
        "id": 1383, 
        "title": "%ACTIVE_always%___const___"
    }, 
    {
        "body": "\n\n%ACTIVE_init% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%ACTIVE_init%___const___.html", 
        "id": 1384, 
        "title": "%ACTIVE_init%___const___"
    }, 
    {
        "body": "\n\n%ACTIVE_nofill% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%ACTIVE_nofill%___const___.html", 
        "id": 1385, 
        "title": "%ACTIVE_nofill%___const___"
    }, 
    {
        "body": "\n\n%ACTIVE_nofill_OnBEclusters% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%ACTIVE_nofill_OnBEclusters%___const___.html", 
        "id": 1386, 
        "title": "%ACTIVE_nofill_OnBEclusters%___const___"
    }, 
    {
        "body": "\n\n%ACTIVE_nofill_OnDiscs% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%ACTIVE_nofill_OnDiscs%___const___.html", 
        "id": 1387, 
        "title": "%ACTIVE_nofill_OnDiscs%___const___"
    }, 
    {
        "body": "\n\n%ACTIVE_nofill_OnDiscsAndBEclusters% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%ACTIVE_nofill_OnDiscsAndBEclusters%___const___.html", 
        "id": 1388, 
        "title": "%ACTIVE_nofill_OnDiscsAndBEclusters%___const___"
    }, 
    {
        "body": "\n\n%ACTIVE_noinit% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%ACTIVE_noinit%___const___.html", 
        "id": 1389, 
        "title": "%ACTIVE_noinit%___const___"
    }, 
    {
        "body": "\n\n%AND% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nMONITORPOINTS_CREATION  ...  create monitor points due given conditions \n%MONITORPOINTS_CREATION_AtBoundary%  ...  create monitor points due given conditions and place it AT BOUNDARY \n%MONITORPOINTS_CREATION_Inside%  ...  create monitor points due given conditions, but do not attach to boundary \n%MONITORPOINTS_CREATION_IrreducibleFPMpoint%  ...  mark FPM points to be irreducible \n%MONITORPOINTS_CREATION_PenetrationOfBlindAndEmptyBoundary%  ...  create monitor point if FPM point penetrates BND_BlindAndEmpty boundaries \nMONITORPOINTS_DELETION  ...  delete an existing monitor point by a set of conditions \nMONITORPOINTS_STOP  ...  delete an existing monitor point by a set of conditions \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%AND%___const___.html", 
        "id": 1390, 
        "title": "%AND%___const___"
    }, 
    {
        "body": "\n\n%AVERAGE_BND% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nINTEGRATION  ...  Integration of the simulation results \n%AVERAGE_BND%  ...  average of a functional based on interior FPM points \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%AVERAGE_BND%___const___.html", 
        "id": 1391, 
        "title": "%AVERAGE_BND%___const___"
    }, 
    {
        "body": "\n\n%AVERAGE_INT% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nINTEGRATION  ...  Integration of the simulation results \n%AVERAGE_INT%  ...  average of a functional based on interior FPM points \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%AVERAGE_INT%___const___.html", 
        "id": 1392, 
        "title": "%AVERAGE_INT%___const___"
    }, 
    {
        "body": "\n\n%AVERAGE_XYPLANE% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%AVERAGE_XYPLANE%___const___.html", 
        "id": 1393, 
        "title": "%AVERAGE_XYPLANE%___const___"
    }, 
    {
        "body": "\n\n%BCON_CG% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BCON_CG%___const___.html", 
        "id": 1394, 
        "title": "%BCON_CG%___const___"
    }, 
    {
        "body": "\n\n%BCON_E_tot% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BCON_E_tot%___const___.html", 
        "id": 1395, 
        "title": "%BCON_E_tot%___const___"
    }, 
    {
        "body": "\n\n%BCON_Ma% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BCON_Ma%___const___.html", 
        "id": 1396, 
        "title": "%BCON_Ma%___const___"
    }, 
    {
        "body": "\n\n%BCON_PAMCRASH_CG% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BCON_PAMCRASH_CG%___const___.html", 
        "id": 1397, 
        "title": "%BCON_PAMCRASH_CG%___const___"
    }, 
    {
        "body": "\n\n%BCON_PAMCRASH_Mdot% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BCON_PAMCRASH_Mdot%___const___.html", 
        "id": 1398, 
        "title": "%BCON_PAMCRASH_Mdot%___const___"
    }, 
    {
        "body": "\n\n%BCON_PAMCRASH_RG% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BCON_PAMCRASH_RG%___const___.html", 
        "id": 1399, 
        "title": "%BCON_PAMCRASH_RG%___const___"
    }, 
    {
        "body": "\n\n%BCON_PAMCRASH_T% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BCON_PAMCRASH_T%___const___.html", 
        "id": 1400, 
        "title": "%BCON_PAMCRASH_T%___const___"
    }, 
    {
        "body": "\n\n%BCON_RG% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BCON_RG%___const___.html", 
        "id": 1401, 
        "title": "%BCON_RG%___const___"
    }, 
    {
        "body": "\n\n%BCON_T% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BCON_T%___const___.html", 
        "id": 1402, 
        "title": "%BCON_T%___const___"
    }, 
    {
        "body": "\n\n%BCON_T_tot% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BCON_T_tot%___const___.html", 
        "id": 1403, 
        "title": "%BCON_T_tot%___const___"
    }, 
    {
        "body": "\n\n%BCON_Vdot% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nBC_v  ...  Velocity boundary conditions \n%BCON_Vdot%  ...  Velocity boundary conditions based on the volume flux \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BCON_Vdot%___const___.html", 
        "id": 1404, 
        "title": "%BCON_Vdot%___const___"
    }, 
    {
        "body": "\n\n%BCON_contact% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BCON_contact%___const___.html", 
        "id": 1405, 
        "title": "%BCON_contact%___const___"
    }, 
    {
        "body": "\n\n%BCON_explicit% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BCON_explicit%___const___.html", 
        "id": 1406, 
        "title": "%BCON_explicit%___const___"
    }, 
    {
        "body": "\n\n%BCON_far_field% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BCON_far_field%___const___.html", 
        "id": 1407, 
        "title": "%BCON_far_field%___const___"
    }, 
    {
        "body": "\n\n%BCON_free% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BCON_free%___const___.html", 
        "id": 1408, 
        "title": "%BCON_free%___const___"
    }, 
    {
        "body": "\n\n%BCON_free_NoVisc% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BCON_free_NoVisc%___const___.html", 
        "id": 1409, 
        "title": "%BCON_free_NoVisc%___const___"
    }, 
    {
        "body": "\n\n%BCON_implicit% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BCON_implicit%___const___.html", 
        "id": 1410, 
        "title": "%BCON_implicit%___const___"
    }, 
    {
        "body": "\n\n%BCON_inflow% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BCON_inflow%___const___.html", 
        "id": 1411, 
        "title": "%BCON_inflow%___const___"
    }, 
    {
        "body": "\n\n%BCON_none% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BCON_none%___const___.html", 
        "id": 1412, 
        "title": "%BCON_none%___const___"
    }, 
    {
        "body": "\n\n%BCON_outflow% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BCON_outflow%___const___.html", 
        "id": 1413, 
        "title": "%BCON_outflow%___const___"
    }, 
    {
        "body": "\n\n%BCON_p% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BCON_p%___const___.html", 
        "id": 1414, 
        "title": "%BCON_p%___const___"
    }, 
    {
        "body": "\n\n%BCON_p_tot% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BCON_p_tot%___const___.html", 
        "id": 1415, 
        "title": "%BCON_p_tot%___const___"
    }, 
    {
        "body": "\n\n%BCON_rho% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BCON_rho%___const___.html", 
        "id": 1416, 
        "title": "%BCON_rho%___const___"
    }, 
    {
        "body": "\n\n%BCON_rho_va% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BCON_rho_va%___const___.html", 
        "id": 1417, 
        "title": "%BCON_rho_va%___const___"
    }, 
    {
        "body": "\n\n%BCON_rho_vb% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BCON_rho_vb%___const___.html", 
        "id": 1418, 
        "title": "%BCON_rho_vb%___const___"
    }, 
    {
        "body": "\n\n%BCON_rho_vn% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BCON_rho_vn%___const___.html", 
        "id": 1419, 
        "title": "%BCON_rho_vn%___const___"
    }, 
    {
        "body": "\n\n%BCON_s% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BCON_s%___const___.html", 
        "id": 1420, 
        "title": "%BCON_s%___const___"
    }, 
    {
        "body": "\n\n%BCON_s_ini% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BCON_s_ini%___const___.html", 
        "id": 1421, 
        "title": "%BCON_s_ini%___const___"
    }, 
    {
        "body": "\n\n%BCON_slip% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BCON_slip%___const___.html", 
        "id": 1422, 
        "title": "%BCON_slip%___const___"
    }, 
    {
        "body": "\n\n%BCON_va% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BCON_va%___const___.html", 
        "id": 1423, 
        "title": "%BCON_va%___const___"
    }, 
    {
        "body": "\n\n%BCON_vb% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BCON_vb%___const___.html", 
        "id": 1424, 
        "title": "%BCON_vb%___const___"
    }, 
    {
        "body": "\n\n%BCON_visc% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BCON_visc%___const___.html", 
        "id": 1425, 
        "title": "%BCON_visc%___const___"
    }, 
    {
        "body": "\n\n%BCON_vn% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BCON_vn%___const___.html", 
        "id": 1426, 
        "title": "%BCON_vn%___const___"
    }, 
    {
        "body": "\n\n%BCON_wall% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BCON_wall%___const___.html", 
        "id": 1427, 
        "title": "%BCON_wall%___const___"
    }, 
    {
        "body": "\n\n%BCON_wall_nosl% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BCON_wall_nosl%___const___.html", 
        "id": 1428, 
        "title": "%BCON_wall_nosl%___const___"
    }, 
    {
        "body": "\n\n%BND_AVERAGE% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n%ind_p_dyn%  ...  Dynamic Pressure boundary conditions \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BND_AVERAGE%___const___.html", 
        "id": 1429, 
        "title": "%BND_AVERAGE%___const___"
    }, 
    {
        "body": "\n\n%BND_BNDDOT% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BND_BNDDOT%___const___.html", 
        "id": 1430, 
        "title": "%BND_BNDDOT%___const___"
    }, 
    {
        "body": "\n\n%BND_BlindAndEmpty% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n%INTEGRATION_FLUX%  ...  time integration of a flux by simply counting the FPM-points that slip over a given control surface \n%INTEGRATION_ABSFLUX%  ...  absolute value of a flux by simply counting the FPM-points that slip over a given control surface in either direction \n%MONITORPOINTS_CREATION_PenetrationOfBlindAndEmptyBoundary%  ...  create monitor point if FPM point penetrates BND_BlindAndEmpty boundaries \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BND_BlindAndEmpty%___const___.html", 
        "id": 1431, 
        "title": "%BND_BlindAndEmpty%___const___"
    }, 
    {
        "body": "\n\n%BND_CAUCHY% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nBC_T  ...  Temperature boundary conditions \n%BND_ROBIN%  ...  Robin boundary condition \nReleases  ...  information on the MESHFREE releases \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BND_CAUCHY%___const___.html", 
        "id": 1432, 
        "title": "%BND_CAUCHY%___const___"
    }, 
    {
        "body": "\n\n%BND_COULOMB_SLIDE% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BND_COULOMB_SLIDE%___const___.html", 
        "id": 1433, 
        "title": "%BND_COULOMB_SLIDE%___const___"
    }, 
    {
        "body": "\n\n%BND_COULOMB_SLIP% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BND_COULOMB_SLIP%___const___.html", 
        "id": 1434, 
        "title": "%BND_COULOMB_SLIP%___const___"
    }, 
    {
        "body": "\n\n%BND_COULOMB_STICK% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BND_COULOMB_STICK%___const___.html", 
        "id": 1435, 
        "title": "%BND_COULOMB_STICK%___const___"
    }, 
    {
        "body": "\n\n%BND_DIRICH% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nBCON  ...  general setting of boundary conditions \n%ind_p_dyn%  ...  Dynamic Pressure boundary conditions \n%BND_ROBIN%  ...  Robin boundary condition \nEquations  ...  define functions, equations, and algebraic expressions \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BND_DIRICH%___const___.html", 
        "id": 1436, 
        "title": "%BND_DIRICH%___const___"
    }, 
    {
        "body": "\n\n%BND_DRYFRICTION% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BND_DRYFRICTION%___const___.html", 
        "id": 1437, 
        "title": "%BND_DRYFRICTION%___const___"
    }, 
    {
        "body": "\n\n%BND_DRYFRICTION_InContact% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BND_DRYFRICTION_InContact%___const___.html", 
        "id": 1438, 
        "title": "%BND_DRYFRICTION_InContact%___const___"
    }, 
    {
        "body": "\n\n%BND_HEATFLUX% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BND_HEATFLUX%___const___.html", 
        "id": 1439, 
        "title": "%BND_HEATFLUX%___const___"
    }, 
    {
        "body": "\n\n%BND_HELMHOLTZ% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BND_HELMHOLTZ%___const___.html", 
        "id": 1440, 
        "title": "%BND_HELMHOLTZ%___const___"
    }, 
    {
        "body": "\n\n%BND_IGES% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BND_IGES%___const___.html", 
        "id": 1441, 
        "title": "%BND_IGES%___const___"
    }, 
    {
        "body": "\n\n%BND_IGES_curve% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BND_IGES_curve%___const___.html", 
        "id": 1442, 
        "title": "%BND_IGES_curve%___const___"
    }, 
    {
        "body": "\n\n%BND_IGES_ignore% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BND_IGES_ignore%___const___.html", 
        "id": 1443, 
        "title": "%BND_IGES_ignore%___const___"
    }, 
    {
        "body": "\n\n%BND_IGES_surface% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BND_IGES_surface%___const___.html", 
        "id": 1444, 
        "title": "%BND_IGES_surface%___const___"
    }, 
    {
        "body": "\n\n%BND_IGES_trafo% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BND_IGES_trafo%___const___.html", 
        "id": 1445, 
        "title": "%BND_IGES_trafo%___const___"
    }, 
    {
        "body": "\n\n%BND_INTERPHASE% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BND_INTERPHASE%___const___.html", 
        "id": 1446, 
        "title": "%BND_INTERPHASE%___const___"
    }, 
    {
        "body": "\n\n%BND_INTERPHASE_dfdn% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BND_INTERPHASE_dfdn%___const___.html", 
        "id": 1447, 
        "title": "%BND_INTERPHASE_dfdn%___const___"
    }, 
    {
        "body": "\n\n%BND_INTERPHASE_f% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BND_INTERPHASE_f%___const___.html", 
        "id": 1448, 
        "title": "%BND_INTERPHASE_f%___const___"
    }, 
    {
        "body": "\n\n%BND_LAPLAC% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BND_LAPLAC%___const___.html", 
        "id": 1449, 
        "title": "%BND_LAPLAC%___const___"
    }, 
    {
        "body": "\n\n%BND_Mdot% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BND_Mdot%___const___.html", 
        "id": 1450, 
        "title": "%BND_Mdot%___const___"
    }, 
    {
        "body": "\n\n%BND_NEUMANN% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nBCON  ...  general setting of boundary conditions \n%ind_p_dyn%  ...  Dynamic Pressure boundary conditions \n%BND_ROBIN%  ...  Robin boundary condition \nReleases  ...  information on the MESHFREE releases \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BND_NEUMANN%___const___.html", 
        "id": 1451, 
        "title": "%BND_NEUMANN%___const___"
    }, 
    {
        "body": "\n\n%BND_NEUMANN_DIRICHLET% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BND_NEUMANN_DIRICHLET%___const___.html", 
        "id": 1452, 
        "title": "%BND_NEUMANN_DIRICHLET%___const___"
    }, 
    {
        "body": "\n\n%BND_NUSSEL% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BND_NUSSEL%___const___.html", 
        "id": 1453, 
        "title": "%BND_NUSSEL%___const___"
    }, 
    {
        "body": "\n\n%BND_RADIATION% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BND_RADIATION%___const___.html", 
        "id": 1454, 
        "title": "%BND_RADIATION%___const___"
    }, 
    {
        "body": "\n\n%BND_ROBIN% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nBC_T  ...  Temperature boundary conditions \n%BND_ROBIN%  ...  Robin boundary condition \n%BND_CAUCHY%  ...  Cauchy boundary condition \nReleases  ...  information on the MESHFREE releases \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BND_ROBIN%___const___.html", 
        "id": 1455, 
        "title": "%BND_ROBIN%___const___"
    }, 
    {
        "body": "\n\n%BND_SYSTUS% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BND_SYSTUS%___const___.html", 
        "id": 1456, 
        "title": "%BND_SYSTUS%___const___"
    }, 
    {
        "body": "\n\n%BND_VONNEU% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n%ind_p_dyn%  ...  Dynamic Pressure boundary conditions \nReleases  ...  information on the MESHFREE releases \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BND_VONNEU%___const___.html", 
        "id": 1457, 
        "title": "%BND_VONNEU%___const___"
    }, 
    {
        "body": "\n\n%BND_arcl% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BND_arcl%___const___.html", 
        "id": 1458, 
        "title": "%BND_arcl%___const___"
    }, 
    {
        "body": "\n\n%BND_arcs% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BND_arcs%___const___.html", 
        "id": 1459, 
        "title": "%BND_arcs%___const___"
    }, 
    {
        "body": "\n\n%BND_blind% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n%ind_OrganizeDTB%  ...  status for the distance to boundary computation \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BND_blind%___const___.html", 
        "id": 1460, 
        "title": "%BND_blind%___const___"
    }, 
    {
        "body": "\n\n%BND_contact% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BND_contact%___const___.html", 
        "id": 1461, 
        "title": "%BND_contact%___const___"
    }, 
    {
        "body": "\n\n%BND_contact_Explicit% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BND_contact_Explicit%___const___.html", 
        "id": 1462, 
        "title": "%BND_contact_Explicit%___const___"
    }, 
    {
        "body": "\n\n%BND_corner% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BND_corner%___const___.html", 
        "id": 1463, 
        "title": "%BND_corner%___const___"
    }, 
    {
        "body": "\n\n%BND_count_BE% ...  parameter for the real()-function (equation parser) \n\n\n  see real()  \n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BND_count_BE%___const___.html", 
        "id": 1464, 
        "title": "%BND_count_BE%___const___"
    }, 
    {
        "body": "\n\n%BND_count_NP% ...  parameter for the real()-function (equation parser) \n\n\n  see real()  \n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BND_count_NP%___const___.html", 
        "id": 1465, 
        "title": "%BND_count_NP%___const___"
    }, 
    {
        "body": "\n\n%BND_cube% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BND_cube%___const___.html", 
        "id": 1466, 
        "title": "%BND_cube%___const___"
    }, 
    {
        "body": "\n\n%BND_cylinder% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BND_cylinder%___const___.html", 
        "id": 1467, 
        "title": "%BND_cylinder%___const___"
    }, 
    {
        "body": "\n\n%BND_edge% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BND_edge%___const___.html", 
        "id": 1468, 
        "title": "%BND_edge%___const___"
    }, 
    {
        "body": "\n\n%BND_far_field% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BND_far_field%___const___.html", 
        "id": 1469, 
        "title": "%BND_far_field%___const___"
    }, 
    {
        "body": "\n\n%BND_fixed% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BND_fixed%___const___.html", 
        "id": 1470, 
        "title": "%BND_fixed%___const___"
    }, 
    {
        "body": "\n\n%BND_free% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n%ind_OrganizePC(3)%  ...  state of filling FPM-points at boundaries \n%ind_bndBubble%  ...  index of macroscopic bubbles \n%ind_kob%  ...  kob=kind of boundary \n%ind_p_dyn%  ...  Dynamic Pressure boundary conditions \n%BND_free%  ...  Direct dynamic pressure boundary conditions at free surface \nDruckerPragerModel  ...  use the GeneralYieldStress functionality to derive behavior of granular materials \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BND_free%___const___.html", 
        "id": 1471, 
        "title": "%BND_free%___const___"
    }, 
    {
        "body": "\n\n%BND_free_Barodesy% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BND_free_Barodesy%___const___.html", 
        "id": 1472, 
        "title": "%BND_free_Barodesy%___const___"
    }, 
    {
        "body": "\n\n%BND_free_HypoPlast% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BND_free_HypoPlast%___const___.html", 
        "id": 1473, 
        "title": "%BND_free_HypoPlast%___const___"
    }, 
    {
        "body": "\n\n%BND_free_InContact% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BND_free_InContact%___const___.html", 
        "id": 1474, 
        "title": "%BND_free_InContact%___const___"
    }, 
    {
        "body": "\n\n%BND_free_InContact_Explicit% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BND_free_InContact_Explicit%___const___.html", 
        "id": 1475, 
        "title": "%BND_free_InContact_Explicit%___const___"
    }, 
    {
        "body": "\n\n%BND_free_NoVisc% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BND_free_NoVisc%___const___.html", 
        "id": 1476, 
        "title": "%BND_free_NoVisc%___const___"
    }, 
    {
        "body": "\n\n%BND_free_implicit% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n%ind_p_dyn%  ...  Dynamic Pressure boundary conditions \n%BND_free_implicit%  ...  Direct dynamic pressure boundary conditions at free surface \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BND_free_implicit%___const___.html", 
        "id": 1477, 
        "title": "%BND_free_implicit%___const___"
    }, 
    {
        "body": "\n\n%BND_free_implicit_InContact% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BND_free_implicit_InContact%___const___.html", 
        "id": 1478, 
        "title": "%BND_free_implicit_InContact%___const___"
    }, 
    {
        "body": "\n\n%BND_free_implicit_InContact_Explicit% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n%BND_free_implicit_InContact_explicit%  ...  Direct dynamic pressure boundary conditions at phase boundary \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BND_free_implicit_InContact_Explicit%___const___.html", 
        "id": 1479, 
        "title": "%BND_free_implicit_InContact_Explicit%___const___"
    }, 
    {
        "body": "\n\n%BND_inflow% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n%ind_bndBubble%  ...  index of macroscopic bubbles \n%ind_kob%  ...  kob=kind of boundary \nBC_T  ...  Temperature boundary conditions \nBC_v  ...  Velocity boundary conditions \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BND_inflow%___const___.html", 
        "id": 1480, 
        "title": "%BND_inflow%___const___"
    }, 
    {
        "body": "\n\n%BND_line% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BND_line%___const___.html", 
        "id": 1481, 
        "title": "%BND_line%___const___"
    }, 
    {
        "body": "\n\n%BND_node% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BND_node%___const___.html", 
        "id": 1482, 
        "title": "%BND_node%___const___"
    }, 
    {
        "body": "\n\n%BND_none% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n%ind_kob%  ...  kob=kind of boundary \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BND_none%___const___.html", 
        "id": 1483, 
        "title": "%BND_none%___const___"
    }, 
    {
        "body": "\n\n%BND_outflow% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n%ind_bndBubble%  ...  index of macroscopic bubbles \nBC_T  ...  Temperature boundary conditions \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BND_outflow%___const___.html", 
        "id": 1484, 
        "title": "%BND_outflow%___const___"
    }, 
    {
        "body": "\n\n%BND_plane% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BND_plane%___const___.html", 
        "id": 1485, 
        "title": "%BND_plane%___const___"
    }, 
    {
        "body": "\n\n%BND_point% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BND_point%___const___.html", 
        "id": 1486, 
        "title": "%BND_point%___const___"
    }, 
    {
        "body": "\n\n%BND_quad% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BND_quad%___const___.html", 
        "id": 1487, 
        "title": "%BND_quad%___const___"
    }, 
    {
        "body": "\n\n%BND_slip% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nTextDecoration  ...  give colors of emphasis on the text \n%ind_bndBubble%  ...  index of macroscopic bubbles \n%ind_p_dyn%  ...  Dynamic Pressure boundary conditions \n%BND_slip_InContact%  ...  Velocity boundary conditions at interfaces, implicit \nBC_v  ...  Velocity boundary conditions \n%BND_slip%  ...  Velocity boundary conditions: slip with viscous friction \n%MOVE_TranslationRotation%  ...  prescribe a translation with rotation on top of it \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BND_slip%___const___.html", 
        "id": 1488, 
        "title": "%BND_slip%___const___"
    }, 
    {
        "body": "\n\n%BND_slip_InContact% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n%BND_slip_InContact%  ...  Velocity boundary conditions at interfaces, implicit \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BND_slip_InContact%___const___.html", 
        "id": 1489, 
        "title": "%BND_slip_InContact%___const___"
    }, 
    {
        "body": "\n\n%BND_slip_InContact_Explicit% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n%BND_slip_InContact_Explicit%  ...  Velocity boundary conditions at interfaces, explicit \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BND_slip_InContact_Explicit%___const___.html", 
        "id": 1490, 
        "title": "%BND_slip_InContact_Explicit%___const___"
    }, 
    {
        "body": "\n\n%BND_tria% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BND_tria%___const___.html", 
        "id": 1491, 
        "title": "%BND_tria%___const___"
    }, 
    {
        "body": "\n\n%BND_tria6N% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BND_tria6N%___const___.html", 
        "id": 1492, 
        "title": "%BND_tria6N%___const___"
    }, 
    {
        "body": "\n\n%BND_void% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BND_void%___const___.html", 
        "id": 1493, 
        "title": "%BND_void%___const___"
    }, 
    {
        "body": "\n\n%BND_wall% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nBlindOutSubstring  ...  blinds out a marked substring such that it is not rendered in the html-document  \n%ind_bndBubble%  ...  index of macroscopic bubbles \n%ind_p_dyn%  ...  Dynamic Pressure boundary conditions \n%BND_wall_nosl%  ...  Quasi-stationary dynamic pressure boundary condition \n%BND_wall%  ...  Quasi-stationary dynamic pressure boundary condition \nBC_v  ...  Velocity boundary conditions \n%BND_wall%  ...  Velocity boundary conditions: pure slip \n%MOVE_TranslationRotation%  ...  prescribe a translation with rotation on top of it \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BND_wall%___const___.html", 
        "id": 1494, 
        "title": "%BND_wall%___const___"
    }, 
    {
        "body": "\n\n%BND_wall_InContact% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BND_wall_InContact%___const___.html", 
        "id": 1495, 
        "title": "%BND_wall_InContact%___const___"
    }, 
    {
        "body": "\n\n%BND_wall_InContact_Explicit% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BND_wall_InContact_Explicit%___const___.html", 
        "id": 1496, 
        "title": "%BND_wall_InContact_Explicit%___const___"
    }, 
    {
        "body": "\n\n%BND_wall_NoLayerThickness% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nReleases  ...  information on the MESHFREE releases \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BND_wall_NoLayerThickness%___const___.html", 
        "id": 1497, 
        "title": "%BND_wall_NoLayerThickness%___const___"
    }, 
    {
        "body": "\n\n%BND_wall_nosl% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n%ind_p_dyn%  ...  Dynamic Pressure boundary conditions \nBC_v  ...  Velocity boundary conditions \n%BND_wall_nosl%  ...  Velocity boundary conditions: pure noslip \n%MOVE_TranslationRotation%  ...  prescribe a translation with rotation on top of it \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BND_wall_nosl%___const___.html", 
        "id": 1498, 
        "title": "%BND_wall_nosl%___const___"
    }, 
    {
        "body": "\n\n%BNDpoints_ExtractFromNodes% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BNDpoints_ExtractFromNodes%___const___.html", 
        "id": 1499, 
        "title": "%BNDpoints_ExtractFromNodes%___const___"
    }, 
    {
        "body": "\n\n%BOUNDARYFILLING_Always% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BOUNDARYFILLING_Always%___const___.html", 
        "id": 1500, 
        "title": "%BOUNDARYFILLING_Always%___const___"
    }, 
    {
        "body": "\n\n%BOUNDARYFILLING_Never% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BOUNDARYFILLING_Never%___const___.html", 
        "id": 1501, 
        "title": "%BOUNDARYFILLING_Never%___const___"
    }, 
    {
        "body": "\n\n%BOUNDARYFILLING_OnlyIfActiveItself% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BOUNDARYFILLING_OnlyIfActiveItself%___const___.html", 
        "id": 1502, 
        "title": "%BOUNDARYFILLING_OnlyIfActiveItself%___const___"
    }, 
    {
        "body": "\n\n%BOUNDARYFILLING_OnlyInActiveNeighborhood% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%BOUNDARYFILLING_OnlyInActiveNeighborhood%___const___.html", 
        "id": 1503, 
        "title": "%BOUNDARYFILLING_OnlyInActiveNeighborhood%___const___"
    }, 
    {
        "body": "\n\n%CHAMBER_BGK% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%CHAMBER_BGK%___const___.html", 
        "id": 1504, 
        "title": "%CHAMBER_BGK%___const___"
    }, 
    {
        "body": "\n\n%CHAMBER_DROPLETPHASE% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%CHAMBER_DROPLETPHASE%___const___.html", 
        "id": 1505, 
        "title": "%CHAMBER_DROPLETPHASE%___const___"
    }, 
    {
        "body": "\n\n%CHAMBER_Euler% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%CHAMBER_Euler%___const___.html", 
        "id": 1506, 
        "title": "%CHAMBER_Euler%___const___"
    }, 
    {
        "body": "\n\n%CHAMBER_EulerExpl% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%CHAMBER_EulerExpl%___const___.html", 
        "id": 1507, 
        "title": "%CHAMBER_EulerExpl%___const___"
    }, 
    {
        "body": "\n\n%CHAMBER_GASDYN% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%CHAMBER_GASDYN%___const___.html", 
        "id": 1508, 
        "title": "%CHAMBER_GASDYN%___const___"
    }, 
    {
        "body": "\n\n%CHAMBER_IT_000% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%CHAMBER_IT_000%___const___.html", 
        "id": 1509, 
        "title": "%CHAMBER_IT_000%___const___"
    }, 
    {
        "body": "\n\n%CHAMBER_IT_tes% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%CHAMBER_IT_tes%___const___.html", 
        "id": 1510, 
        "title": "%CHAMBER_IT_tes%___const___"
    }, 
    {
        "body": "\n\n%CHAMBER_IT_v00% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%CHAMBER_IT_v00%___const___.html", 
        "id": 1511, 
        "title": "%CHAMBER_IT_v00%___const___"
    }, 
    {
        "body": "\n\n%CHAMBER_IT_vp0% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%CHAMBER_IT_vp0%___const___.html", 
        "id": 1512, 
        "title": "%CHAMBER_IT_vp0%___const___"
    }, 
    {
        "body": "\n\n%CHAMBER_IT_vpT% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%CHAMBER_IT_vpT%___const___.html", 
        "id": 1513, 
        "title": "%CHAMBER_IT_vpT%___const___"
    }, 
    {
        "body": "\n\n%CHAMBER_KEPS% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%CHAMBER_KEPS%___const___.html", 
        "id": 1514, 
        "title": "%CHAMBER_KEPS%___const___"
    }, 
    {
        "body": "\n\n%CHAMBER_LIQUID% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%CHAMBER_LIQUID%___const___.html", 
        "id": 1515, 
        "title": "%CHAMBER_LIQUID%___const___"
    }, 
    {
        "body": "\n\n%CHAMBER_Lagrange% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%CHAMBER_Lagrange%___const___.html", 
        "id": 1516, 
        "title": "%CHAMBER_Lagrange%___const___"
    }, 
    {
        "body": "\n\n%CHAMBER_LineUp% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%CHAMBER_LineUp%___const___.html", 
        "id": 1517, 
        "title": "%CHAMBER_LineUp%___const___"
    }, 
    {
        "body": "\n\n%CHAMBER_NoLineUp% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%CHAMBER_NoLineUp%___const___.html", 
        "id": 1518, 
        "title": "%CHAMBER_NoLineUp%___const___"
    }, 
    {
        "body": "\n\n%CHAMBER_None% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%CHAMBER_None%___const___.html", 
        "id": 1519, 
        "title": "%CHAMBER_None%___const___"
    }, 
    {
        "body": "\n\n%CHAMBER_PARTICLEPHASE% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%CHAMBER_PARTICLEPHASE%___const___.html", 
        "id": 1520, 
        "title": "%CHAMBER_PARTICLEPHASE%___const___"
    }, 
    {
        "body": "\n\n%CHAMBER_POPBAL% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%CHAMBER_POPBAL%___const___.html", 
        "id": 1521, 
        "title": "%CHAMBER_POPBAL%___const___"
    }, 
    {
        "body": "\n\n%CHAMBER_SHALLOWWATER% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%CHAMBER_SHALLOWWATER%___const___.html", 
        "id": 1522, 
        "title": "%CHAMBER_SHALLOWWATER%___const___"
    }, 
    {
        "body": "\n\n%CLOCK_STATISTICS_FLIQUID% ...  parameter for the real()-function (equation parser) \n\n\n  see real()  \n\n\n\n\nThis item is referenced in:\n\n\n%CLOCK_STATISTICS_FLIQUID%  ...  CLOCK time measured for the execution of the (pure) FPM numerics, CURRENT TIME STEP \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%CLOCK_STATISTICS_FLIQUID%___const___.html", 
        "id": 1523, 
        "title": "%CLOCK_STATISTICS_FLIQUID%___const___"
    }, 
    {
        "body": "\n\n%CLOCK_STATISTICS_ORGANIZE% ...  parameter for the real()-function (equation parser) \n\n\n  see real()  \n\n\n\n\nThis item is referenced in:\n\n\n%CLOCK_STATISTICS_ORGANIZE%  ...  CLOCK time measured for the execution of the FPM organization (point cloud management, geometry operations), CURRENT TIME STEP \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%CLOCK_STATISTICS_ORGANIZE%___const___.html", 
        "id": 1524, 
        "title": "%CLOCK_STATISTICS_ORGANIZE%___const___"
    }, 
    {
        "body": "\n\n%CLOCK_STATISTICS_TOTAL_FLIQUID% ...  parameter for the real()-function (equation parser) \n\n\n  see real()  \n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%CLOCK_STATISTICS_TOTAL_FLIQUID%___const___.html", 
        "id": 1525, 
        "title": "%CLOCK_STATISTICS_TOTAL_FLIQUID%___const___"
    }, 
    {
        "body": "\n\n%CLOCK_STATISTICS_TOTAL_ORGANIZE% ...  parameter for the real()-function (equation parser) \n\n\n  see real()  \n\n\n\n\nThis item is referenced in:\n\n\nReleases  ...  information on the MESHFREE releases \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%CLOCK_STATISTICS_TOTAL_ORGANIZE%___const___.html", 
        "id": 1526, 
        "title": "%CLOCK_STATISTICS_TOTAL_ORGANIZE%___const___"
    }, 
    {
        "body": "\n\n%CLOCK_STATISTICS_TOTAL_SAMG% ...  parameter for the real()-function (equation parser) \n\n\n  see real()  \n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%CLOCK_STATISTICS_TOTAL_SAMG%___const___.html", 
        "id": 1527, 
        "title": "%CLOCK_STATISTICS_TOTAL_SAMG%___const___"
    }, 
    {
        "body": "\n\n%CODI_explicit% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%CODI_explicit%___const___.html", 
        "id": 1528, 
        "title": "%CODI_explicit%___const___"
    }, 
    {
        "body": "\n\n%CODI_implicit% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%CODI_implicit%___const___.html", 
        "id": 1529, 
        "title": "%CODI_implicit%___const___"
    }, 
    {
        "body": "\n\n%CONSTRUCT_Area% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%CONSTRUCT_Area%___const___.html", 
        "id": 1530, 
        "title": "%CONSTRUCT_Area%___const___"
    }, 
    {
        "body": "\n\n%CONSTRUCT_BoxMax% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%CONSTRUCT_BoxMax%___const___.html", 
        "id": 1531, 
        "title": "%CONSTRUCT_BoxMax%___const___"
    }, 
    {
        "body": "\n\n%CONSTRUCT_BoxMidPoint% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nBoundaryElements  ...  definition of the boundary elements to be used during simulation \nmanipulate{Alias}  ...  manipulate (move, rotate, ...) the geometry belonging to an alias-group \n%CONSTRUCT_BoxMidPoint%  ...  mid point of enclosing box around given alias-entities \nReleases  ...  information on the MESHFREE releases \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%CONSTRUCT_BoxMidPoint%___const___.html", 
        "id": 1532, 
        "title": "%CONSTRUCT_BoxMidPoint%___const___"
    }, 
    {
        "body": "\n\n%CONSTRUCT_BoxMidPoint_Abs% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%CONSTRUCT_BoxMidPoint_Abs%___const___.html", 
        "id": 1533, 
        "title": "%CONSTRUCT_BoxMidPoint_Abs%___const___"
    }, 
    {
        "body": "\n\n%CONSTRUCT_BoxMin% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%CONSTRUCT_BoxMin%___const___.html", 
        "id": 1534, 
        "title": "%CONSTRUCT_BoxMin%___const___"
    }, 
    {
        "body": "\n\n%CONSTRUCT_COG% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%CONSTRUCT_COG%___const___.html", 
        "id": 1535, 
        "title": "%CONSTRUCT_COG%___const___"
    }, 
    {
        "body": "\n\n%CONSTRUCT_EstablishCurveVolumeVersusHeight% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n%CONSTRUCT_EstablishCurveVolumeVersusHeight%  ...  establish a 2-row-curve that provides the height-volume-relation of a closed part of geometry \nReleases  ...  information on the MESHFREE releases \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%CONSTRUCT_EstablishCurveVolumeVersusHeight%___const___.html", 
        "id": 1536, 
        "title": "%CONSTRUCT_EstablishCurveVolumeVersusHeight%___const___"
    }, 
    {
        "body": "\n\n%CONSTRUCT_Normal% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n%INTEGRATION_FLUX%  ...  time integration of a flux by simply counting the FPM-points that slip over a given control surface \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%CONSTRUCT_Normal%___const___.html", 
        "id": 1537, 
        "title": "%CONSTRUCT_Normal%___const___"
    }, 
    {
        "body": "\n\n%CONSTRUCT_NormalDividedByArea% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%CONSTRUCT_NormalDividedByArea%___const___.html", 
        "id": 1538, 
        "title": "%CONSTRUCT_NormalDividedByArea%___const___"
    }, 
    {
        "body": "\n\n%CONSTRUCT_PointBasedOnAbsoluteVolume% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%CONSTRUCT_PointBasedOnAbsoluteVolume%___const___.html", 
        "id": 1539, 
        "title": "%CONSTRUCT_PointBasedOnAbsoluteVolume%___const___"
    }, 
    {
        "body": "\n\n%CONSTRUCT_PointBasedOnRelativeVolume% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%CONSTRUCT_PointBasedOnRelativeVolume%___const___.html", 
        "id": 1540, 
        "title": "%CONSTRUCT_PointBasedOnRelativeVolume%___const___"
    }, 
    {
        "body": "\n\n%CONSTRUCT_Tangent1% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%CONSTRUCT_Tangent1%___const___.html", 
        "id": 1541, 
        "title": "%CONSTRUCT_Tangent1%___const___"
    }, 
    {
        "body": "\n\n%CONSTRUCT_Tangent2% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%CONSTRUCT_Tangent2%___const___.html", 
        "id": 1542, 
        "title": "%CONSTRUCT_Tangent2%___const___"
    }, 
    {
        "body": "\n\n%CONSTRUCT_Volume% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%CONSTRUCT_Volume%___const___.html", 
        "id": 1543, 
        "title": "%CONSTRUCT_Volume%___const___"
    }, 
    {
        "body": "\n\n%CONSTRUCT_VolumeForGivenHeight% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n%CONSTRUCT_VolumeForGivenHeight%  ...  compute the volume of a closed body restricted by a certain height \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%CONSTRUCT_VolumeForGivenHeight%___const___.html", 
        "id": 1544, 
        "title": "%CONSTRUCT_VolumeForGivenHeight%___const___"
    }, 
    {
        "body": "\n\n%COORDTRANS_cone% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%COORDTRANS_cone%___const___.html", 
        "id": 1545, 
        "title": "%COORDTRANS_cone%___const___"
    }, 
    {
        "body": "\n\n%COORDTRANS_linear% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%COORDTRANS_linear%___const___.html", 
        "id": 1546, 
        "title": "%COORDTRANS_linear%___const___"
    }, 
    {
        "body": "\n\n%COORDTRANS_radial% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%COORDTRANS_radial%___const___.html", 
        "id": 1547, 
        "title": "%COORDTRANS_radial%___const___"
    }, 
    {
        "body": "\n\n%COORDTRANS_ring% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%COORDTRANS_ring%___const___.html", 
        "id": 1548, 
        "title": "%COORDTRANS_ring%___const___"
    }, 
    {
        "body": "\n\n%COORDTRANS_spherical% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%COORDTRANS_spherical%___const___.html", 
        "id": 1549, 
        "title": "%COORDTRANS_spherical%___const___"
    }, 
    {
        "body": "\n\n%COUPLE_PAM% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%COUPLE_PAM%___const___.html", 
        "id": 1550, 
        "title": "%COUPLE_PAM%___const___"
    }, 
    {
        "body": "\n\n%COUPLE_SYSTUS% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%COUPLE_SYSTUS%___const___.html", 
        "id": 1551, 
        "title": "%COUPLE_SYSTUS%___const___"
    }, 
    {
        "body": "\n\n%CPU_STATISTICS_FLIQUID% ...  parameter for the real()-function (equation parser) \n\n\n  see real()  \n\n\n\n\nThis item is referenced in:\n\n\n%CPU_STATISTICS_FLIQUID%  ...  CPU time measured for the execution of the (pure) FPM numerics, CURRENT TIME STEP \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%CPU_STATISTICS_FLIQUID%___const___.html", 
        "id": 1552, 
        "title": "%CPU_STATISTICS_FLIQUID%___const___"
    }, 
    {
        "body": "\n\n%CPU_STATISTICS_ORGANIZE% ...  parameter for the real()-function (equation parser) \n\n\n  see real()  \n\n\n\n\nThis item is referenced in:\n\n\n%CPU_STATISTICS_ORGANIZE%  ...  CPU time measured for the execution of the FPM organization (point cloud management, geometry operations), CURRENT TIME STEP \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%CPU_STATISTICS_ORGANIZE%___const___.html", 
        "id": 1553, 
        "title": "%CPU_STATISTICS_ORGANIZE%___const___"
    }, 
    {
        "body": "\n\n%CPU_STATISTICS_TOTAL_FLIQUID% ...  parameter for the real()-function (equation parser) \n\n\n  see real()  \n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%CPU_STATISTICS_TOTAL_FLIQUID%___const___.html", 
        "id": 1554, 
        "title": "%CPU_STATISTICS_TOTAL_FLIQUID%___const___"
    }, 
    {
        "body": "\n\n%CUMU_NONE% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nSAVE_BE_MONITOR_ITEM  ...  monitor item to be saved per element for visualization \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%CUMU_NONE%___const___.html", 
        "id": 1555, 
        "title": "%CUMU_NONE%___const___"
    }, 
    {
        "body": "\n\n%CPU_STATISTICS_TOTAL_ORGANIZE% ...  parameter for the real()-function (equation parser) \n\n\n  see real()  \n\n\n\n\nThis item is referenced in:\n\n\nReleases  ...  information on the MESHFREE releases \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%CPU_STATISTICS_TOTAL_ORGANIZE%___const___.html", 
        "id": 1556, 
        "title": "%CPU_STATISTICS_TOTAL_ORGANIZE%___const___"
    }, 
    {
        "body": "\n\n%CUMU_INTERVAL% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nSAVE_BE_MONITOR_ITEM  ...  monitor item to be saved per element for visualization \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%CUMU_INTERVAL%___const___.html", 
        "id": 1557, 
        "title": "%CUMU_INTERVAL%___const___"
    }, 
    {
        "body": "\n\n%CUMU_SIMULATION% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nSAVE_BE_MONITOR_ITEM  ...  monitor item to be saved per element for visualization \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%CUMU_SIMULATION%___const___.html", 
        "id": 1558, 
        "title": "%CUMU_SIMULATION%___const___"
    }, 
    {
        "body": "\n\n%DIFFOP_gradient_DELAUNAY% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%DIFFOP_gradient_DELAUNAY%___const___.html", 
        "id": 1559, 
        "title": "%DIFFOP_gradient_DELAUNAY%___const___"
    }, 
    {
        "body": "\n\n%DIFFOP_gradient_GASDYN% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%DIFFOP_gradient_GASDYN%___const___.html", 
        "id": 1560, 
        "title": "%DIFFOP_gradient_GASDYN%___const___"
    }, 
    {
        "body": "\n\n%DIFFOP_gradient_MLS% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%DIFFOP_gradient_MLS%___const___.html", 
        "id": 1561, 
        "title": "%DIFFOP_gradient_MLS%___const___"
    }, 
    {
        "body": "\n\n%DIFFOP_laplace_GASDYN% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%DIFFOP_laplace_GASDYN%___const___.html", 
        "id": 1562, 
        "title": "%DIFFOP_laplace_GASDYN%___const___"
    }, 
    {
        "body": "\n\n%DIFFOP_laplace_LS% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%DIFFOP_laplace_LS%___const___.html", 
        "id": 1563, 
        "title": "%DIFFOP_laplace_LS%___const___"
    }, 
    {
        "body": "\n\n%DIFFOP_laplace_MLS% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%DIFFOP_laplace_MLS%___const___.html", 
        "id": 1564, 
        "title": "%DIFFOP_laplace_MLS%___const___"
    }, 
    {
        "body": "\n\n%DIFFOP_laplace_optimized% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%DIFFOP_laplace_optimized%___const___.html", 
        "id": 1565, 
        "title": "%DIFFOP_laplace_optimized%___const___"
    }, 
    {
        "body": "\n\n%DIFFOP_laplace_simplex% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%DIFFOP_laplace_simplex%___const___.html", 
        "id": 1566, 
        "title": "%DIFFOP_laplace_simplex%___const___"
    }, 
    {
        "body": "\n\n%EQN_Proj_ALL% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nprojY()  ...  Projection of FPM-entity by smooth, least-squares  approximation \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%EQN_Proj_ALL%___const___.html", 
        "id": 1567, 
        "title": "%EQN_Proj_ALL%___const___"
    }, 
    {
        "body": "\n\n%EQN_Proj_BND% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nprojY()  ...  Projection of FPM-entity by smooth, least-squares  approximation \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%EQN_Proj_BND%___const___.html", 
        "id": 1568, 
        "title": "%EQN_Proj_BND%___const___"
    }, 
    {
        "body": "\n\n%EQN_Proj_INT% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nprojY()  ...  Projection of FPM-entity by smooth, least-squares  approximation \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%EQN_Proj_INT%___const___.html", 
        "id": 1569, 
        "title": "%EQN_Proj_INT%___const___"
    }, 
    {
        "body": "\n\n%EVENT_AbortFPM% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nEVENT  ...  events defined for the point cloud \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%EVENT_AbortFPM%___const___.html", 
        "id": 1570, 
        "title": "%EVENT_AbortFPM%___const___"
    }, 
    {
        "body": "\n\n%EVENT_DeletePoint% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nEVENT  ...  events defined for the point cloud \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%EVENT_DeletePoint%___const___.html", 
        "id": 1571, 
        "title": "%EVENT_DeletePoint%___const___"
    }, 
    {
        "body": "\n\n%EVENT_FunctionManipulation% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nEVENT  ...  events defined for the point cloud \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%EVENT_FunctionManipulation%___const___.html", 
        "id": 1572, 
        "title": "%EVENT_FunctionManipulation%___const___"
    }, 
    {
        "body": "\n\n%EVENT_Msg% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nEVENT  ...  events defined for the point cloud \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%EVENT_Msg%___const___.html", 
        "id": 1573, 
        "title": "%EVENT_Msg%___const___"
    }, 
    {
        "body": "\n\n%EVENT_PerformAfterHowManyTimeCycles% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nEVENT  ...  events defined for the point cloud \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%EVENT_PerformAfterHowManyTimeCycles%___const___.html", 
        "id": 1574, 
        "title": "%EVENT_PerformAfterHowManyTimeCycles%___const___"
    }, 
    {
        "body": "\n\n%EVENT_StopFPM% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nEVENT  ...  events defined for the point cloud \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%EVENT_StopFPM%___const___.html", 
        "id": 1575, 
        "title": "%EVENT_StopFPM%___const___"
    }, 
    {
        "body": "\n\n%ElapsedTimeIntegrationCycle% ...  parameter for the real()-function (equation parser) \n\n\n  see real()  \n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%ElapsedTimeIntegrationCycle%___const___.html", 
        "id": 1576, 
        "title": "%ElapsedTimeIntegrationCycle%___const___"
    }, 
    {
        "body": "\n\n%ElapsedTimePointOrganization% ...  parameter for the real()-function (equation parser) \n\n\n  see real()  \n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%ElapsedTimePointOrganization%___const___.html", 
        "id": 1577, 
        "title": "%ElapsedTimePointOrganization%___const___"
    }, 
    {
        "body": "\n\n%FLIQUID_NbParticles% ...  parameter for the real()-function (equation parser) \n\n\n  see real()  \n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%FLIQUID_NbParticles%___const___.html", 
        "id": 1578, 
        "title": "%FLIQUID_NbParticles%___const___"
    }, 
    {
        "body": "\n\n%FPM_KineticEnergy% ...  parameter for the real()-function (equation parser) \n\n\n  see real()  \n\n\n\n\nThis item is referenced in:\n\n\n%FPM_KineticEnergy%  ...  provide total kinetic energy of a given chamber \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%FPM_KineticEnergy%___const___.html", 
        "id": 1579, 
        "title": "%FPM_KineticEnergy%___const___"
    }, 
    {
        "body": "\n\n%FPM_KineticEnergy_Defect_O2% ...  parameter for the real()-function (equation parser) \n\n\n  see real()  \n\n\n\n\nThis item is referenced in:\n\n\n%FPM_KineticEnergy_Defect_O2%  ...  second order defect of kinetic energy during time integration \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%FPM_KineticEnergy_Defect_O2%___const___.html", 
        "id": 1580, 
        "title": "%FPM_KineticEnergy_Defect_O2%___const___"
    }, 
    {
        "body": "\n\n%FPM_KineticEnergy_Defect_gradPv% ...  parameter for the real()-function (equation parser) \n\n\n  see real()  \n\n\n\n\nThis item is referenced in:\n\n\n%FPM_KineticEnergy_Defect_gradPv%  ...  first order defect of kinetic energy during time integration due to pressure \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%FPM_KineticEnergy_Defect_gradPv%___const___.html", 
        "id": 1581, 
        "title": "%FPM_KineticEnergy_Defect_gradPv%___const___"
    }, 
    {
        "body": "\n\n%FPM_KineticEnergy_Defect_rhogDv% ...  parameter for the real()-function (equation parser) \n\n\n  see real()  \n\n\n\n\nThis item is referenced in:\n\n\n%FPM_KineticEnergy_Defect_rhogDv%  ...  first order defect of kinetic energy during time integration due to gravity \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%FPM_KineticEnergy_Defect_rhogDv%___const___.html", 
        "id": 1582, 
        "title": "%FPM_KineticEnergy_Defect_rhogDv%___const___"
    }, 
    {
        "body": "\n\n%FPM_KineticEnergy_DifferenceInOrganize% ...  parameter for the real()-function (equation parser) \n\n\n  see real()  \n\n\n\n\nThis item is referenced in:\n\n\n%FPM_KineticEnergy_DifferenceInOrganize%  ...  change of kinetic energy in some chamber during the organization step of FPM \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%FPM_KineticEnergy_DifferenceInOrganize%___const___.html", 
        "id": 1583, 
        "title": "%FPM_KineticEnergy_DifferenceInOrganize%___const___"
    }, 
    {
        "body": "\n\n%FPM_KineticEnergy_DifferenceInOrganize2% ...  parameter for the real()-function (equation parser) \n\n\n  see real()  \n\n\n\n\nThis item is referenced in:\n\n\n%FPM_KineticEnergy_DifferenceInOrganize2%  ...  change of kinetic energy in some chamber during organizations at the end of the time step (should be strictly zero, just to check) \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%FPM_KineticEnergy_DifferenceInOrganize2%___const___.html", 
        "id": 1584, 
        "title": "%FPM_KineticEnergy_DifferenceInOrganize2%___const___"
    }, 
    {
        "body": "\n\n%FPM_KineticEnergy_DifferenceInTimeStep% ...  parameter for the real()-function (equation parser) \n\n\n  see real()  \n\n\n\n\nThis item is referenced in:\n\n\n%FPM_KineticEnergy_DifferenceInTimeStep%  ...  change of kinetic energy in some chamber during the execution of the time step \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%FPM_KineticEnergy_DifferenceInTimeStep%___const___.html", 
        "id": 1585, 
        "title": "%FPM_KineticEnergy_DifferenceInTimeStep%___const___"
    }, 
    {
        "body": "\n\n%FPM_VOLUME_ACTUAL% ...  parameter for the real()-function (equation parser) \n\n\n  see real()  \n\n\n\n\nThis item is referenced in:\n\n\n%FPM_VOLUME_ACTUAL%  ...  actual value of volume in a given chamber \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%FPM_VOLUME_ACTUAL%___const___.html", 
        "id": 1586, 
        "title": "%FPM_VOLUME_ACTUAL%___const___"
    }, 
    {
        "body": "\n\n%FPM_VOLUME_DeletedAtMetaplanes% ...  parameter for the real()-function (equation parser) \n\n\n  see real()  \n\n\n\n\nThis item is referenced in:\n\n\n%FPM_VOLUME_DeletedAtMetaplanes%  ...  volume reduced by deletion of FPM points at metaplanes in the current time cycle \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%FPM_VOLUME_DeletedAtMetaplanes%___const___.html", 
        "id": 1587, 
        "title": "%FPM_VOLUME_DeletedAtMetaplanes%___const___"
    }, 
    {
        "body": "\n\n%FPM_VOLUME_TARGET% ...  parameter for the real()-function (equation parser) \n\n\n  see real()  \n\n\n\n\nThis item is referenced in:\n\n\n%FPM_VOLUME_TARGET%  ...  target value of volume in a given chamber \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%FPM_VOLUME_TARGET%___const___.html", 
        "id": 1588, 
        "title": "%FPM_VOLUME_TARGET%___const___"
    }, 
    {
        "body": "\n\n%GASDYN_Mass% ...  parameter for the real()-function (equation parser) \n\n\n  see real()  \n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%GASDYN_Mass%___const___.html", 
        "id": 1589, 
        "title": "%GASDYN_Mass%___const___"
    }, 
    {
        "body": "\n\n%GASDYN_MassAnalytical% ...  parameter for the real()-function (equation parser) \n\n\n  see real()  \n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%GASDYN_MassAnalytical%___const___.html", 
        "id": 1590, 
        "title": "%GASDYN_MassAnalytical%___const___"
    }, 
    {
        "body": "\n\n%GASDYN_MassCorrection% ...  parameter for the real()-function (equation parser) \n\n\n  see real()  \n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%GASDYN_MassCorrection%___const___.html", 
        "id": 1591, 
        "title": "%GASDYN_MassCorrection%___const___"
    }, 
    {
        "body": "\n\n%GASDYN_TotalEnergy% ...  parameter for the real()-function (equation parser) \n\n\n  see real()  \n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%GASDYN_TotalEnergy%___const___.html", 
        "id": 1592, 
        "title": "%GASDYN_TotalEnergy%___const___"
    }, 
    {
        "body": "\n\n%GASDYN_TotalEnergyAnalytical% ...  parameter for the real()-function (equation parser) \n\n\n  see real()  \n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%GASDYN_TotalEnergyAnalytical%___const___.html", 
        "id": 1593, 
        "title": "%GASDYN_TotalEnergyAnalytical%___const___"
    }, 
    {
        "body": "\n\n%GASDYN_TotalEnergyCorrection% ...  parameter for the real()-function (equation parser) \n\n\n  see real()  \n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%GASDYN_TotalEnergyCorrection%___const___.html", 
        "id": 1594, 
        "title": "%GASDYN_TotalEnergyCorrection%___const___"
    }, 
    {
        "body": "\n\n%GEO_Inside% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n%GEO_Tube%  ...  reorient a part of the geometry in the tube sense \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%GEO_Inside%___const___.html", 
        "id": 1595, 
        "title": "%GEO_Inside%___const___"
    }, 
    {
        "body": "\n\n%GEO_Outside% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n%GEO_Tube%  ...  reorient a part of the geometry in the tube sense \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%GEO_Outside%___const___.html", 
        "id": 1596, 
        "title": "%GEO_Outside%___const___"
    }, 
    {
        "body": "\n\n%GEO_RemoveClusterByIndex% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%GEO_RemoveClusterByIndex%___const___.html", 
        "id": 1597, 
        "title": "%GEO_RemoveClusterByIndex%___const___"
    }, 
    {
        "body": "\n\n%GEO_RemoveClusterClosestToGivenPoint% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%GEO_RemoveClusterClosestToGivenPoint%___const___.html", 
        "id": 1598, 
        "title": "%GEO_RemoveClusterClosestToGivenPoint%___const___"
    }, 
    {
        "body": "\n\n%GEO_Tube% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n%GEO_Tube%  ...  reorient a part of the geometry in the tube sense \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%GEO_Tube%___const___.html", 
        "id": 1599, 
        "title": "%GEO_Tube%___const___"
    }, 
    {
        "body": "\n\n%GEO_Vector% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%GEO_Vector%___const___.html", 
        "id": 1600, 
        "title": "%GEO_Vector%___const___"
    }, 
    {
        "body": "\n\n%GradtEtaGrad_DirectApproximation% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%GradtEtaGrad_DirectApproximation%___const___.html", 
        "id": 1601, 
        "title": "%GradtEtaGrad_DirectApproximation%___const___"
    }, 
    {
        "body": "\n\n%GradtEtaGrad_Identity% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%GradtEtaGrad_Identity%___const___.html", 
        "id": 1602, 
        "title": "%GradtEtaGrad_Identity%___const___"
    }, 
    {
        "body": "\n\n%GradtEtaGrad_StarStencil% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%GradtEtaGrad_StarStencil%___const___.html", 
        "id": 1603, 
        "title": "%GradtEtaGrad_StarStencil%___const___"
    }, 
    {
        "body": "\n\n%H_constant% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nSMOOTH_LENGTH  ...  provide a function of smoothing length \n%H_constant%  ...  constant smoothing length, or smoothing length given as equation \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%H_constant%___const___.html", 
        "id": 1604, 
        "title": "%H_constant%___const___"
    }, 
    {
        "body": "\n\n%H_linear% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nSMOOTH_LENGTH  ...  provide a function of smoothing length \n%H_linear%  ...  constant smoothing length, or smoothing length given as equation \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%H_linear%___const___.html", 
        "id": 1605, 
        "title": "%H_linear%___const___"
    }, 
    {
        "body": "\n\n%H_radial% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nSMOOTH_LENGTH  ...  provide a function of smoothing length \n%H_radial%  ...  constant smoothing length, or smoothing length given as equation \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%H_radial%___const___.html", 
        "id": 1606, 
        "title": "%H_radial%___const___"
    }, 
    {
        "body": "\n\n%H_ring% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nSMOOTH_LENGTH  ...  provide a function of smoothing length \n%H_ring%  ...  constant smoothing length, or smoothing length given as equation \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%H_ring%___const___.html", 
        "id": 1607, 
        "title": "%H_ring%___const___"
    }, 
    {
        "body": "\n\n%H_spherical% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nSMOOTH_LENGTH  ...  provide a function of smoothing length \n%H_spherical%  ...  provide a spherical distribution of H around points or geometry elements \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%H_spherical%___const___.html", 
        "id": 1608, 
        "title": "%H_spherical%___const___"
    }, 
    {
        "body": "\n\n%INTEGRATION_ABSFLUX% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nINTEGRATION  ...  Integration of the simulation results \n%INTEGRATION_FLUX%  ...  time integration of a flux by simply counting the FPM-points that slip over a given control surface \n%INTEGRATION_ABSFLUX%  ...  absolute value of a flux by simply counting the FPM-points that slip over a given control surface in either direction \n%INTEGRATION_ABSFLUX_TIME%  ...  time integration of the absolute value of a flux by simply counting the FPM-points that slip over a given control surface i eitehr direction \nReleases  ...  information on the MESHFREE releases \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%INTEGRATION_ABSFLUX%___const___.html", 
        "id": 1609, 
        "title": "%INTEGRATION_ABSFLUX%___const___"
    }, 
    {
        "body": "\n\n%INTEGRATION_ABSFLUX_TIME% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nINTEGRATION  ...  Integration of the simulation results \n%INTEGRATION_FLUX%  ...  time integration of a flux by simply counting the FPM-points that slip over a given control surface \n%INTEGRATION_ABSFLUX%  ...  absolute value of a flux by simply counting the FPM-points that slip over a given control surface in either direction \nReleases  ...  information on the MESHFREE releases \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%INTEGRATION_ABSFLUX_TIME%___const___.html", 
        "id": 1610, 
        "title": "%INTEGRATION_ABSFLUX_TIME%___const___"
    }, 
    {
        "body": "\n\n%INTEGRATION_BND% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nINTEGRATION  ...  Integration of the simulation results \n%INTEGRATION_BND%  ...  Integration of a vector valued function along pieces of boundary \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%INTEGRATION_BND%___const___.html", 
        "id": 1611, 
        "title": "%INTEGRATION_BND%___const___"
    }, 
    {
        "body": "\n\n%INTEGRATION_BND_DIRECT% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nINTEGRATION  ...  Integration of the simulation results \n%INTEGRATION_BND_DIRECT%  ...  Integration of a scalar value along pieces of boundary \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%INTEGRATION_BND_DIRECT%___const___.html", 
        "id": 1612, 
        "title": "%INTEGRATION_BND_DIRECT%___const___"
    }, 
    {
        "body": "\n\n%INTEGRATION_BND_DIRECT_Proj_BND% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nINTEGRATION  ...  Integration of the simulation results \nReleases  ...  information on the MESHFREE releases \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%INTEGRATION_BND_DIRECT_Proj_BND%___const___.html", 
        "id": 1613, 
        "title": "%INTEGRATION_BND_DIRECT_Proj_BND%___const___"
    }, 
    {
        "body": "\n\n%INTEGRATION_BND_DIRECT_TIME% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nINTEGRATION  ...  Integration of the simulation results \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%INTEGRATION_BND_DIRECT_TIME%___const___.html", 
        "id": 1614, 
        "title": "%INTEGRATION_BND_DIRECT_TIME%___const___"
    }, 
    {
        "body": "\n\n%INTEGRATION_BND_DIRECT_TIME_Proj_BND% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nINTEGRATION  ...  Integration of the simulation results \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%INTEGRATION_BND_DIRECT_TIME_Proj_BND%___const___.html", 
        "id": 1615, 
        "title": "%INTEGRATION_BND_DIRECT_TIME_Proj_BND%___const___"
    }, 
    {
        "body": "\n\n%INTEGRATION_BND_OUTSIDE% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%INTEGRATION_BND_OUTSIDE%___const___.html", 
        "id": 1616, 
        "title": "%INTEGRATION_BND_OUTSIDE%___const___"
    }, 
    {
        "body": "\n\n%INTEGRATION_BND_TIME% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nINTEGRATION  ...  Integration of the simulation results \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%INTEGRATION_BND_TIME%___const___.html", 
        "id": 1617, 
        "title": "%INTEGRATION_BND_TIME%___const___"
    }, 
    {
        "body": "\n\n%INTEGRATION_Comment% ...  comment/remark specifier for intergation statements \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%INTEGRATION_Comment%___const___.html", 
        "id": 1618, 
        "title": "%INTEGRATION_Comment%___const___"
    }, 
    {
        "body": "\n\n%INTEGRATION_FLUX% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nINTEGRATION  ...  Integration of the simulation results \n%INTEGRATION_FLUX%  ...  time integration of a flux by simply counting the FPM-points that slip over a given control surface \n%INTEGRATION_FLUX_TIME%  ...  time integration of a flux by simply counting the FPM-points that slip over a given control surface \n%MONITORPOINTS_CREATION_PenetrationOfBlindAndEmptyBoundary%  ...  create monitor point if FPM point penetrates BND_BlindAndEmpty boundaries \nReleases  ...  information on the MESHFREE releases \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%INTEGRATION_FLUX%___const___.html", 
        "id": 1619, 
        "title": "%INTEGRATION_FLUX%___const___"
    }, 
    {
        "body": "\n\n%MAXIMUM_BND% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nINTEGRATION  ...  Integration of the simulation results \n%MAXIMUM_BND%  ...  maximum of a functional based on boundary FPM points \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%MAXIMUM_BND%___const___.html", 
        "id": 1620, 
        "title": "%MAXIMUM_BND%___const___"
    }, 
    {
        "body": "\n\n%MAXIMUM_INT% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nINTEGRATION  ...  Integration of the simulation results \n%MAXIMUM_INT%  ...  maximum of a functional based on interior FPM points \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%MAXIMUM_INT%___const___.html", 
        "id": 1621, 
        "title": "%MAXIMUM_INT%___const___"
    }, 
    {
        "body": "\n\n%MED_ADBLUE% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%MED_ADBLUE%___const___.html", 
        "id": 1622, 
        "title": "%MED_ADBLUE%___const___"
    }, 
    {
        "body": "\n\n%MED_BARODESY% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%MED_BARODESY%___const___.html", 
        "id": 1623, 
        "title": "%MED_BARODESY%___const___"
    }, 
    {
        "body": "\n\n%INTEGRATION_FLUX_TIME% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nINTEGRATION  ...  Integration of the simulation results \n%INTEGRATION_FLUX%  ...  time integration of a flux by simply counting the FPM-points that slip over a given control surface \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%INTEGRATION_FLUX_TIME%___const___.html", 
        "id": 1624, 
        "title": "%INTEGRATION_FLUX_TIME%___const___"
    }, 
    {
        "body": "\n\n%INTEGRATION_Header% ...  comment/remark specifier for intergation statements \n\n\n\n\n\nThis item is referenced in:\n\n\n__HeaderInfoOrComments__  ...  optionally add comments to your intergration items \n%INTEGRATION_Header%  ...  item to signalize that heade information is given \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%INTEGRATION_Header%___const___.html", 
        "id": 1625, 
        "title": "%INTEGRATION_Header%___const___"
    }, 
    {
        "body": "\n\n%MED_CARREAU% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%MED_CARREAU%___const___.html", 
        "id": 1626, 
        "title": "%MED_CARREAU%___const___"
    }, 
    {
        "body": "\n\n%MED_DOUGH% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%MED_DOUGH%___const___.html", 
        "id": 1627, 
        "title": "%MED_DOUGH%___const___"
    }, 
    {
        "body": "\n\n%MED_GLASS% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%MED_GLASS%___const___.html", 
        "id": 1628, 
        "title": "%MED_GLASS%___const___"
    }, 
    {
        "body": "\n\n%MED_HOOK% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%MED_HOOK%___const___.html", 
        "id": 1629, 
        "title": "%MED_HOOK%___const___"
    }, 
    {
        "body": "\n\n%MED_PUR% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%MED_PUR%___const___.html", 
        "id": 1630, 
        "title": "%MED_PUR%___const___"
    }, 
    {
        "body": "\n\n%MED_VFT% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%MED_VFT%___const___.html", 
        "id": 1631, 
        "title": "%MED_VFT%___const___"
    }, 
    {
        "body": "\n\n%MED_WATER% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%MED_WATER%___const___.html", 
        "id": 1632, 
        "title": "%MED_WATER%___const___"
    }, 
    {
        "body": "\n\n%INTEGRATION_INT% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nINTEGRATION  ...  Integration of the simulation results \n__SelectionFeature__  ...  additional option to further select FPM points for the integration statement \n__HeaderInfoOrComments__  ...  optionally add comments to your intergration items \n%INTEGRATION_INT%  ...  volume integration of a functional over a given material \n%INTEGRATION_INT_TIME%  ...  volume and time integration of a functional over a given material \nReleases  ...  information on the MESHFREE releases \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%INTEGRATION_INT%___const___.html", 
        "id": 1633, 
        "title": "%INTEGRATION_INT%___const___"
    }, 
    {
        "body": "\n\n%MED_air% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%MED_air%___const___.html", 
        "id": 1634, 
        "title": "%MED_air%___const___"
    }, 
    {
        "body": "\n\n%INTEGRATION_INT_TIME% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n%INTEGRATION_INT%  ...  volume integration of a functional over a given material \n%INTEGRATION_INT_TIME%  ...  volume and time integration of a functional over a given material \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%INTEGRATION_INT_TIME%___const___.html", 
        "id": 1635, 
        "title": "%INTEGRATION_INT_TIME%___const___"
    }, 
    {
        "body": "\n\n%MED_foam% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%MED_foam%___const___.html", 
        "id": 1636, 
        "title": "%MED_foam%___const___"
    }, 
    {
        "body": "\n\n%INTEGRATION_Remark% ...  comment/remark specifier for intergation statements \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%INTEGRATION_Remark%___const___.html", 
        "id": 1637, 
        "title": "%INTEGRATION_Remark%___const___"
    }, 
    {
        "body": "\n\n%MED_fuel% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%MED_fuel%___const___.html", 
        "id": 1638, 
        "title": "%MED_fuel%___const___"
    }, 
    {
        "body": "\n\n%INTEGRATION_Values(1)% ...  deprecated \n\n\n  instead, use integ()  \n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%INTEGRATION_Values(1)%___const___.html", 
        "id": 1639, 
        "title": "%INTEGRATION_Values(1)%___const___"
    }, 
    {
        "body": "\n\n%MED_none% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%MED_none%___const___.html", 
        "id": 1640, 
        "title": "%MED_none%___const___"
    }, 
    {
        "body": "\n\n%MINIMUM_BND% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nINTEGRATION  ...  Integration of the simulation results \n%MINIMUM_BND%  ...  minimum of a functinal based on boundary FPM points \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%MINIMUM_BND%___const___.html", 
        "id": 1641, 
        "title": "%MINIMUM_BND%___const___"
    }, 
    {
        "body": "\n\n%MINIMUM_INT% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nINTEGRATION  ...  Integration of the simulation results \n%MINIMUM_INT%  ...  minimum of a functinal based on interior FPM points \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%MINIMUM_INT%___const___.html", 
        "id": 1642, 
        "title": "%MINIMUM_INT%___const___"
    }, 
    {
        "body": "\n\n%INTEGRATION_Values(2)% ...  deprecated \n\n\n  instead, use integ()  \n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%INTEGRATION_Values(2)%___const___.html", 
        "id": 1643, 
        "title": "%INTEGRATION_Values(2)%___const___"
    }, 
    {
        "body": "\n\n%INTEGRATION_Values(3)% ...  deprecated \n\n\n  instead, use integ()  \n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%INTEGRATION_Values(3)%___const___.html", 
        "id": 1644, 
        "title": "%INTEGRATION_Values(3)%___const___"
    }, 
    {
        "body": "\n\n%INTEGRATION_Values(4)% ...  deprecated \n\n\n  instead, use integ()  \n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%INTEGRATION_Values(4)%___const___.html", 
        "id": 1645, 
        "title": "%INTEGRATION_Values(4)%___const___"
    }, 
    {
        "body": "\n\n%INTEGRATION_Values(5)% ...  deprecated \n\n\n  instead, use integ()  \n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%INTEGRATION_Values(5)%___const___.html", 
        "id": 1646, 
        "title": "%INTEGRATION_Values(5)%___const___"
    }, 
    {
        "body": "\n\n%MOVE_bogen% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%MOVE_bogen%___const___.html", 
        "id": 1647, 
        "title": "%MOVE_bogen%___const___"
    }, 
    {
        "body": "\n\n%MASSFLOW_DROPLETPHASE% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%MASSFLOW_DROPLETPHASE%___const___.html", 
        "id": 1648, 
        "title": "%MASSFLOW_DROPLETPHASE%___const___"
    }, 
    {
        "body": "\n\n%MED_HYPOPLAST% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%MED_HYPOPLAST%___const___.html", 
        "id": 1649, 
        "title": "%MED_HYPOPLAST%___const___"
    }, 
    {
        "body": "\n\n%MED_JOHNSON_COOK% ...  specifier for the Johnson Cook Stress flow stress model \n\n\n  This constant can be used to prescribe johnson-cook elasticity behavior in terms of the shear modulus \n  see mue \n\n\n\n\nThis item is referenced in:\n\n\nJohnsonCook  ...  Johnson-Cook model  \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%MED_JOHNSON_COOK%___const___.html", 
        "id": 1650, 
        "title": "%MED_JOHNSON_COOK%___const___"
    }, 
    {
        "body": "\n\n%MED_JOHNSON_COOK_PROJ% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%MED_JOHNSON_COOK_PROJ%___const___.html", 
        "id": 1651, 
        "title": "%MED_JOHNSON_COOK_PROJ%___const___"
    }, 
    {
        "body": "\n\n%MED_YIELDSTRESS% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nGeneralYieldStress  ...  provide a genreal formulation/model of the yield stress  \nDruckerPragerModel  ...  use the GeneralYieldStress functionality to derive behavior of granular materials \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%MED_YIELDSTRESS%___const___.html", 
        "id": 1652, 
        "title": "%MED_YIELDSTRESS%___const___"
    }, 
    {
        "body": "\n\n%MOVE_foam% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%MOVE_foam%___const___.html", 
        "id": 1653, 
        "title": "%MOVE_foam%___const___"
    }, 
    {
        "body": "\n\n%MED_YIELDSTRESS_PROJ% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%MED_YIELDSTRESS_PROJ%___const___.html", 
        "id": 1654, 
        "title": "%MED_YIELDSTRESS_PROJ%___const___"
    }, 
    {
        "body": "\n\n%MEM_STATISTICS_ALLOC% ...  parameter for the real()-function (equation parser) \n\n\n  see real()  \n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%MEM_STATISTICS_ALLOC%___const___.html", 
        "id": 1655, 
        "title": "%MEM_STATISTICS_ALLOC%___const___"
    }, 
    {
        "body": "\n\n%MEM_STATISTICS_AVAIL% ...  parameter for the real()-function (equation parser) \n\n\n  see real()  \n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%MEM_STATISTICS_AVAIL%___const___.html", 
        "id": 1656, 
        "title": "%MEM_STATISTICS_AVAIL%___const___"
    }, 
    {
        "body": "\n\n%MONITORPOINTS_CREATION_AtBoundary% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nMONITORPOINTS_CREATION  ...  create monitor points due given conditions \n%MONITORPOINTS_CREATION_AtBoundary%  ...  create monitor points due given conditions and place it AT BOUNDARY \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%MONITORPOINTS_CREATION_AtBoundary%___const___.html", 
        "id": 1657, 
        "title": "%MONITORPOINTS_CREATION_AtBoundary%___const___"
    }, 
    {
        "body": "\n\n%MONITORPOINTS_CREATION_Inside% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nMONITORPOINTS_CREATION  ...  create monitor points due given conditions \n%MONITORPOINTS_CREATION_Inside%  ...  create monitor points due given conditions, but do not attach to boundary \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%MONITORPOINTS_CREATION_Inside%___const___.html", 
        "id": 1658, 
        "title": "%MONITORPOINTS_CREATION_Inside%___const___"
    }, 
    {
        "body": "\n\n%MONITORPOINTS_CREATION_IrreducibleFPMpoint% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n%ind_MARKER%  ...  unique marker (integer number) is particle is flagged as irreducible \nMONITORPOINTS_CREATION  ...  create monitor points due given conditions \n%MONITORPOINTS_CREATION_IrreducibleFPMpoint%  ...  mark FPM points to be irreducible \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%MONITORPOINTS_CREATION_IrreducibleFPMpoint%___const___.html", 
        "id": 1659, 
        "title": "%MONITORPOINTS_CREATION_IrreducibleFPMpoint%___const___"
    }, 
    {
        "body": "\n\n%MONITORPOINTS_CREATION_PenetrationOfBlindAndEmptyBoundary% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nMONITORPOINTS_CREATION  ...  create monitor points due given conditions \n%MONITORPOINTS_CREATION_PenetrationOfBlindAndEmptyBoundary%  ...  create monitor point if FPM point penetrates BND_BlindAndEmpty boundaries \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%MONITORPOINTS_CREATION_PenetrationOfBlindAndEmptyBoundary%___const___.html", 
        "id": 1660, 
        "title": "%MONITORPOINTS_CREATION_PenetrationOfBlindAndEmptyBoundary%___const___"
    }, 
    {
        "body": "\n\n%MONITOR_NbParticles% ...  parameter for the real()-function (equation parser) \n\n\n  see real()  \n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%MONITOR_NbParticles%___const___.html", 
        "id": 1661, 
        "title": "%MONITOR_NbParticles%___const___"
    }, 
    {
        "body": "\n\n%MOVE_ElasticBeam% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n%MOVE_ElasticBeam%  ...  special setting for a beam-like structure that moves like a dmaped elastic beam \nReleases  ...  information on the MESHFREE releases \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%MOVE_ElasticBeam%___const___.html", 
        "id": 1662, 
        "title": "%MOVE_ElasticBeam%___const___"
    }, 
    {
        "body": "\n\n%MOVE_InvokeDataCaching% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n%MOVE_position%  ...  give s time sequence of positions which is to be followed by the geometry \n%MOVE_rotation%  ...  prescribe a rotation movement \n%MOVE_velocity%  ...  prescribe a movement by given velocity \n%MOVE_TranslationRotation%  ...  prescribe a translation with rotation on top of it \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%MOVE_InvokeDataCaching%___const___.html", 
        "id": 1663, 
        "title": "%MOVE_InvokeDataCaching%___const___"
    }, 
    {
        "body": "\n\n%MOVE_ProjectionOfMovementOfAnotherPart% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n%MOVE_ProjectionOfMovementOfAnotherPart%  ...  boundary elements will follow the movement of a defined geometry part \nReleases  ...  information on the MESHFREE releases \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%MOVE_ProjectionOfMovementOfAnotherPart%___const___.html", 
        "id": 1664, 
        "title": "%MOVE_ProjectionOfMovementOfAnotherPart%___const___"
    }, 
    {
        "body": "\n\n%MOVE_TowardsPhaseBoundary% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%MOVE_TowardsPhaseBoundary%___const___.html", 
        "id": 1665, 
        "title": "%MOVE_TowardsPhaseBoundary%___const___"
    }, 
    {
        "body": "\n\n%MOVE_TranslationRotation% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nMOVE  ...  move parts of the boundary by explicit statement \n%MOVE_TranslationRotation%  ...  prescribe a translation with rotation on top of it \n%MOVE_ProjectionOfMovementOfAnotherPart%  ...  boundary elements will follow the movement of a defined geometry part \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%MOVE_TranslationRotation%___const___.html", 
        "id": 1666, 
        "title": "%MOVE_TranslationRotation%___const___"
    }, 
    {
        "body": "\n\n%MOVE_VirtualRotation% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n%MOVE_TranslationRotation%  ...  prescribe a translation with rotation on top of it \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%MOVE_VirtualRotation%___const___.html", 
        "id": 1667, 
        "title": "%MOVE_VirtualRotation%___const___"
    }, 
    {
        "body": "\n\n%MOVE_position% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nMOVE  ...  move parts of the boundary by explicit statement \n%MOVE_position%  ...  give s time sequence of positions which is to be followed by the geometry \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%MOVE_position%___const___.html", 
        "id": 1668, 
        "title": "%MOVE_position%___const___"
    }, 
    {
        "body": "\n\n%MOVE_rigid% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nMOVE  ...  move parts of the boundary by explicit statement \n%MOVE_rigid%  ...  rigid body movement (translation and rotation) due to acting forces of the flow \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%MOVE_rigid%___const___.html", 
        "id": 1669, 
        "title": "%MOVE_rigid%___const___"
    }, 
    {
        "body": "\n\n%MOVE_rigid_noinertia% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%MOVE_rigid_noinertia%___const___.html", 
        "id": 1670, 
        "title": "%MOVE_rigid_noinertia%___const___"
    }, 
    {
        "body": "\n\n%MOVE_rotation% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nMOVE  ...  move parts of the boundary by explicit statement \n%MOVE_rotation%  ...  prescribe a rotation movement \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%MOVE_rotation%___const___.html", 
        "id": 1671, 
        "title": "%MOVE_rotation%___const___"
    }, 
    {
        "body": "\n\n%MOVE_velocity% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nMOVE  ...  move parts of the boundary by explicit statement \n%MOVE_position%  ...  give s time sequence of positions which is to be followed by the geometry \n%MOVE_velocity%  ...  prescribe a movement by given velocity \n%MOVE_TranslationRotation%  ...  prescribe a translation with rotation on top of it \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%MOVE_velocity%___const___.html", 
        "id": 1672, 
        "title": "%MOVE_velocity%___const___"
    }, 
    {
        "body": "\n\n%MOVE_vertuschka% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n%MOVE_vertuschka%  ...  special setting for VERTUSCHKA, a specific scientific laboratory test in geo mechanics \nReleases  ...  information on the MESHFREE releases \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%MOVE_vertuschka%___const___.html", 
        "id": 1673, 
        "title": "%MOVE_vertuschka%___const___"
    }, 
    {
        "body": "\n\n%MPI_NbProcesses% ...  parameter for the real()-function (equation parser) \n\n\n  see real()  \n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%MPI_NbProcesses%___const___.html", 
        "id": 1674, 
        "title": "%MPI_NbProcesses%___const___"
    }, 
    {
        "body": "\n\n%NumberTimeStepsExecuted% ...  parameter for the real()-function (equation parser) \n\n\n  see real()  \n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%NumberTimeStepsExecuted%___const___.html", 
        "id": 1675, 
        "title": "%NumberTimeStepsExecuted%___const___"
    }, 
    {
        "body": "\n\n%OMP_NbProcesses% ...  parameter for the real()-function (equation parser) \n\n\n  see real()  \n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%OMP_NbProcesses%___const___.html", 
        "id": 1676, 
        "title": "%OMP_NbProcesses%___const___"
    }, 
    {
        "body": "\n\n%OR% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n%MONITORPOINTS_CREATION_AtBoundary%  ...  create monitor points due given conditions and place it AT BOUNDARY \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%OR%___const___.html", 
        "id": 1677, 
        "title": "%OR%___const___"
    }, 
    {
        "body": "\n\n%ORGANIZE_NbParticles% ...  parameter for the real()-function (equation parser) \n\n\n  see real()  \n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%ORGANIZE_NbParticles%___const___.html", 
        "id": 1678, 
        "title": "%ORGANIZE_NbParticles%___const___"
    }, 
    {
        "body": "\n\n%PBE_Gaussian_OPMSP% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%PBE_Gaussian_OPMSP%___const___.html", 
        "id": 1679, 
        "title": "%PBE_Gaussian_OPMSP%___const___"
    }, 
    {
        "body": "\n\n%PBE_Gaussian_OPMSP_diff% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%PBE_Gaussian_OPMSP_diff%___const___.html", 
        "id": 1680, 
        "title": "%PBE_Gaussian_OPMSP_diff%___const___"
    }, 
    {
        "body": "\n\n%POINT_APPROXIMATE% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nINTEGRATION  ...  Integration of the simulation results \n%POINT_APPROXIMATE%  ...  approximate any given function at a BND_point by FPM interpolation \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%POINT_APPROXIMATE%___const___.html", 
        "id": 1681, 
        "title": "%POINT_APPROXIMATE%___const___"
    }, 
    {
        "body": "\n\n%POINT_DIRECT% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nINTEGRATION  ...  Integration of the simulation results \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%POINT_DIRECT%___const___.html", 
        "id": 1682, 
        "title": "%POINT_DIRECT%___const___"
    }, 
    {
        "body": "\n\n%POSTBND_ENGY% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%POSTBND_ENGY%___const___.html", 
        "id": 1683, 
        "title": "%POSTBND_ENGY%___const___"
    }, 
    {
        "body": "\n\n%POSTBND_ENGYint% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%POSTBND_ENGYint%___const___.html", 
        "id": 1684, 
        "title": "%POSTBND_ENGYint%___const___"
    }, 
    {
        "body": "\n\n%POSTBND_FRCE% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%POSTBND_FRCE%___const___.html", 
        "id": 1685, 
        "title": "%POSTBND_FRCE%___const___"
    }, 
    {
        "body": "\n\n%POSTBND_FRCEint% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%POSTBND_FRCEint%___const___.html", 
        "id": 1686, 
        "title": "%POSTBND_FRCEint%___const___"
    }, 
    {
        "body": "\n\n%POSTBND_HEAT% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%POSTBND_HEAT%___const___.html", 
        "id": 1687, 
        "title": "%POSTBND_HEAT%___const___"
    }, 
    {
        "body": "\n\n%POSTBND_HEATint% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%POSTBND_HEATint%___const___.html", 
        "id": 1688, 
        "title": "%POSTBND_HEATint%___const___"
    }, 
    {
        "body": "\n\n%POSTBND_MASS% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%POSTBND_MASS%___const___.html", 
        "id": 1689, 
        "title": "%POSTBND_MASS%___const___"
    }, 
    {
        "body": "\n\n%POSTBND_MASSint% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%POSTBND_MASSint%___const___.html", 
        "id": 1690, 
        "title": "%POSTBND_MASSint%___const___"
    }, 
    {
        "body": "\n\n%POSTBND_MOM% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%POSTBND_MOM%___const___.html", 
        "id": 1691, 
        "title": "%POSTBND_MOM%___const___"
    }, 
    {
        "body": "\n\n%POSTBND_MOMint% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%POSTBND_MOMint%___const___.html", 
        "id": 1692, 
        "title": "%POSTBND_MOMint%___const___"
    }, 
    {
        "body": "\n\n%POSTBND_VOL% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%POSTBND_VOL%___const___.html", 
        "id": 1693, 
        "title": "%POSTBND_VOL%___const___"
    }, 
    {
        "body": "\n\n%POSTBND_VOLint% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%POSTBND_VOLint%___const___.html", 
        "id": 1694, 
        "title": "%POSTBND_VOLint%___const___"
    }, 
    {
        "body": "\n\n%POSTVOL_ENGY% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%POSTVOL_ENGY%___const___.html", 
        "id": 1695, 
        "title": "%POSTVOL_ENGY%___const___"
    }, 
    {
        "body": "\n\n%POSTVOL_MASS% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%POSTVOL_MASS%___const___.html", 
        "id": 1696, 
        "title": "%POSTVOL_MASS%___const___"
    }, 
    {
        "body": "\n\n%POSTVOL_MOM% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%POSTVOL_MOM%___const___.html", 
        "id": 1697, 
        "title": "%POSTVOL_MOM%___const___"
    }, 
    {
        "body": "\n\n%POSTVOL_VOL% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%POSTVOL_VOL%___const___.html", 
        "id": 1698, 
        "title": "%POSTVOL_VOL%___const___"
    }, 
    {
        "body": "\n\n%PUBLICVALUE% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nINTEGRATION  ...  Integration of the simulation results \n__HeaderInfoOrComments__  ...  optionally add comments to your intergration items \n%PUBLICVALUE_CLOCKstatistics%  ...  extract value from a given stop watch \n%PUBLICVALUE_CPUstatistics%  ...  extract value from a given stop watch \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%PUBLICVALUE%___const___.html", 
        "id": 1699, 
        "title": "%PUBLICVALUE%___const___"
    }, 
    {
        "body": "\n\n%PUBLICVALUE_CLOCKstatistics% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nINTEGRATION  ...  Integration of the simulation results \n%PUBLICVALUE_CLOCKstatistics%  ...  extract value from a given stop watch \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%PUBLICVALUE_CLOCKstatistics%___const___.html", 
        "id": 1700, 
        "title": "%PUBLICVALUE_CLOCKstatistics%___const___"
    }, 
    {
        "body": "\n\n%PUBLICVALUE_CPUstatistics% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nINTEGRATION  ...  Integration of the simulation results \n%PUBLICVALUE_CPUstatistics%  ...  extract value from a given stop watch \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%PUBLICVALUE_CPUstatistics%___const___.html", 
        "id": 1701, 
        "title": "%PUBLICVALUE_CPUstatistics%___const___"
    }, 
    {
        "body": "\n\n%PUBLICVALUE_SUM% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nINTEGRATION  ...  Integration of the simulation results \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%PUBLICVALUE_SUM%___const___.html", 
        "id": 1702, 
        "title": "%PUBLICVALUE_SUM%___const___"
    }, 
    {
        "body": "\n\n%PUBLICVALUE_TIME% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nINTEGRATION  ...  Integration of the simulation results \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%PUBLICVALUE_TIME%___const___.html", 
        "id": 1703, 
        "title": "%PUBLICVALUE_TIME%___const___"
    }, 
    {
        "body": "\n\n%PUBLICVALUE_xValueOfBNDpoint% ...  parameter for the real()-function (equation parser) \n\n\n  see real()  \n\n\n\n\nThis item is referenced in:\n\n\n%PUBLICVALUE_xValueOfBNDpoint%  ...  x-coordinate of the BND_point which carries a certain POSTROCESS-flag \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%PUBLICVALUE_xValueOfBNDpoint%___const___.html", 
        "id": 1704, 
        "title": "%PUBLICVALUE_xValueOfBNDpoint%___const___"
    }, 
    {
        "body": "\n\n%PUBLICVALUE_yValueOfBNDpoint% ...  parameter for the real()-function (equation parser) \n\n\n  see real()  \n\n\n\n\nThis item is referenced in:\n\n\n%PUBLICVALUE_yValueOfBNDpoint%  ...  y-coordinate of the BND_point which carries a certain POSTROCESS-flag \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%PUBLICVALUE_yValueOfBNDpoint%___const___.html", 
        "id": 1705, 
        "title": "%PUBLICVALUE_yValueOfBNDpoint%___const___"
    }, 
    {
        "body": "\n\n%PUBLICVALUE_zValueOfBNDpoint% ...  parameter for the real()-function (equation parser) \n\n\n  see real()  \n\n\n\n\nThis item is referenced in:\n\n\n%PUBLICVALUE_zValueOfBNDpoint%  ...  z-coordinate of the BND_point which carries a certain POSTROCESS-flag \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%PUBLICVALUE_zValueOfBNDpoint%___const___.html", 
        "id": 1706, 
        "title": "%PUBLICVALUE_zValueOfBNDpoint%___const___"
    }, 
    {
        "body": "\n\n%RESTART_sequence% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nRestartStepSize  ...  define after how many time cycles a restart file has to be generated \n%RESTART_sequence%  ...  define a sequence of restart files \nDefineRestart  ...  save restart files \nsave  ...  write an FPM restart file after the end of the current time step \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%RESTART_sequence%___const___.html", 
        "id": 1707, 
        "title": "%RESTART_sequence%___const___"
    }, 
    {
        "body": "\n\n%RESTART_single% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nRestartStepSize  ...  define after how many time cycles a restart file has to be generated \n%RESTART_single%  ...  define the production of a single restart file \nDefineRestart  ...  save restart files \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%RESTART_single%___const___.html", 
        "id": 1708, 
        "title": "%RESTART_single%___const___"
    }, 
    {
        "body": "\n\n%RealTimeSimulation% ...  parameter for the real()-function (equation parser) \n\n\n  see real()  \n\n\n\n\nThis item is referenced in:\n\n\n__HeaderInfoOrComments__  ...  optionally add comments to your intergration items \n%PUBLICVALUE_CLOCKstatistics%  ...  extract value from a given stop watch \n%PUBLICVALUE_CPUstatistics%  ...  extract value from a given stop watch \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%RealTimeSimulation%___const___.html", 
        "id": 1709, 
        "title": "%RealTimeSimulation%___const___"
    }, 
    {
        "body": "\n\n%SAVE_scalar% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nCuttingCurveCluster  ...  define clusters of boundary elements by cutting the geometry along given curves \nResults  ...  save computational results in different formats \nSAVE_ITEM  ...  item to be saved for visualization \nSAVE_MONITOR_ITEM  ...  monitor item to be saved for visualization \nSAVE_PID_ITEM  ...  save computational results in different formats \nASCII  ...  computation results column-wise in an ASCII formatted file \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%SAVE_scalar%___const___.html", 
        "id": 1710, 
        "title": "%SAVE_scalar%___const___"
    }, 
    {
        "body": "\n\n%SAVE_vector% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nResults  ...  save computational results in different formats \nSAVE_ITEM  ...  item to be saved for visualization \nSAVE_MONITOR_ITEM  ...  monitor item to be saved for visualization \nSAVE_PID_ITEM  ...  save computational results in different formats \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%SAVE_vector%___const___.html", 
        "id": 1711, 
        "title": "%SAVE_vector%___const___"
    }, 
    {
        "body": "\n\n%SPM_CompressedRowFormat% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%SPM_CompressedRowFormat%___const___.html", 
        "id": 1712, 
        "title": "%SPM_CompressedRowFormat%___const___"
    }, 
    {
        "body": "\n\n%TOUCH_always% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%TOUCH_always%___const___.html", 
        "id": 1713, 
        "title": "%TOUCH_always%___const___"
    }, 
    {
        "body": "\n\n%TOUCH_geometrical% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%TOUCH_geometrical%___const___.html", 
        "id": 1714, 
        "title": "%TOUCH_geometrical%___const___"
    }, 
    {
        "body": "\n\n%TOUCH_liquid% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%TOUCH_liquid%___const___.html", 
        "id": 1715, 
        "title": "%TOUCH_liquid%___const___"
    }, 
    {
        "body": "\n\n%TOUCH_never% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%TOUCH_never%___const___.html", 
        "id": 1716, 
        "title": "%TOUCH_never%___const___"
    }, 
    {
        "body": "\n\n%TOUCH_reflection% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\nReleases  ...  information on the MESHFREE releases \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%TOUCH_reflection%___const___.html", 
        "id": 1717, 
        "title": "%TOUCH_reflection%___const___"
    }, 
    {
        "body": "\n\n%TOUCH_solid% ...  \n\n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%TOUCH_solid%___const___.html", 
        "id": 1718, 
        "title": "%TOUCH_solid%___const___"
    }, 
    {
        "body": "\n\n%VMEM_STATISTICS_ALLOC% ...  parameter for the real()-function (equation parser) \n\n\n  see real()  \n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%VMEM_STATISTICS_ALLOC%___const___.html", 
        "id": 1719, 
        "title": "%VMEM_STATISTICS_ALLOC%___const___"
    }, 
    {
        "body": "\n\n%VMEM_STATISTICS_AVAIL% ...  parameter for the real()-function (equation parser) \n\n\n  see real()  \n\n\n\n\nThis item is referenced in:\n\n\n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_CONSTANTS.f90 \n\n\n\n", 
        "url": "../FPM.__Constants__.%VMEM_STATISTICS_AVAIL%___const___.html", 
        "id": 1720, 
        "title": "%VMEM_STATISTICS_AVAIL%___const___"
    }, 
    {
        "body": "\n\nRewriting ...  step by step rewriting of parts of the organization of the point cloud \n\n\n  TOPICS  \n  hole filling and reduction interior  \n  distance to boundary  \n  detection of free surface  \n  detection of the active boundary particles  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Core/PointcloudOrganization/ORGANIZE/organize_points.f90 \n\n\n\n", 
        "url": "../FPMdevelopment.Coding.Rewriting.html", 
        "id": 1721, 
        "title": "Rewriting"
    }, 
    {
        "body": "\n\nCommenting\n\n\n\n\n\nList of members:\n\n\nTODOs  ... TODOs\n\n\n\n\n\n", 
        "url": "../FPMdevelopment.Coding.Commenting.html", 
        "id": 1722, 
        "title": "Commenting"
    }, 
    {
        "body": "\n\nTODOs\n\n\n\n\n\nList of members:\n\n\n%ind_create%  ...  comments in FPMDOCU needed \n\n\n\n\n\n", 
        "url": "../FPMdevelopment.Coding.Commenting.TODOs.html", 
        "id": 1723, 
        "title": "TODOs"
    }, 
    {
        "body": "\n\n%ind_create% ...  comments in FPMDOCU needed \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPMdevelopment.Coding.Commenting.TODOs.%ind_create%.html", 
        "id": 1724, 
        "title": "%ind_create%"
    }, 
    {
        "body": "\n\nIndices\n\n\n\n\n\nList of members:\n\n\nind_highlight  ...  can be deleted??? \nind_evoid  ...  void ratio in barodesy model \nind_volstrain  ...  volumetric strain in barodesy model \nind_S_nc  ...  normal component of stress tensor (nSn) in barodesy model \n\n\n\n\n\n", 
        "url": "../FPMdevelopment.Coding.Indices.html", 
        "id": 1725, 
        "title": "Indices"
    }, 
    {
        "body": "\n\nind_highlight ...  can be deleted??? \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPMdevelopment.Coding.Indices.ind_highlight.html", 
        "id": 1726, 
        "title": "ind_highlight"
    }, 
    {
        "body": "\n\nind_evoid ...  void ratio in barodesy model \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPMdevelopment.Coding.Indices.ind_evoid.html", 
        "id": 1727, 
        "title": "ind_evoid"
    }, 
    {
        "body": "\n\nind_volstrain ...  volumetric strain in barodesy model \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPMdevelopment.Coding.Indices.ind_volstrain.html", 
        "id": 1728, 
        "title": "ind_volstrain"
    }, 
    {
        "body": "\n\nind_S_nc ...  normal component of stress tensor (nSn) in barodesy model \n\n\n    \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPMdevelopment.Coding.Indices.ind_S_nc.html", 
        "id": 1729, 
        "title": "ind_S_nc"
    }, 
    {
        "body": "\n\nRefactoring\n\n\n\n\n\nList of members:\n\n\nTODOs  ... TODOs\n\n\n\n\n\n", 
        "url": "../FPMdevelopment.Coding.Refactoring.html", 
        "id": 1730, 
        "title": "Refactoring"
    }, 
    {
        "body": "\n\nTODOs\n\n\n\n\n\nList of members:\n\n\nMxV  ...  split MxV into several subroutines \nMxV_prepare  ...  split MxV_prepare into several subroutines and \nUSER_boundary_conditions_LIQUID_3  ...  what can we do to make this more easy \n\n\n\n\n\n", 
        "url": "../FPMdevelopment.Coding.Refactoring.TODOs.html", 
        "id": 1731, 
        "title": "TODOs"
    }, 
    {
        "body": "\n\nMxV ...  split MxV into several subroutines \n\n\n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Solver/BasicSolver/Incompressible/MxV/MxV_3.f90 \n\n\n\n", 
        "url": "../FPMdevelopment.Coding.Refactoring.TODOs.MxV.html", 
        "id": 1732, 
        "title": "MxV"
    }, 
    {
        "body": "\n\nMxV_prepare ...  split MxV_prepare into several subroutines and \n\n\n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Solver/BasicSolver/Incompressible/MxV/MxV_prepare.f90 \n\n\n\n", 
        "url": "../FPMdevelopment.Coding.Refactoring.TODOs.MxV_prepare.html", 
        "id": 1733, 
        "title": "MxV_prepare"
    }, 
    {
        "body": "\n\nUSER_boundary_conditions_LIQUID_3 ...  what can we do to make this more easy \n\n\n   \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_boundary_conditions_LIQUID_3.f90 \n\n\n\n", 
        "url": "../FPMdevelopment.Coding.Refactoring.TODOs.USER_boundary_conditions_LIQUID_3.html", 
        "id": 1734, 
        "title": "USER_boundary_conditions_LIQUID_3"
    }, 
    {
        "body": "\n\nConventions\n\n\n\n\n\nList of members:\n\n\nLocalVariables  ... LocalVariables\n\n\n\n\n\n", 
        "url": "../FPMdevelopment.Coding.Conventions.html", 
        "id": 1735, 
        "title": "Conventions"
    }, 
    {
        "body": "\n\nLocalVariables\n\n\n  str = string  \n  len.... is the length of a string  \n  xVariable = coordinates  \n  nVariable = normals  \n  N... upper bound of an array  \n  i in front of local integers, Di denotes dummy integers  \n  D denotes local dummy variables (to be used only in a local part of the function)  \n  l or L in front of local logicals  \n  dummy NEVER array  \n  dummy ALWAYS real  \n  convention for integer dummies: Di, iDummy  \n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_liquid/USER_parse_Construct.f90 \n\n\n\n", 
        "url": "../FPMdevelopment.Coding.Conventions.LocalVariables.html", 
        "id": 1736, 
        "title": "LocalVariables"
    }, 
    {
        "body": "\n\nGeneral\n\n\n\n\n\nList of members:\n\n\nind_x_displaced  ...  ind_x_displaced really needed? What for? \n\n\n\n\n\n", 
        "url": "../FPMdevelopment.Indices.General___index___.html", 
        "id": 1737, 
        "title": "General___index___"
    }, 
    {
        "body": "\n\nind_x_displaced ...  ind_x_displaced really needed? What for? \n\n\n\n\n\n\n\n Source file of this page: ../../FPM_src/FPM_fortran/Misc/assign_INDICES.f90 \n\n\n\n", 
        "url": "../FPMdevelopment.Indices.General___index___.ind_x_displaced.html", 
        "id": 1738, 
        "title": "ind_x_displaced"
    }
]